/*
 * Generated by Robotoworks Mechanoid
 */
package com.robotoworks.examples.recipes.content.actions;

import android.content.ContentValues;
import android.database.sqlite.SQLiteDatabase;
import android.database.Cursor;
import android.net.Uri;
import com.robotoworks.mechanoid.content.ContentProviderActions;
import com.robotoworks.mechanoid.content.MechanoidContentProvider;
import com.robotoworks.mechanoid.sqlite.SQuery;
import com.robotoworks.mechanoid.sqlite.ActiveRecord;
import java.util.ArrayList;
import java.util.List;
import com.robotoworks.mechanoid.util.Closeables;

import com.robotoworks.examples.recipes.content.AbstractRecipesDBOpenHelper.Tables;
import com.robotoworks.examples.recipes.content.RecipesDBContract.Notes;
			
public abstract class AbstractNotesActions extends ContentProviderActions {
	@Override
	public int delete(MechanoidContentProvider provider, Uri uri, String selection, String[] selectionArgs){
		
		
		final SQLiteDatabase db = provider.getOpenHelper().getWritableDatabase();

		return db.delete(Tables.NOTES, selection, selectionArgs);
	}
	
	@Override
	public Uri insert(MechanoidContentProvider provider, Uri uri, ContentValues values){
		final SQLiteDatabase db = provider.getOpenHelper().getWritableDatabase();

		long id = db.insertOrThrow(Tables.NOTES, null, values);
		
		if(id > -1) {
			return Notes.buildUriWithId(id);
		}
		
		return null;
		
	}
	
	@Override
	public int update(MechanoidContentProvider provider, Uri uri, ContentValues values, String selection, String[] selectionArgs){
		final SQLiteDatabase db = provider.getOpenHelper().getWritableDatabase();
		
		int affected = db.update(Tables.NOTES, values, selection, selectionArgs);

		return affected;
	}

	@Override
	public Cursor query(MechanoidContentProvider provider, Uri uri, String[] projection, String selection, String[] selectionArgs, String sortOrder){
		final SQLiteDatabase db = provider.getOpenHelper().getWritableDatabase();
		
		return db.query(Tables.NOTES, projection, selection, selectionArgs, null, null, sortOrder);
	}
	
	@Override
    public int bulkInsert(MechanoidContentProvider provider, Uri uri, ContentValues[] values) {

    	final SQLiteDatabase db = provider.getOpenHelper().getWritableDatabase();
    	
    	int numValues = values.length;

    	try {
    	
	    	db.beginTransaction();
	    	
	        for (int i = 0; i < numValues; i++) {
	        	db.insertOrThrow(Tables.NOTES, null, values[i]);
	        }
			
			db.setTransactionSuccessful();

			
    	} finally {
    		db.endTransaction();
    	}
    	
    	return numValues;
    }
    
}
