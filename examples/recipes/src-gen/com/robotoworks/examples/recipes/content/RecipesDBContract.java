/*
 * Generated by Robotoworks Mechanoid
 */
package com.robotoworks.examples.recipes.content;

import android.content.ContentValues;
import android.net.Uri;
import android.provider.BaseColumns;
import android.content.ContentResolver;
import com.robotoworks.mechanoid.sqlite.SQuery;
import com.robotoworks.mechanoid.Mechanoid;
import com.robotoworks.mechanoid.content.MechanoidContentProvider;
import com.robotoworks.mechanoid.content.AbstractValuesBuilder;

public class RecipesDBContract  {
    public static final String CONTENT_AUTHORITY = "com.robotoworks.examples.recipes.content.recipesdb";

    private static final Uri BASE_CONTENT_URI = Uri.parse("content://" + CONTENT_AUTHORITY);

	interface RecipesColumns {
		String TITLE = "title";
		String DESCRIPTION = "description";
	}
	

			
	/**
	 * <p>Column definitions and helper methods to work with the Recipes table.</p>
	 */
	public static class Recipes implements RecipesColumns, BaseColumns {
	    public static final Uri CONTENT_URI = 
				BASE_CONTENT_URI.buildUpon().appendPath("recipes").build();
	
		/**
		 * <p>The content type for a cursor that contains many Recipes table rows.</p>
		 */
	    public static final String CONTENT_TYPE =
	            "vnd.android.cursor.dir/vnd.recipesdb.recipes";
		/**
		 * <p>The content type for a cursor that contains a single Recipes table row.</p>
		 */
	    public static final String ITEM_CONTENT_TYPE =
	            "vnd.android.cursor.item/vnd.recipesdb.recipes";
	
		/**
		 * <p>Builds a Uri with appended id for a row in the Recipes table, 
		 * eg:- content://com.robotoworks.examples.recipes.content.recipesdb/recipes/123.</p>
		 */
	    public static Uri buildUriWithId(long id) {
	        return CONTENT_URI.buildUpon().appendPath(String.valueOf(id)).build();
	    }
	
		public static int delete() {
			return Mechanoid.getContentResolver().delete(CONTENT_URI, null, null);
		}
		
		public static int delete(String where, String[] selectionArgs) {
			return Mechanoid.getContentResolver().delete(CONTENT_URI, where, selectionArgs);
		}
		
		/**
		 * <p>Create a new Builder for Recipes</p>
		 */
		public static Builder newBuilder() {
			return new Builder();
		}
		
		/**
		 * <p>Build and execute insert or update statements for Recipes.</p>
		 *
		 * <p>Use {@link Recipes#newBuilder()} to create new builder</p>
		 */
		public static class Builder extends AbstractValuesBuilder {
			private Builder() {
				super(Mechanoid.getApplicationContext(), CONTENT_URI);
			}
			
			public Builder setTitle(String value) {
				mValues.put(Recipes.TITLE, value);
				return this;
			}
			public Builder setDescription(String value) {
				mValues.put(Recipes.DESCRIPTION, value);
				return this;
			}
		}
	}
	

	

	private RecipesDBContract(){}
}
