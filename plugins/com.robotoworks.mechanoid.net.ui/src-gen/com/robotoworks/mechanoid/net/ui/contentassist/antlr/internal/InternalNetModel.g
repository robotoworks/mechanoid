/*
* generated by Xtext
*/
grammar InternalNetModel;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package com.robotoworks.mechanoid.net.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package com.robotoworks.mechanoid.net.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import com.robotoworks.mechanoid.net.services.NetModelGrammarAccess;

}

@parser::members {
 
 	private NetModelGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(NetModelGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group__0)
{ after(grammarAccess.getModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDeclaration
entryRuleDeclaration 
:
{ before(grammarAccess.getDeclarationRule()); }
	 ruleDeclaration
{ after(grammarAccess.getDeclarationRule()); } 
	 EOF 
;

// Rule Declaration
ruleDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeclarationAccess().getAlternatives()); }
(rule__Declaration__Alternatives)
{ after(grammarAccess.getDeclarationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClient
entryRuleClient 
:
{ before(grammarAccess.getClientRule()); }
	 ruleClient
{ after(grammarAccess.getClientRule()); } 
	 EOF 
;

// Rule Client
ruleClient
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClientAccess().getGroup()); }
(rule__Client__Group__0)
{ after(grammarAccess.getClientAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHeaderBlock
entryRuleHeaderBlock 
:
{ before(grammarAccess.getHeaderBlockRule()); }
	 ruleHeaderBlock
{ after(grammarAccess.getHeaderBlockRule()); } 
	 EOF 
;

// Rule HeaderBlock
ruleHeaderBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHeaderBlockAccess().getGroup()); }
(rule__HeaderBlock__Group__0)
{ after(grammarAccess.getHeaderBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHeader
entryRuleHeader 
:
{ before(grammarAccess.getHeaderRule()); }
	 ruleHeader
{ after(grammarAccess.getHeaderRule()); } 
	 EOF 
;

// Rule Header
ruleHeader
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHeaderAccess().getGroup()); }
(rule__Header__Group__0)
{ after(grammarAccess.getHeaderAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHttpMethod
entryRuleHttpMethod 
:
{ before(grammarAccess.getHttpMethodRule()); }
	 ruleHttpMethod
{ after(grammarAccess.getHttpMethodRule()); } 
	 EOF 
;

// Rule HttpMethod
ruleHttpMethod
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHttpMethodAccess().getAlternatives()); }
(rule__HttpMethod__Alternatives)
{ after(grammarAccess.getHttpMethodAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHttpPost
entryRuleHttpPost 
:
{ before(grammarAccess.getHttpPostRule()); }
	 ruleHttpPost
{ after(grammarAccess.getHttpPostRule()); } 
	 EOF 
;

// Rule HttpPost
ruleHttpPost
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHttpPostAccess().getGroup()); }
(rule__HttpPost__Group__0)
{ after(grammarAccess.getHttpPostAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHttpPut
entryRuleHttpPut 
:
{ before(grammarAccess.getHttpPutRule()); }
	 ruleHttpPut
{ after(grammarAccess.getHttpPutRule()); } 
	 EOF 
;

// Rule HttpPut
ruleHttpPut
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHttpPutAccess().getGroup()); }
(rule__HttpPut__Group__0)
{ after(grammarAccess.getHttpPutAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHttpGet
entryRuleHttpGet 
:
{ before(grammarAccess.getHttpGetRule()); }
	 ruleHttpGet
{ after(grammarAccess.getHttpGetRule()); } 
	 EOF 
;

// Rule HttpGet
ruleHttpGet
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHttpGetAccess().getGroup()); }
(rule__HttpGet__Group__0)
{ after(grammarAccess.getHttpGetAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHttpDelete
entryRuleHttpDelete 
:
{ before(grammarAccess.getHttpDeleteRule()); }
	 ruleHttpDelete
{ after(grammarAccess.getHttpDeleteRule()); } 
	 EOF 
;

// Rule HttpDelete
ruleHttpDelete
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHttpDeleteAccess().getGroup()); }
(rule__HttpDelete__Group__0)
{ after(grammarAccess.getHttpDeleteAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParamsBlock
entryRuleParamsBlock 
:
{ before(grammarAccess.getParamsBlockRule()); }
	 ruleParamsBlock
{ after(grammarAccess.getParamsBlockRule()); } 
	 EOF 
;

// Rule ParamsBlock
ruleParamsBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParamsBlockAccess().getGroup()); }
(rule__ParamsBlock__Group__0)
{ after(grammarAccess.getParamsBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBodyBlock
entryRuleBodyBlock 
:
{ before(grammarAccess.getBodyBlockRule()); }
	 ruleBodyBlock
{ after(grammarAccess.getBodyBlockRule()); } 
	 EOF 
;

// Rule BodyBlock
ruleBodyBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBodyBlockAccess().getGroup()); }
(rule__BodyBlock__Group__0)
{ after(grammarAccess.getBodyBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleResponseBlock
entryRuleResponseBlock 
:
{ before(grammarAccess.getResponseBlockRule()); }
	 ruleResponseBlock
{ after(grammarAccess.getResponseBlockRule()); } 
	 EOF 
;

// Rule ResponseBlock
ruleResponseBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getResponseBlockAccess().getGroup()); }
(rule__ResponseBlock__Group__0)
{ after(grammarAccess.getResponseBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBlockType
entryRuleBlockType 
:
{ before(grammarAccess.getBlockTypeRule()); }
	 ruleBlockType
{ after(grammarAccess.getBlockTypeRule()); } 
	 EOF 
;

// Rule BlockType
ruleBlockType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBlockTypeAccess().getAlternatives()); }
(rule__BlockType__Alternatives)
{ after(grammarAccess.getBlockTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMember
entryRuleMember 
:
{ before(grammarAccess.getMemberRule()); }
	 ruleMember
{ after(grammarAccess.getMemberRule()); } 
	 EOF 
;

// Rule Member
ruleMember
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMemberAccess().getAlternatives()); }
(rule__Member__Alternatives)
{ after(grammarAccess.getMemberAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypedMember
entryRuleTypedMember 
:
{ before(grammarAccess.getTypedMemberRule()); }
	 ruleTypedMember
{ after(grammarAccess.getTypedMemberRule()); } 
	 EOF 
;

// Rule TypedMember
ruleTypedMember
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypedMemberAccess().getGroup()); }
(rule__TypedMember__Group__0)
{ after(grammarAccess.getTypedMemberAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSkipMember
entryRuleSkipMember 
:
{ before(grammarAccess.getSkipMemberRule()); }
	 ruleSkipMember
{ after(grammarAccess.getSkipMemberRule()); } 
	 EOF 
;

// Rule SkipMember
ruleSkipMember
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSkipMemberAccess().getGroup()); }
(rule__SkipMember__Group__0)
{ after(grammarAccess.getSkipMemberAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSimpleMember
entryRuleSimpleMember 
:
{ before(grammarAccess.getSimpleMemberRule()); }
	 ruleSimpleMember
{ after(grammarAccess.getSimpleMemberRule()); } 
	 EOF 
;

// Rule SimpleMember
ruleSimpleMember
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimpleMemberAccess().getGroup()); }
(rule__SimpleMember__Group__0)
{ after(grammarAccess.getSimpleMemberAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType
entryRuleType 
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeAccess().getAlternatives()); }
(rule__Type__Alternatives)
{ after(grammarAccess.getTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGenericListType
entryRuleGenericListType 
:
{ before(grammarAccess.getGenericListTypeRule()); }
	 ruleGenericListType
{ after(grammarAccess.getGenericListTypeRule()); } 
	 EOF 
;

// Rule GenericListType
ruleGenericListType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGenericListTypeAccess().getGroup()); }
(rule__GenericListType__Group__0)
{ after(grammarAccess.getGenericListTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUserType
entryRuleUserType 
:
{ before(grammarAccess.getUserTypeRule()); }
	 ruleUserType
{ after(grammarAccess.getUserTypeRule()); } 
	 EOF 
;

// Rule UserType
ruleUserType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUserTypeAccess().getDeclarationAssignment()); }
(rule__UserType__DeclarationAssignment)
{ after(grammarAccess.getUserTypeAccess().getDeclarationAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUserTypeDeclaration
entryRuleUserTypeDeclaration 
:
{ before(grammarAccess.getUserTypeDeclarationRule()); }
	 ruleUserTypeDeclaration
{ after(grammarAccess.getUserTypeDeclarationRule()); } 
	 EOF 
;

// Rule UserTypeDeclaration
ruleUserTypeDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUserTypeDeclarationAccess().getAlternatives()); }
(rule__UserTypeDeclaration__Alternatives)
{ after(grammarAccess.getUserTypeDeclarationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleComplexTypeDeclaration
entryRuleComplexTypeDeclaration 
:
{ before(grammarAccess.getComplexTypeDeclarationRule()); }
	 ruleComplexTypeDeclaration
{ after(grammarAccess.getComplexTypeDeclarationRule()); } 
	 EOF 
;

// Rule ComplexTypeDeclaration
ruleComplexTypeDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getComplexTypeDeclarationAccess().getGroup()); }
(rule__ComplexTypeDeclaration__Group__0)
{ after(grammarAccess.getComplexTypeDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumTypeDeclaration
entryRuleEnumTypeDeclaration 
:
{ before(grammarAccess.getEnumTypeDeclarationRule()); }
	 ruleEnumTypeDeclaration
{ after(grammarAccess.getEnumTypeDeclarationRule()); } 
	 EOF 
;

// Rule EnumTypeDeclaration
ruleEnumTypeDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumTypeDeclarationAccess().getGroup()); }
(rule__EnumTypeDeclaration__Group__0)
{ after(grammarAccess.getEnumTypeDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumTypeLiteral
entryRuleEnumTypeLiteral 
:
{ before(grammarAccess.getEnumTypeLiteralRule()); }
	 ruleEnumTypeLiteral
{ after(grammarAccess.getEnumTypeLiteralRule()); } 
	 EOF 
;

// Rule EnumTypeLiteral
ruleEnumTypeLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumTypeLiteralAccess().getGroup()); }
(rule__EnumTypeLiteral__Group__0)
{ after(grammarAccess.getEnumTypeLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumMember
entryRuleEnumMember 
:
{ before(grammarAccess.getEnumMemberRule()); }
	 ruleEnumMember
{ after(grammarAccess.getEnumMemberRule()); } 
	 EOF 
;

// Rule EnumMember
ruleEnumMember
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumMemberAccess().getGroup()); }
(rule__EnumMember__Group__0)
{ after(grammarAccess.getEnumMemberAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleComplexTypeLiteral
entryRuleComplexTypeLiteral 
:
{ before(grammarAccess.getComplexTypeLiteralRule()); }
	 ruleComplexTypeLiteral
{ after(grammarAccess.getComplexTypeLiteralRule()); } 
	 EOF 
;

// Rule ComplexTypeLiteral
ruleComplexTypeLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getComplexTypeLiteralAccess().getGroup()); }
(rule__ComplexTypeLiteral__Group__0)
{ after(grammarAccess.getComplexTypeLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntrinsicType
entryRuleIntrinsicType 
:
{ before(grammarAccess.getIntrinsicTypeRule()); }
	 ruleIntrinsicType
{ after(grammarAccess.getIntrinsicTypeRule()); } 
	 EOF 
;

// Rule IntrinsicType
ruleIntrinsicType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntrinsicTypeAccess().getAlternatives()); }
(rule__IntrinsicType__Alternatives)
{ after(grammarAccess.getIntrinsicTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringType
entryRuleStringType 
:
{ before(grammarAccess.getStringTypeRule()); }
	 ruleStringType
{ after(grammarAccess.getStringTypeRule()); } 
	 EOF 
;

// Rule StringType
ruleStringType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringTypeAccess().getIdAssignment()); }
(rule__StringType__IdAssignment)
{ after(grammarAccess.getStringTypeAccess().getIdAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanType
entryRuleBooleanType 
:
{ before(grammarAccess.getBooleanTypeRule()); }
	 ruleBooleanType
{ after(grammarAccess.getBooleanTypeRule()); } 
	 EOF 
;

// Rule BooleanType
ruleBooleanType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanTypeAccess().getIdAssignment()); }
(rule__BooleanType__IdAssignment)
{ after(grammarAccess.getBooleanTypeAccess().getIdAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNumericType
entryRuleNumericType 
:
{ before(grammarAccess.getNumericTypeRule()); }
	 ruleNumericType
{ after(grammarAccess.getNumericTypeRule()); } 
	 EOF 
;

// Rule NumericType
ruleNumericType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNumericTypeAccess().getAlternatives()); }
(rule__NumericType__Alternatives)
{ after(grammarAccess.getNumericTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntegerType
entryRuleIntegerType 
:
{ before(grammarAccess.getIntegerTypeRule()); }
	 ruleIntegerType
{ after(grammarAccess.getIntegerTypeRule()); } 
	 EOF 
;

// Rule IntegerType
ruleIntegerType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntegerTypeAccess().getIdAssignment()); }
(rule__IntegerType__IdAssignment)
{ after(grammarAccess.getIntegerTypeAccess().getIdAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLongType
entryRuleLongType 
:
{ before(grammarAccess.getLongTypeRule()); }
	 ruleLongType
{ after(grammarAccess.getLongTypeRule()); } 
	 EOF 
;

// Rule LongType
ruleLongType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLongTypeAccess().getIdAssignment()); }
(rule__LongType__IdAssignment)
{ after(grammarAccess.getLongTypeAccess().getIdAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDoubleType
entryRuleDoubleType 
:
{ before(grammarAccess.getDoubleTypeRule()); }
	 ruleDoubleType
{ after(grammarAccess.getDoubleTypeRule()); } 
	 EOF 
;

// Rule DoubleType
ruleDoubleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDoubleTypeAccess().getIdAssignment()); }
(rule__DoubleType__IdAssignment)
{ after(grammarAccess.getDoubleTypeAccess().getIdAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFQN
entryRuleFQN 
:
{ before(grammarAccess.getFQNRule()); }
	 ruleFQN
{ after(grammarAccess.getFQNRule()); } 
	 EOF 
;

// Rule FQN
ruleFQN
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFQNAccess().getGroup()); }
(rule__FQN__Group__0)
{ after(grammarAccess.getFQNAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Declaration__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getUserTypeDeclarationParserRuleCall_0()); }
	ruleUserTypeDeclaration
{ after(grammarAccess.getDeclarationAccess().getUserTypeDeclarationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDeclarationAccess().getClientParserRuleCall_1()); }
	ruleClient
{ after(grammarAccess.getDeclarationAccess().getClientParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HttpMethod__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHttpMethodAccess().getHttpPostParserRuleCall_0()); }
	ruleHttpPost
{ after(grammarAccess.getHttpMethodAccess().getHttpPostParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getHttpMethodAccess().getHttpGetParserRuleCall_1()); }
	ruleHttpGet
{ after(grammarAccess.getHttpMethodAccess().getHttpGetParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getHttpMethodAccess().getHttpPutParserRuleCall_2()); }
	ruleHttpPut
{ after(grammarAccess.getHttpMethodAccess().getHttpPutParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getHttpMethodAccess().getHttpDeleteParserRuleCall_3()); }
	ruleHttpDelete
{ after(grammarAccess.getHttpMethodAccess().getHttpDeleteParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BlockType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockTypeAccess().getTypeParserRuleCall_0()); }
	ruleType
{ after(grammarAccess.getBlockTypeAccess().getTypeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getBlockTypeAccess().getComplexTypeLiteralParserRuleCall_1()); }
	ruleComplexTypeLiteral
{ after(grammarAccess.getBlockTypeAccess().getComplexTypeLiteralParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Member__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberAccess().getTypedMemberParserRuleCall_0()); }
	ruleTypedMember
{ after(grammarAccess.getMemberAccess().getTypedMemberParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getMemberAccess().getSkipMemberParserRuleCall_1()); }
	ruleSkipMember
{ after(grammarAccess.getMemberAccess().getSkipMemberParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypedMember__NameAlternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedMemberAccess().getNameIDTerminalRuleCall_0_0_0()); }
	RULE_ID
{ after(grammarAccess.getTypedMemberAccess().getNameIDTerminalRuleCall_0_0_0()); }
)

    |(
{ before(grammarAccess.getTypedMemberAccess().getNameSTRINGTerminalRuleCall_0_0_1()); }
	RULE_STRING
{ after(grammarAccess.getTypedMemberAccess().getNameSTRINGTerminalRuleCall_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SkipMember__NameAlternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSkipMemberAccess().getNameIDTerminalRuleCall_0_0_0()); }
	RULE_ID
{ after(grammarAccess.getSkipMemberAccess().getNameIDTerminalRuleCall_0_0_0()); }
)

    |(
{ before(grammarAccess.getSkipMemberAccess().getNameSTRINGTerminalRuleCall_0_0_1()); }
	RULE_STRING
{ after(grammarAccess.getSkipMemberAccess().getNameSTRINGTerminalRuleCall_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleMember__NameAlternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleMemberAccess().getNameIDTerminalRuleCall_0_0_0()); }
	RULE_ID
{ after(grammarAccess.getSimpleMemberAccess().getNameIDTerminalRuleCall_0_0_0()); }
)

    |(
{ before(grammarAccess.getSimpleMemberAccess().getNameSTRINGTerminalRuleCall_0_0_1()); }
	RULE_STRING
{ after(grammarAccess.getSimpleMemberAccess().getNameSTRINGTerminalRuleCall_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getUserTypeParserRuleCall_0()); }
	ruleUserType
{ after(grammarAccess.getTypeAccess().getUserTypeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getIntrinsicTypeParserRuleCall_1()); }
	ruleIntrinsicType
{ after(grammarAccess.getTypeAccess().getIntrinsicTypeParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getGenericListTypeParserRuleCall_2()); }
	ruleGenericListType
{ after(grammarAccess.getTypeAccess().getGenericListTypeParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GenericListType__ElementTypeAlternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenericListTypeAccess().getElementTypeUserTypeParserRuleCall_0_0_0()); }
	ruleUserType
{ after(grammarAccess.getGenericListTypeAccess().getElementTypeUserTypeParserRuleCall_0_0_0()); }
)

    |(
{ before(grammarAccess.getGenericListTypeAccess().getElementTypeIntrinsicTypeParserRuleCall_0_0_1()); }
	ruleIntrinsicType
{ after(grammarAccess.getGenericListTypeAccess().getElementTypeIntrinsicTypeParserRuleCall_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UserTypeDeclaration__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserTypeDeclarationAccess().getComplexTypeDeclarationParserRuleCall_0()); }
	ruleComplexTypeDeclaration
{ after(grammarAccess.getUserTypeDeclarationAccess().getComplexTypeDeclarationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getUserTypeDeclarationAccess().getEnumTypeDeclarationParserRuleCall_1()); }
	ruleEnumTypeDeclaration
{ after(grammarAccess.getUserTypeDeclarationAccess().getEnumTypeDeclarationParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntrinsicType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntrinsicTypeAccess().getStringTypeParserRuleCall_0()); }
	ruleStringType
{ after(grammarAccess.getIntrinsicTypeAccess().getStringTypeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getIntrinsicTypeAccess().getBooleanTypeParserRuleCall_1()); }
	ruleBooleanType
{ after(grammarAccess.getIntrinsicTypeAccess().getBooleanTypeParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getIntrinsicTypeAccess().getNumericTypeParserRuleCall_2()); }
	ruleNumericType
{ after(grammarAccess.getIntrinsicTypeAccess().getNumericTypeParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumericType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericTypeAccess().getIntegerTypeParserRuleCall_0()); }
	ruleIntegerType
{ after(grammarAccess.getNumericTypeAccess().getIntegerTypeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNumericTypeAccess().getLongTypeParserRuleCall_1()); }
	ruleLongType
{ after(grammarAccess.getNumericTypeAccess().getLongTypeParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getNumericTypeAccess().getDoubleTypeParserRuleCall_2()); }
	ruleDoubleType
{ after(grammarAccess.getNumericTypeAccess().getDoubleTypeParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getPackageKeyword_0()); }

	'package' 

{ after(grammarAccess.getModelAccess().getPackageKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getPackageNameAssignment_1()); }
(rule__Model__PackageNameAssignment_1)
{ after(grammarAccess.getModelAccess().getPackageNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getDeclarationsAssignment_2()); }
(rule__Model__DeclarationsAssignment_2)*
{ after(grammarAccess.getModelAccess().getDeclarationsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Client__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Client__Group__0__Impl
	rule__Client__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Client__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClientAccess().getClientKeyword_0()); }

	'client' 

{ after(grammarAccess.getClientAccess().getClientKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Client__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Client__Group__1__Impl
	rule__Client__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Client__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClientAccess().getNameAssignment_1()); }
(rule__Client__NameAssignment_1)
{ after(grammarAccess.getClientAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Client__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Client__Group__2__Impl
	rule__Client__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Client__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClientAccess().getBaseUrlAssignment_2()); }
(rule__Client__BaseUrlAssignment_2)?
{ after(grammarAccess.getClientAccess().getBaseUrlAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Client__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Client__Group__3__Impl
	rule__Client__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Client__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClientAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getClientAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Client__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Client__Group__4__Impl
	rule__Client__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Client__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClientAccess().getHeadersAssignment_4()); }
(rule__Client__HeadersAssignment_4)?
{ after(grammarAccess.getClientAccess().getHeadersAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Client__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Client__Group__5__Impl
	rule__Client__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Client__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClientAccess().getParamsAssignment_5()); }
(rule__Client__ParamsAssignment_5)?
{ after(grammarAccess.getClientAccess().getParamsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Client__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Client__Group__6__Impl
	rule__Client__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Client__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClientAccess().getMethodsAssignment_6()); }
(rule__Client__MethodsAssignment_6)*
{ after(grammarAccess.getClientAccess().getMethodsAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Client__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Client__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Client__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClientAccess().getRightCurlyBracketKeyword_7()); }

	'}' 

{ after(grammarAccess.getClientAccess().getRightCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__HeaderBlock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HeaderBlock__Group__0__Impl
	rule__HeaderBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HeaderBlock__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeaderBlockAccess().getHeadersKeyword_0()); }

	'headers' 

{ after(grammarAccess.getHeaderBlockAccess().getHeadersKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HeaderBlock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HeaderBlock__Group__1__Impl
	rule__HeaderBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HeaderBlock__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeaderBlockAccess().getHeadersAssignment_1()); }
(rule__HeaderBlock__HeadersAssignment_1)
{ after(grammarAccess.getHeaderBlockAccess().getHeadersAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HeaderBlock__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HeaderBlock__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HeaderBlock__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeaderBlockAccess().getGroup_2()); }
(rule__HeaderBlock__Group_2__0)*
{ after(grammarAccess.getHeaderBlockAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__HeaderBlock__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HeaderBlock__Group_2__0__Impl
	rule__HeaderBlock__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HeaderBlock__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeaderBlockAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getHeaderBlockAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HeaderBlock__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HeaderBlock__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HeaderBlock__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeaderBlockAccess().getHeadersAssignment_2_1()); }
(rule__HeaderBlock__HeadersAssignment_2_1)
{ after(grammarAccess.getHeaderBlockAccess().getHeadersAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Header__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Header__Group__0__Impl
	rule__Header__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Header__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeaderAccess().getNameAssignment_0()); }
(rule__Header__NameAssignment_0)
{ after(grammarAccess.getHeaderAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Header__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Header__Group__1__Impl
	rule__Header__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Header__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeaderAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getHeaderAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Header__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Header__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Header__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeaderAccess().getValueAssignment_2()); }
(rule__Header__ValueAssignment_2)
{ after(grammarAccess.getHeaderAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__HttpPost__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HttpPost__Group__0__Impl
	rule__HttpPost__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HttpPost__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHttpPostAccess().getPostKeyword_0()); }

	'post' 

{ after(grammarAccess.getHttpPostAccess().getPostKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HttpPost__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HttpPost__Group__1__Impl
	rule__HttpPost__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HttpPost__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHttpPostAccess().getNameAssignment_1()); }
(rule__HttpPost__NameAssignment_1)
{ after(grammarAccess.getHttpPostAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HttpPost__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HttpPost__Group__2__Impl
	rule__HttpPost__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__HttpPost__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHttpPostAccess().getPathAssignment_2()); }
(rule__HttpPost__PathAssignment_2)?
{ after(grammarAccess.getHttpPostAccess().getPathAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HttpPost__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HttpPost__Group__3__Impl
	rule__HttpPost__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__HttpPost__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHttpPostAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getHttpPostAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HttpPost__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HttpPost__Group__4__Impl
	rule__HttpPost__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__HttpPost__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHttpPostAccess().getHeadersAssignment_4()); }
(rule__HttpPost__HeadersAssignment_4)?
{ after(grammarAccess.getHttpPostAccess().getHeadersAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HttpPost__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HttpPost__Group__5__Impl
	rule__HttpPost__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__HttpPost__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHttpPostAccess().getParamsAssignment_5()); }
(rule__HttpPost__ParamsAssignment_5)?
{ after(grammarAccess.getHttpPostAccess().getParamsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HttpPost__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HttpPost__Group__6__Impl
	rule__HttpPost__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__HttpPost__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHttpPostAccess().getBodyAssignment_6()); }
(rule__HttpPost__BodyAssignment_6)?
{ after(grammarAccess.getHttpPostAccess().getBodyAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HttpPost__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HttpPost__Group__7__Impl
	rule__HttpPost__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__HttpPost__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHttpPostAccess().getResponseAssignment_7()); }
(rule__HttpPost__ResponseAssignment_7)?
{ after(grammarAccess.getHttpPostAccess().getResponseAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HttpPost__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HttpPost__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HttpPost__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHttpPostAccess().getRightCurlyBracketKeyword_8()); }

	'}' 

{ after(grammarAccess.getHttpPostAccess().getRightCurlyBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__HttpPut__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HttpPut__Group__0__Impl
	rule__HttpPut__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HttpPut__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHttpPutAccess().getPutKeyword_0()); }

	'put' 

{ after(grammarAccess.getHttpPutAccess().getPutKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HttpPut__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HttpPut__Group__1__Impl
	rule__HttpPut__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HttpPut__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHttpPutAccess().getNameAssignment_1()); }
(rule__HttpPut__NameAssignment_1)
{ after(grammarAccess.getHttpPutAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HttpPut__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HttpPut__Group__2__Impl
	rule__HttpPut__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__HttpPut__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHttpPutAccess().getPathAssignment_2()); }
(rule__HttpPut__PathAssignment_2)?
{ after(grammarAccess.getHttpPutAccess().getPathAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HttpPut__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HttpPut__Group__3__Impl
	rule__HttpPut__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__HttpPut__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHttpPutAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getHttpPutAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HttpPut__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HttpPut__Group__4__Impl
	rule__HttpPut__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__HttpPut__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHttpPutAccess().getHeadersAssignment_4()); }
(rule__HttpPut__HeadersAssignment_4)?
{ after(grammarAccess.getHttpPutAccess().getHeadersAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HttpPut__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HttpPut__Group__5__Impl
	rule__HttpPut__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__HttpPut__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHttpPutAccess().getParamsAssignment_5()); }
(rule__HttpPut__ParamsAssignment_5)?
{ after(grammarAccess.getHttpPutAccess().getParamsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HttpPut__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HttpPut__Group__6__Impl
	rule__HttpPut__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__HttpPut__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHttpPutAccess().getBodyAssignment_6()); }
(rule__HttpPut__BodyAssignment_6)?
{ after(grammarAccess.getHttpPutAccess().getBodyAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HttpPut__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HttpPut__Group__7__Impl
	rule__HttpPut__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__HttpPut__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHttpPutAccess().getResponseAssignment_7()); }
(rule__HttpPut__ResponseAssignment_7)?
{ after(grammarAccess.getHttpPutAccess().getResponseAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HttpPut__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HttpPut__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HttpPut__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHttpPutAccess().getRightCurlyBracketKeyword_8()); }

	'}' 

{ after(grammarAccess.getHttpPutAccess().getRightCurlyBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__HttpGet__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HttpGet__Group__0__Impl
	rule__HttpGet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HttpGet__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHttpGetAccess().getGetKeyword_0()); }

	'get' 

{ after(grammarAccess.getHttpGetAccess().getGetKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HttpGet__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HttpGet__Group__1__Impl
	rule__HttpGet__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HttpGet__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHttpGetAccess().getNameAssignment_1()); }
(rule__HttpGet__NameAssignment_1)
{ after(grammarAccess.getHttpGetAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HttpGet__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HttpGet__Group__2__Impl
	rule__HttpGet__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__HttpGet__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHttpGetAccess().getPathAssignment_2()); }
(rule__HttpGet__PathAssignment_2)?
{ after(grammarAccess.getHttpGetAccess().getPathAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HttpGet__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HttpGet__Group__3__Impl
	rule__HttpGet__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__HttpGet__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHttpGetAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getHttpGetAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HttpGet__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HttpGet__Group__4__Impl
	rule__HttpGet__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__HttpGet__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHttpGetAccess().getHeadersAssignment_4()); }
(rule__HttpGet__HeadersAssignment_4)?
{ after(grammarAccess.getHttpGetAccess().getHeadersAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HttpGet__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HttpGet__Group__5__Impl
	rule__HttpGet__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__HttpGet__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHttpGetAccess().getParamsAssignment_5()); }
(rule__HttpGet__ParamsAssignment_5)?
{ after(grammarAccess.getHttpGetAccess().getParamsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HttpGet__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HttpGet__Group__6__Impl
	rule__HttpGet__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__HttpGet__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHttpGetAccess().getResponseAssignment_6()); }
(rule__HttpGet__ResponseAssignment_6)?
{ after(grammarAccess.getHttpGetAccess().getResponseAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HttpGet__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HttpGet__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HttpGet__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHttpGetAccess().getRightCurlyBracketKeyword_7()); }

	'}' 

{ after(grammarAccess.getHttpGetAccess().getRightCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__HttpDelete__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HttpDelete__Group__0__Impl
	rule__HttpDelete__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HttpDelete__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHttpDeleteAccess().getDeleteKeyword_0()); }

	'delete' 

{ after(grammarAccess.getHttpDeleteAccess().getDeleteKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HttpDelete__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HttpDelete__Group__1__Impl
	rule__HttpDelete__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HttpDelete__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHttpDeleteAccess().getNameAssignment_1()); }
(rule__HttpDelete__NameAssignment_1)
{ after(grammarAccess.getHttpDeleteAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HttpDelete__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HttpDelete__Group__2__Impl
	rule__HttpDelete__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__HttpDelete__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHttpDeleteAccess().getPathAssignment_2()); }
(rule__HttpDelete__PathAssignment_2)?
{ after(grammarAccess.getHttpDeleteAccess().getPathAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HttpDelete__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HttpDelete__Group__3__Impl
	rule__HttpDelete__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__HttpDelete__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHttpDeleteAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getHttpDeleteAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HttpDelete__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HttpDelete__Group__4__Impl
	rule__HttpDelete__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__HttpDelete__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHttpDeleteAccess().getHeadersAssignment_4()); }
(rule__HttpDelete__HeadersAssignment_4)?
{ after(grammarAccess.getHttpDeleteAccess().getHeadersAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HttpDelete__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HttpDelete__Group__5__Impl
	rule__HttpDelete__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__HttpDelete__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHttpDeleteAccess().getParamsAssignment_5()); }
(rule__HttpDelete__ParamsAssignment_5)?
{ after(grammarAccess.getHttpDeleteAccess().getParamsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HttpDelete__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HttpDelete__Group__6__Impl
	rule__HttpDelete__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__HttpDelete__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHttpDeleteAccess().getResponseAssignment_6()); }
(rule__HttpDelete__ResponseAssignment_6)?
{ after(grammarAccess.getHttpDeleteAccess().getResponseAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HttpDelete__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HttpDelete__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HttpDelete__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHttpDeleteAccess().getRightCurlyBracketKeyword_7()); }

	'}' 

{ after(grammarAccess.getHttpDeleteAccess().getRightCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__ParamsBlock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParamsBlock__Group__0__Impl
	rule__ParamsBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamsBlock__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamsBlockAccess().getParamsBlockAction_0()); }
(

)
{ after(grammarAccess.getParamsBlockAccess().getParamsBlockAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParamsBlock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParamsBlock__Group__1__Impl
	rule__ParamsBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamsBlock__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamsBlockAccess().getParamsKeyword_1()); }

	'params' 

{ after(grammarAccess.getParamsBlockAccess().getParamsKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParamsBlock__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParamsBlock__Group__2__Impl
	rule__ParamsBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamsBlock__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamsBlockAccess().getParamsAssignment_2()); }
(rule__ParamsBlock__ParamsAssignment_2)*
{ after(grammarAccess.getParamsBlockAccess().getParamsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParamsBlock__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParamsBlock__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamsBlock__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamsBlockAccess().getGroup_3()); }
(rule__ParamsBlock__Group_3__0)*
{ after(grammarAccess.getParamsBlockAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ParamsBlock__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParamsBlock__Group_3__0__Impl
	rule__ParamsBlock__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamsBlock__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamsBlockAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getParamsBlockAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParamsBlock__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParamsBlock__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamsBlock__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamsBlockAccess().getParamsAssignment_3_1()); }
(rule__ParamsBlock__ParamsAssignment_3_1)
{ after(grammarAccess.getParamsBlockAccess().getParamsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BodyBlock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BodyBlock__Group__0__Impl
	rule__BodyBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BodyBlock__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyBlockAccess().getBodyKeyword_0()); }

	'body' 

{ after(grammarAccess.getBodyBlockAccess().getBodyKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BodyBlock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BodyBlock__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BodyBlock__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyBlockAccess().getTypeAssignment_1()); }
(rule__BodyBlock__TypeAssignment_1)
{ after(grammarAccess.getBodyBlockAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ResponseBlock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResponseBlock__Group__0__Impl
	rule__ResponseBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ResponseBlock__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResponseBlockAccess().getResponseBlockAction_0()); }
(

)
{ after(grammarAccess.getResponseBlockAccess().getResponseBlockAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResponseBlock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResponseBlock__Group__1__Impl
	rule__ResponseBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ResponseBlock__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResponseBlockAccess().getResponseKeyword_1()); }

	'response' 

{ after(grammarAccess.getResponseBlockAccess().getResponseKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResponseBlock__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResponseBlock__Group__2__Impl
	rule__ResponseBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ResponseBlock__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResponseBlockAccess().getGroup_2()); }
(rule__ResponseBlock__Group_2__0)?
{ after(grammarAccess.getResponseBlockAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResponseBlock__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResponseBlock__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ResponseBlock__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResponseBlockAccess().getTypeAssignment_3()); }
(rule__ResponseBlock__TypeAssignment_3)?
{ after(grammarAccess.getResponseBlockAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ResponseBlock__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResponseBlock__Group_2__0__Impl
	rule__ResponseBlock__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ResponseBlock__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResponseBlockAccess().getExtendsKeyword_2_0()); }

	'extends' 

{ after(grammarAccess.getResponseBlockAccess().getExtendsKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResponseBlock__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResponseBlock__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ResponseBlock__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResponseBlockAccess().getSuperTypeAssignment_2_1()); }
(rule__ResponseBlock__SuperTypeAssignment_2_1)
{ after(grammarAccess.getResponseBlockAccess().getSuperTypeAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypedMember__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedMember__Group__0__Impl
	rule__TypedMember__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedMember__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedMemberAccess().getNameAssignment_0()); }
(rule__TypedMember__NameAssignment_0)
{ after(grammarAccess.getTypedMemberAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedMember__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedMember__Group__1__Impl
	rule__TypedMember__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedMember__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedMemberAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getTypedMemberAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedMember__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedMember__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedMember__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedMemberAccess().getTypeAssignment_2()); }
(rule__TypedMember__TypeAssignment_2)
{ after(grammarAccess.getTypedMemberAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SkipMember__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SkipMember__Group__0__Impl
	rule__SkipMember__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SkipMember__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSkipMemberAccess().getNameAssignment_0()); }
(rule__SkipMember__NameAssignment_0)
{ after(grammarAccess.getSkipMemberAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SkipMember__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SkipMember__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SkipMember__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSkipMemberAccess().getLiteralAssignment_1()); }
(rule__SkipMember__LiteralAssignment_1)
{ after(grammarAccess.getSkipMemberAccess().getLiteralAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SimpleMember__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleMember__Group__0__Impl
	rule__SimpleMember__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleMember__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleMemberAccess().getNameAssignment_0()); }
(rule__SimpleMember__NameAssignment_0)
{ after(grammarAccess.getSimpleMemberAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleMember__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleMember__Group__1__Impl
	rule__SimpleMember__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleMember__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleMemberAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getSimpleMemberAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleMember__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleMember__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleMember__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleMemberAccess().getTypeAssignment_2()); }
(rule__SimpleMember__TypeAssignment_2)
{ after(grammarAccess.getSimpleMemberAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__GenericListType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GenericListType__Group__0__Impl
	rule__GenericListType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericListType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenericListTypeAccess().getElementTypeAssignment_0()); }
(rule__GenericListType__ElementTypeAssignment_0)
{ after(grammarAccess.getGenericListTypeAccess().getElementTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GenericListType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GenericListType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericListType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenericListTypeAccess().getIdAssignment_1()); }
(rule__GenericListType__IdAssignment_1)
{ after(grammarAccess.getGenericListTypeAccess().getIdAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ComplexTypeDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComplexTypeDeclaration__Group__0__Impl
	rule__ComplexTypeDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexTypeDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexTypeDeclarationAccess().getKeywordAssignment_0()); }
(rule__ComplexTypeDeclaration__KeywordAssignment_0)
{ after(grammarAccess.getComplexTypeDeclarationAccess().getKeywordAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComplexTypeDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComplexTypeDeclaration__Group__1__Impl
	rule__ComplexTypeDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexTypeDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexTypeDeclarationAccess().getGenAssignment_1()); }
(rule__ComplexTypeDeclaration__GenAssignment_1)?
{ after(grammarAccess.getComplexTypeDeclarationAccess().getGenAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComplexTypeDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComplexTypeDeclaration__Group__2__Impl
	rule__ComplexTypeDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexTypeDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexTypeDeclarationAccess().getNameAssignment_2()); }
(rule__ComplexTypeDeclaration__NameAssignment_2)
{ after(grammarAccess.getComplexTypeDeclarationAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComplexTypeDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComplexTypeDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexTypeDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexTypeDeclarationAccess().getLiteralAssignment_3()); }
(rule__ComplexTypeDeclaration__LiteralAssignment_3)?
{ after(grammarAccess.getComplexTypeDeclarationAccess().getLiteralAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__EnumTypeDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumTypeDeclaration__Group__0__Impl
	rule__EnumTypeDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeDeclarationAccess().getKeywordAssignment_0()); }
(rule__EnumTypeDeclaration__KeywordAssignment_0)
{ after(grammarAccess.getEnumTypeDeclarationAccess().getKeywordAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumTypeDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumTypeDeclaration__Group__1__Impl
	rule__EnumTypeDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeDeclarationAccess().getGenAssignment_1()); }
(rule__EnumTypeDeclaration__GenAssignment_1)?
{ after(grammarAccess.getEnumTypeDeclarationAccess().getGenAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumTypeDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumTypeDeclaration__Group__2__Impl
	rule__EnumTypeDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeDeclarationAccess().getNameAssignment_2()); }
(rule__EnumTypeDeclaration__NameAssignment_2)
{ after(grammarAccess.getEnumTypeDeclarationAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumTypeDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumTypeDeclaration__Group__3__Impl
	rule__EnumTypeDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeDeclarationAccess().getGroup_3()); }
(rule__EnumTypeDeclaration__Group_3__0)?
{ after(grammarAccess.getEnumTypeDeclarationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumTypeDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumTypeDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeDeclarationAccess().getLiteralAssignment_4()); }
(rule__EnumTypeDeclaration__LiteralAssignment_4)?
{ after(grammarAccess.getEnumTypeDeclarationAccess().getLiteralAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__EnumTypeDeclaration__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumTypeDeclaration__Group_3__0__Impl
	rule__EnumTypeDeclaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeDeclaration__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeDeclarationAccess().getExtendsKeyword_3_0()); }

	'extends' 

{ after(grammarAccess.getEnumTypeDeclarationAccess().getExtendsKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumTypeDeclaration__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumTypeDeclaration__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeDeclaration__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeDeclarationAccess().getSuperTypeAssignment_3_1()); }
(rule__EnumTypeDeclaration__SuperTypeAssignment_3_1)
{ after(grammarAccess.getEnumTypeDeclarationAccess().getSuperTypeAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EnumTypeLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumTypeLiteral__Group__0__Impl
	rule__EnumTypeLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeLiteralAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getEnumTypeLiteralAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumTypeLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumTypeLiteral__Group__1__Impl
	rule__EnumTypeLiteral__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeLiteralAccess().getMembersAssignment_1()); }
(rule__EnumTypeLiteral__MembersAssignment_1)
{ after(grammarAccess.getEnumTypeLiteralAccess().getMembersAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumTypeLiteral__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumTypeLiteral__Group__2__Impl
	rule__EnumTypeLiteral__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeLiteral__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeLiteralAccess().getGroup_2()); }
(rule__EnumTypeLiteral__Group_2__0)*
{ after(grammarAccess.getEnumTypeLiteralAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumTypeLiteral__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumTypeLiteral__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeLiteral__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeLiteralAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getEnumTypeLiteralAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__EnumTypeLiteral__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumTypeLiteral__Group_2__0__Impl
	rule__EnumTypeLiteral__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeLiteral__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeLiteralAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getEnumTypeLiteralAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumTypeLiteral__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumTypeLiteral__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeLiteral__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeLiteralAccess().getMembersAssignment_2_1()); }
(rule__EnumTypeLiteral__MembersAssignment_2_1)
{ after(grammarAccess.getEnumTypeLiteralAccess().getMembersAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EnumMember__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumMember__Group__0__Impl
	rule__EnumMember__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumMember__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumMemberAccess().getNameAssignment_0()); }
(rule__EnumMember__NameAssignment_0)
{ after(grammarAccess.getEnumMemberAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumMember__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumMember__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumMember__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumMemberAccess().getGroup_1()); }
(rule__EnumMember__Group_1__0)?
{ after(grammarAccess.getEnumMemberAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EnumMember__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumMember__Group_1__0__Impl
	rule__EnumMember__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumMember__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumMemberAccess().getAssignmentAssignment_1_0()); }
(rule__EnumMember__AssignmentAssignment_1_0)
{ after(grammarAccess.getEnumMemberAccess().getAssignmentAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumMember__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumMember__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumMember__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumMemberAccess().getValueAssignment_1_1()); }
(rule__EnumMember__ValueAssignment_1_1)
{ after(grammarAccess.getEnumMemberAccess().getValueAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ComplexTypeLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComplexTypeLiteral__Group__0__Impl
	rule__ComplexTypeLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexTypeLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexTypeLiteralAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getComplexTypeLiteralAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComplexTypeLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComplexTypeLiteral__Group__1__Impl
	rule__ComplexTypeLiteral__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexTypeLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexTypeLiteralAccess().getMembersAssignment_1()); }
(rule__ComplexTypeLiteral__MembersAssignment_1)
{ after(grammarAccess.getComplexTypeLiteralAccess().getMembersAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComplexTypeLiteral__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComplexTypeLiteral__Group__2__Impl
	rule__ComplexTypeLiteral__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexTypeLiteral__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexTypeLiteralAccess().getGroup_2()); }
(rule__ComplexTypeLiteral__Group_2__0)*
{ after(grammarAccess.getComplexTypeLiteralAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComplexTypeLiteral__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComplexTypeLiteral__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexTypeLiteral__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexTypeLiteralAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getComplexTypeLiteralAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ComplexTypeLiteral__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComplexTypeLiteral__Group_2__0__Impl
	rule__ComplexTypeLiteral__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexTypeLiteral__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexTypeLiteralAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getComplexTypeLiteralAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComplexTypeLiteral__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComplexTypeLiteral__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexTypeLiteral__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexTypeLiteralAccess().getMembersAssignment_2_1()); }
(rule__ComplexTypeLiteral__MembersAssignment_2_1)
{ after(grammarAccess.getComplexTypeLiteralAccess().getMembersAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FQN__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQN__Group__0__Impl
	rule__FQN__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getFQNAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FQN__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQN__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNAccess().getGroup_1()); }
(rule__FQN__Group_1__0)*
{ after(grammarAccess.getFQNAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FQN__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQN__Group_1__0__Impl
	rule__FQN__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getFQNAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FQN__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQN__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Model__PackageNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getPackageNameFQNParserRuleCall_1_0()); }
	ruleFQN{ after(grammarAccess.getModelAccess().getPackageNameFQNParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__DeclarationsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getDeclarationsDeclarationParserRuleCall_2_0()); }
	ruleDeclaration{ after(grammarAccess.getModelAccess().getDeclarationsDeclarationParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Client__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClientAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getClientAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Client__BaseUrlAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClientAccess().getBaseUrlSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getClientAccess().getBaseUrlSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Client__HeadersAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClientAccess().getHeadersHeaderBlockParserRuleCall_4_0()); }
	ruleHeaderBlock{ after(grammarAccess.getClientAccess().getHeadersHeaderBlockParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Client__ParamsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClientAccess().getParamsParamsBlockParserRuleCall_5_0()); }
	ruleParamsBlock{ after(grammarAccess.getClientAccess().getParamsParamsBlockParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Client__MethodsAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClientAccess().getMethodsHttpMethodParserRuleCall_6_0()); }
	ruleHttpMethod{ after(grammarAccess.getClientAccess().getMethodsHttpMethodParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HeaderBlock__HeadersAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeaderBlockAccess().getHeadersHeaderParserRuleCall_1_0()); }
	ruleHeader{ after(grammarAccess.getHeaderBlockAccess().getHeadersHeaderParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HeaderBlock__HeadersAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeaderBlockAccess().getHeadersHeaderParserRuleCall_2_1_0()); }
	ruleHeader{ after(grammarAccess.getHeaderBlockAccess().getHeadersHeaderParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Header__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeaderAccess().getNameSTRINGTerminalRuleCall_0_0()); }
	RULE_STRING{ after(grammarAccess.getHeaderAccess().getNameSTRINGTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Header__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeaderAccess().getValueSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getHeaderAccess().getValueSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HttpPost__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHttpPostAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getHttpPostAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HttpPost__PathAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHttpPostAccess().getPathSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getHttpPostAccess().getPathSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HttpPost__HeadersAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHttpPostAccess().getHeadersHeaderBlockParserRuleCall_4_0()); }
	ruleHeaderBlock{ after(grammarAccess.getHttpPostAccess().getHeadersHeaderBlockParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HttpPost__ParamsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHttpPostAccess().getParamsParamsBlockParserRuleCall_5_0()); }
	ruleParamsBlock{ after(grammarAccess.getHttpPostAccess().getParamsParamsBlockParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HttpPost__BodyAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHttpPostAccess().getBodyBodyBlockParserRuleCall_6_0()); }
	ruleBodyBlock{ after(grammarAccess.getHttpPostAccess().getBodyBodyBlockParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HttpPost__ResponseAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHttpPostAccess().getResponseResponseBlockParserRuleCall_7_0()); }
	ruleResponseBlock{ after(grammarAccess.getHttpPostAccess().getResponseResponseBlockParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HttpPut__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHttpPutAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getHttpPutAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HttpPut__PathAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHttpPutAccess().getPathSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getHttpPutAccess().getPathSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HttpPut__HeadersAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHttpPutAccess().getHeadersHeaderBlockParserRuleCall_4_0()); }
	ruleHeaderBlock{ after(grammarAccess.getHttpPutAccess().getHeadersHeaderBlockParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HttpPut__ParamsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHttpPutAccess().getParamsParamsBlockParserRuleCall_5_0()); }
	ruleParamsBlock{ after(grammarAccess.getHttpPutAccess().getParamsParamsBlockParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HttpPut__BodyAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHttpPutAccess().getBodyBodyBlockParserRuleCall_6_0()); }
	ruleBodyBlock{ after(grammarAccess.getHttpPutAccess().getBodyBodyBlockParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HttpPut__ResponseAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHttpPutAccess().getResponseResponseBlockParserRuleCall_7_0()); }
	ruleResponseBlock{ after(grammarAccess.getHttpPutAccess().getResponseResponseBlockParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HttpGet__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHttpGetAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getHttpGetAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HttpGet__PathAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHttpGetAccess().getPathSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getHttpGetAccess().getPathSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HttpGet__HeadersAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHttpGetAccess().getHeadersHeaderBlockParserRuleCall_4_0()); }
	ruleHeaderBlock{ after(grammarAccess.getHttpGetAccess().getHeadersHeaderBlockParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HttpGet__ParamsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHttpGetAccess().getParamsParamsBlockParserRuleCall_5_0()); }
	ruleParamsBlock{ after(grammarAccess.getHttpGetAccess().getParamsParamsBlockParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HttpGet__ResponseAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHttpGetAccess().getResponseResponseBlockParserRuleCall_6_0()); }
	ruleResponseBlock{ after(grammarAccess.getHttpGetAccess().getResponseResponseBlockParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HttpDelete__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHttpDeleteAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getHttpDeleteAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HttpDelete__PathAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHttpDeleteAccess().getPathSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getHttpDeleteAccess().getPathSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HttpDelete__HeadersAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHttpDeleteAccess().getHeadersHeaderBlockParserRuleCall_4_0()); }
	ruleHeaderBlock{ after(grammarAccess.getHttpDeleteAccess().getHeadersHeaderBlockParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HttpDelete__ParamsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHttpDeleteAccess().getParamsParamsBlockParserRuleCall_5_0()); }
	ruleParamsBlock{ after(grammarAccess.getHttpDeleteAccess().getParamsParamsBlockParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HttpDelete__ResponseAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHttpDeleteAccess().getResponseResponseBlockParserRuleCall_6_0()); }
	ruleResponseBlock{ after(grammarAccess.getHttpDeleteAccess().getResponseResponseBlockParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParamsBlock__ParamsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamsBlockAccess().getParamsSimpleMemberParserRuleCall_2_0()); }
	ruleSimpleMember{ after(grammarAccess.getParamsBlockAccess().getParamsSimpleMemberParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParamsBlock__ParamsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamsBlockAccess().getParamsSimpleMemberParserRuleCall_3_1_0()); }
	ruleSimpleMember{ after(grammarAccess.getParamsBlockAccess().getParamsSimpleMemberParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BodyBlock__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyBlockAccess().getTypeBlockTypeParserRuleCall_1_0()); }
	ruleBlockType{ after(grammarAccess.getBodyBlockAccess().getTypeBlockTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ResponseBlock__SuperTypeAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResponseBlockAccess().getSuperTypeComplexTypeDeclarationCrossReference_2_1_0()); }
(
{ before(grammarAccess.getResponseBlockAccess().getSuperTypeComplexTypeDeclarationIDTerminalRuleCall_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getResponseBlockAccess().getSuperTypeComplexTypeDeclarationIDTerminalRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getResponseBlockAccess().getSuperTypeComplexTypeDeclarationCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ResponseBlock__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResponseBlockAccess().getTypeBlockTypeParserRuleCall_3_0()); }
	ruleBlockType{ after(grammarAccess.getResponseBlockAccess().getTypeBlockTypeParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypedMember__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedMemberAccess().getNameAlternatives_0_0()); }
(rule__TypedMember__NameAlternatives_0_0)
{ after(grammarAccess.getTypedMemberAccess().getNameAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypedMember__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedMemberAccess().getTypeTypeParserRuleCall_2_0()); }
	ruleType{ after(grammarAccess.getTypedMemberAccess().getTypeTypeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SkipMember__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSkipMemberAccess().getNameAlternatives_0_0()); }
(rule__SkipMember__NameAlternatives_0_0)
{ after(grammarAccess.getSkipMemberAccess().getNameAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SkipMember__LiteralAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSkipMemberAccess().getLiteralComplexTypeLiteralParserRuleCall_1_0()); }
	ruleComplexTypeLiteral{ after(grammarAccess.getSkipMemberAccess().getLiteralComplexTypeLiteralParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleMember__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleMemberAccess().getNameAlternatives_0_0()); }
(rule__SimpleMember__NameAlternatives_0_0)
{ after(grammarAccess.getSimpleMemberAccess().getNameAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleMember__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleMemberAccess().getTypeIntrinsicTypeParserRuleCall_2_0()); }
	ruleIntrinsicType{ after(grammarAccess.getSimpleMemberAccess().getTypeIntrinsicTypeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GenericListType__ElementTypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenericListTypeAccess().getElementTypeAlternatives_0_0()); }
(rule__GenericListType__ElementTypeAlternatives_0_0)
{ after(grammarAccess.getGenericListTypeAccess().getElementTypeAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GenericListType__IdAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenericListTypeAccess().getIdLeftSquareBracketRightSquareBracketKeyword_1_0()); }
(
{ before(grammarAccess.getGenericListTypeAccess().getIdLeftSquareBracketRightSquareBracketKeyword_1_0()); }

	'[]' 

{ after(grammarAccess.getGenericListTypeAccess().getIdLeftSquareBracketRightSquareBracketKeyword_1_0()); }
)

{ after(grammarAccess.getGenericListTypeAccess().getIdLeftSquareBracketRightSquareBracketKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UserType__DeclarationAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserTypeAccess().getDeclarationUserTypeDeclarationCrossReference_0()); }
(
{ before(grammarAccess.getUserTypeAccess().getDeclarationUserTypeDeclarationIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getUserTypeAccess().getDeclarationUserTypeDeclarationIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getUserTypeAccess().getDeclarationUserTypeDeclarationCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexTypeDeclaration__KeywordAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexTypeDeclarationAccess().getKeywordEntityKeyword_0_0()); }
(
{ before(grammarAccess.getComplexTypeDeclarationAccess().getKeywordEntityKeyword_0_0()); }

	'entity' 

{ after(grammarAccess.getComplexTypeDeclarationAccess().getKeywordEntityKeyword_0_0()); }
)

{ after(grammarAccess.getComplexTypeDeclarationAccess().getKeywordEntityKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexTypeDeclaration__GenAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexTypeDeclarationAccess().getGenGenerateKeyword_1_0()); }
(
{ before(grammarAccess.getComplexTypeDeclarationAccess().getGenGenerateKeyword_1_0()); }

	'generate' 

{ after(grammarAccess.getComplexTypeDeclarationAccess().getGenGenerateKeyword_1_0()); }
)

{ after(grammarAccess.getComplexTypeDeclarationAccess().getGenGenerateKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexTypeDeclaration__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexTypeDeclarationAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getComplexTypeDeclarationAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexTypeDeclaration__LiteralAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexTypeDeclarationAccess().getLiteralComplexTypeLiteralParserRuleCall_3_0()); }
	ruleComplexTypeLiteral{ after(grammarAccess.getComplexTypeDeclarationAccess().getLiteralComplexTypeLiteralParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeDeclaration__KeywordAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeDeclarationAccess().getKeywordEnumKeyword_0_0()); }
(
{ before(grammarAccess.getEnumTypeDeclarationAccess().getKeywordEnumKeyword_0_0()); }

	'enum' 

{ after(grammarAccess.getEnumTypeDeclarationAccess().getKeywordEnumKeyword_0_0()); }
)

{ after(grammarAccess.getEnumTypeDeclarationAccess().getKeywordEnumKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeDeclaration__GenAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeDeclarationAccess().getGenGenerateKeyword_1_0()); }
(
{ before(grammarAccess.getEnumTypeDeclarationAccess().getGenGenerateKeyword_1_0()); }

	'generate' 

{ after(grammarAccess.getEnumTypeDeclarationAccess().getGenGenerateKeyword_1_0()); }
)

{ after(grammarAccess.getEnumTypeDeclarationAccess().getGenGenerateKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeDeclaration__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeDeclarationAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getEnumTypeDeclarationAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeDeclaration__SuperTypeAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeDeclarationAccess().getSuperTypeIntegerTypeParserRuleCall_3_1_0()); }
	ruleIntegerType{ after(grammarAccess.getEnumTypeDeclarationAccess().getSuperTypeIntegerTypeParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeDeclaration__LiteralAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeDeclarationAccess().getLiteralEnumTypeLiteralParserRuleCall_4_0()); }
	ruleEnumTypeLiteral{ after(grammarAccess.getEnumTypeDeclarationAccess().getLiteralEnumTypeLiteralParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeLiteral__MembersAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeLiteralAccess().getMembersEnumMemberParserRuleCall_1_0()); }
	ruleEnumMember{ after(grammarAccess.getEnumTypeLiteralAccess().getMembersEnumMemberParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeLiteral__MembersAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeLiteralAccess().getMembersEnumMemberParserRuleCall_2_1_0()); }
	ruleEnumMember{ after(grammarAccess.getEnumTypeLiteralAccess().getMembersEnumMemberParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumMember__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumMemberAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getEnumMemberAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumMember__AssignmentAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumMemberAccess().getAssignmentEqualsSignKeyword_1_0_0()); }
(
{ before(grammarAccess.getEnumMemberAccess().getAssignmentEqualsSignKeyword_1_0_0()); }

	'=' 

{ after(grammarAccess.getEnumMemberAccess().getAssignmentEqualsSignKeyword_1_0_0()); }
)

{ after(grammarAccess.getEnumMemberAccess().getAssignmentEqualsSignKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumMember__ValueAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumMemberAccess().getValueINTTerminalRuleCall_1_1_0()); }
	RULE_INT{ after(grammarAccess.getEnumMemberAccess().getValueINTTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexTypeLiteral__MembersAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexTypeLiteralAccess().getMembersMemberParserRuleCall_1_0()); }
	ruleMember{ after(grammarAccess.getComplexTypeLiteralAccess().getMembersMemberParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexTypeLiteral__MembersAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexTypeLiteralAccess().getMembersMemberParserRuleCall_2_1_0()); }
	ruleMember{ after(grammarAccess.getComplexTypeLiteralAccess().getMembersMemberParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringType__IdAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringTypeAccess().getIdStringKeyword_0()); }
(
{ before(grammarAccess.getStringTypeAccess().getIdStringKeyword_0()); }

	'String' 

{ after(grammarAccess.getStringTypeAccess().getIdStringKeyword_0()); }
)

{ after(grammarAccess.getStringTypeAccess().getIdStringKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanType__IdAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanTypeAccess().getIdBooleanKeyword_0()); }
(
{ before(grammarAccess.getBooleanTypeAccess().getIdBooleanKeyword_0()); }

	'boolean' 

{ after(grammarAccess.getBooleanTypeAccess().getIdBooleanKeyword_0()); }
)

{ after(grammarAccess.getBooleanTypeAccess().getIdBooleanKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerType__IdAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerTypeAccess().getIdIntKeyword_0()); }
(
{ before(grammarAccess.getIntegerTypeAccess().getIdIntKeyword_0()); }

	'int' 

{ after(grammarAccess.getIntegerTypeAccess().getIdIntKeyword_0()); }
)

{ after(grammarAccess.getIntegerTypeAccess().getIdIntKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LongType__IdAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLongTypeAccess().getIdLongKeyword_0()); }
(
{ before(grammarAccess.getLongTypeAccess().getIdLongKeyword_0()); }

	'long' 

{ after(grammarAccess.getLongTypeAccess().getIdLongKeyword_0()); }
)

{ after(grammarAccess.getLongTypeAccess().getIdLongKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DoubleType__IdAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoubleTypeAccess().getIdDoubleKeyword_0()); }
(
{ before(grammarAccess.getDoubleTypeAccess().getIdDoubleKeyword_0()); }

	'double' 

{ after(grammarAccess.getDoubleTypeAccess().getIdDoubleKeyword_0()); }
)

{ after(grammarAccess.getDoubleTypeAccess().getIdDoubleKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


