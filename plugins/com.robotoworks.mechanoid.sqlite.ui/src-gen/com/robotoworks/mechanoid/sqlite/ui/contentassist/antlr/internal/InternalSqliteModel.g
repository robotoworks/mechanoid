/*
* generated by Xtext
*/
grammar InternalSqliteModel;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package com.robotoworks.mechanoid.sqlite.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package com.robotoworks.mechanoid.sqlite.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import com.robotoworks.mechanoid.sqlite.services.SqliteModelGrammarAccess;

}

@parser::members {
 
 	private SqliteModelGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(SqliteModelGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group__0)
{ after(grammarAccess.getModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDatabaseBlock
entryRuleDatabaseBlock 
:
{ before(grammarAccess.getDatabaseBlockRule()); }
	 ruleDatabaseBlock
{ after(grammarAccess.getDatabaseBlockRule()); } 
	 EOF 
;

// Rule DatabaseBlock
ruleDatabaseBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDatabaseBlockAccess().getGroup()); }
(rule__DatabaseBlock__Group__0)
{ after(grammarAccess.getDatabaseBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConfigBlock
entryRuleConfigBlock 
:
{ before(grammarAccess.getConfigBlockRule()); }
	 ruleConfigBlock
{ after(grammarAccess.getConfigBlockRule()); } 
	 EOF 
;

// Rule ConfigBlock
ruleConfigBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConfigBlockAccess().getGroup()); }
(rule__ConfigBlock__Group__0)
{ after(grammarAccess.getConfigBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConfigurationStatement
entryRuleConfigurationStatement 
:
{ before(grammarAccess.getConfigurationStatementRule()); }
	 ruleConfigurationStatement
{ after(grammarAccess.getConfigurationStatementRule()); } 
	 EOF 
;

// Rule ConfigurationStatement
ruleConfigurationStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConfigurationStatementAccess().getGroup()); }
(rule__ConfigurationStatement__Group__0)
{ after(grammarAccess.getConfigurationStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMigrationBlock
entryRuleMigrationBlock 
:
{ before(grammarAccess.getMigrationBlockRule()); }
	 ruleMigrationBlock
{ after(grammarAccess.getMigrationBlockRule()); } 
	 EOF 
;

// Rule MigrationBlock
ruleMigrationBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMigrationBlockAccess().getGroup()); }
(rule__MigrationBlock__Group__0)
{ after(grammarAccess.getMigrationBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSqlExpression
entryRuleSqlExpression 
:
{ before(grammarAccess.getSqlExpressionRule()); }
	 ruleSqlExpression
{ after(grammarAccess.getSqlExpressionRule()); } 
	 EOF 
;

// Rule SqlExpression
ruleSqlExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSqlExpressionAccess().getExprConcatParserRuleCall()); }
	ruleExprConcat
{ after(grammarAccess.getSqlExpressionAccess().getExprConcatParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExprConcat
entryRuleExprConcat 
:
{ before(grammarAccess.getExprConcatRule()); }
	 ruleExprConcat
{ after(grammarAccess.getExprConcatRule()); } 
	 EOF 
;

// Rule ExprConcat
ruleExprConcat
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExprConcatAccess().getGroup()); }
(rule__ExprConcat__Group__0)
{ after(grammarAccess.getExprConcatAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExprMult
entryRuleExprMult 
:
{ before(grammarAccess.getExprMultRule()); }
	 ruleExprMult
{ after(grammarAccess.getExprMultRule()); } 
	 EOF 
;

// Rule ExprMult
ruleExprMult
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExprMultAccess().getGroup()); }
(rule__ExprMult__Group__0)
{ after(grammarAccess.getExprMultAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExprAdd
entryRuleExprAdd 
:
{ before(grammarAccess.getExprAddRule()); }
	 ruleExprAdd
{ after(grammarAccess.getExprAddRule()); } 
	 EOF 
;

// Rule ExprAdd
ruleExprAdd
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExprAddAccess().getGroup()); }
(rule__ExprAdd__Group__0)
{ after(grammarAccess.getExprAddAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExprBit
entryRuleExprBit 
:
{ before(grammarAccess.getExprBitRule()); }
	 ruleExprBit
{ after(grammarAccess.getExprBitRule()); } 
	 EOF 
;

// Rule ExprBit
ruleExprBit
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExprBitAccess().getGroup()); }
(rule__ExprBit__Group__0)
{ after(grammarAccess.getExprBitAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExprRelate
entryRuleExprRelate 
:
{ before(grammarAccess.getExprRelateRule()); }
	 ruleExprRelate
{ after(grammarAccess.getExprRelateRule()); } 
	 EOF 
;

// Rule ExprRelate
ruleExprRelate
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExprRelateAccess().getGroup()); }
(rule__ExprRelate__Group__0)
{ after(grammarAccess.getExprRelateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExprEqual
entryRuleExprEqual 
:
{ before(grammarAccess.getExprEqualRule()); }
	 ruleExprEqual
{ after(grammarAccess.getExprEqualRule()); } 
	 EOF 
;

// Rule ExprEqual
ruleExprEqual
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExprEqualAccess().getGroup()); }
(rule__ExprEqual__Group__0)
{ after(grammarAccess.getExprEqualAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExprAnd
entryRuleExprAnd 
:
{ before(grammarAccess.getExprAndRule()); }
	 ruleExprAnd
{ after(grammarAccess.getExprAndRule()); } 
	 EOF 
;

// Rule ExprAnd
ruleExprAnd
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExprAndAccess().getGroup()); }
(rule__ExprAnd__Group__0)
{ after(grammarAccess.getExprAndAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExprOr
entryRuleExprOr 
:
{ before(grammarAccess.getExprOrRule()); }
	 ruleExprOr
{ after(grammarAccess.getExprOrRule()); } 
	 EOF 
;

// Rule ExprOr
ruleExprOr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExprOrAccess().getGroup()); }
(rule__ExprOr__Group__0)
{ after(grammarAccess.getExprOrAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNullCheckExpression
entryRuleNullCheckExpression 
:
{ before(grammarAccess.getNullCheckExpressionRule()); }
	 ruleNullCheckExpression
{ after(grammarAccess.getNullCheckExpressionRule()); } 
	 EOF 
;

// Rule NullCheckExpression
ruleNullCheckExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNullCheckExpressionAccess().getGroup()); }
(rule__NullCheckExpression__Group__0)
{ after(grammarAccess.getNullCheckExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNullExpression
entryRuleNullExpression 
:
{ before(grammarAccess.getNullExpressionRule()); }
	 ruleNullExpression
{ after(grammarAccess.getNullExpressionRule()); } 
	 EOF 
;

// Rule NullExpression
ruleNullExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNullExpressionAccess().getAlternatives()); }
(rule__NullExpression__Alternatives)
{ after(grammarAccess.getNullExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression 
:
{ before(grammarAccess.getPrimaryExpressionRule()); }
	 rulePrimaryExpression
{ after(grammarAccess.getPrimaryExpressionRule()); } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
(rule__PrimaryExpression__Alternatives)
{ after(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCase
entryRuleCase 
:
{ before(grammarAccess.getCaseRule()); }
	 ruleCase
{ after(grammarAccess.getCaseRule()); } 
	 EOF 
;

// Rule Case
ruleCase
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCaseAccess().getGroup()); }
(rule__Case__Group__0)
{ after(grammarAccess.getCaseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDDLStatement
entryRuleDDLStatement 
:
{ before(grammarAccess.getDDLStatementRule()); }
	 ruleDDLStatement
{ after(grammarAccess.getDDLStatementRule()); } 
	 EOF 
;

// Rule DDLStatement
ruleDDLStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDDLStatementAccess().getAlternatives()); }
(rule__DDLStatement__Alternatives)
{ after(grammarAccess.getDDLStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDMLStatement
entryRuleDMLStatement 
:
{ before(grammarAccess.getDMLStatementRule()); }
	 ruleDMLStatement
{ after(grammarAccess.getDMLStatementRule()); } 
	 EOF 
;

// Rule DMLStatement
ruleDMLStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDMLStatementAccess().getAlternatives()); }
(rule__DMLStatement__Alternatives)
{ after(grammarAccess.getDMLStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDeleteStatement
entryRuleDeleteStatement 
:
{ before(grammarAccess.getDeleteStatementRule()); }
	 ruleDeleteStatement
{ after(grammarAccess.getDeleteStatementRule()); } 
	 EOF 
;

// Rule DeleteStatement
ruleDeleteStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeleteStatementAccess().getGroup()); }
(rule__DeleteStatement__Group__0)
{ after(grammarAccess.getDeleteStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInsertStatement
entryRuleInsertStatement 
:
{ before(grammarAccess.getInsertStatementRule()); }
	 ruleInsertStatement
{ after(grammarAccess.getInsertStatementRule()); } 
	 EOF 
;

// Rule InsertStatement
ruleInsertStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInsertStatementAccess().getGroup()); }
(rule__InsertStatement__Group__0)
{ after(grammarAccess.getInsertStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUpdateStatement
entryRuleUpdateStatement 
:
{ before(grammarAccess.getUpdateStatementRule()); }
	 ruleUpdateStatement
{ after(grammarAccess.getUpdateStatementRule()); } 
	 EOF 
;

// Rule UpdateStatement
ruleUpdateStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUpdateStatementAccess().getGroup()); }
(rule__UpdateStatement__Group__0)
{ after(grammarAccess.getUpdateStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUpdateColumnExpression
entryRuleUpdateColumnExpression 
:
{ before(grammarAccess.getUpdateColumnExpressionRule()); }
	 ruleUpdateColumnExpression
{ after(grammarAccess.getUpdateColumnExpressionRule()); } 
	 EOF 
;

// Rule UpdateColumnExpression
ruleUpdateColumnExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUpdateColumnExpressionAccess().getGroup()); }
(rule__UpdateColumnExpression__Group__0)
{ after(grammarAccess.getUpdateColumnExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSelectStatement
entryRuleSelectStatement 
:
{ before(grammarAccess.getSelectStatementRule()); }
	 ruleSelectStatement
{ after(grammarAccess.getSelectStatementRule()); } 
	 EOF 
;

// Rule SelectStatement
ruleSelectStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSelectStatementAccess().getGroup()); }
(rule__SelectStatement__Group__0)
{ after(grammarAccess.getSelectStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSelectCore
entryRuleSelectCore 
:
{ before(grammarAccess.getSelectCoreRule()); }
	 ruleSelectCore
{ after(grammarAccess.getSelectCoreRule()); } 
	 EOF 
;

// Rule SelectCore
ruleSelectCore
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSelectCoreAccess().getGroup()); }
(rule__SelectCore__Group__0)
{ after(grammarAccess.getSelectCoreAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSelectCoreOperand
entryRuleSelectCoreOperand 
:
{ before(grammarAccess.getSelectCoreOperandRule()); }
	 ruleSelectCoreOperand
{ after(grammarAccess.getSelectCoreOperandRule()); } 
	 EOF 
;

// Rule SelectCoreOperand
ruleSelectCoreOperand
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSelectCoreOperandAccess().getGroup()); }
(rule__SelectCoreOperand__Group__0)
{ after(grammarAccess.getSelectCoreOperandAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAlterTableClause
entryRuleAlterTableClause 
:
{ before(grammarAccess.getAlterTableClauseRule()); }
	 ruleAlterTableClause
{ after(grammarAccess.getAlterTableClauseRule()); } 
	 EOF 
;

// Rule AlterTableClause
ruleAlterTableClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAlterTableClauseAccess().getAlternatives()); }
(rule__AlterTableClause__Alternatives)
{ after(grammarAccess.getAlterTableClauseAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleColumnDef
entryRuleColumnDef 
:
{ before(grammarAccess.getColumnDefRule()); }
	 ruleColumnDef
{ after(grammarAccess.getColumnDefRule()); } 
	 EOF 
;

// Rule ColumnDef
ruleColumnDef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getColumnDefAccess().getGroup()); }
(rule__ColumnDef__Group__0)
{ after(grammarAccess.getColumnDefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleColumnConstraint
entryRuleColumnConstraint 
:
{ before(grammarAccess.getColumnConstraintRule()); }
	 ruleColumnConstraint
{ after(grammarAccess.getColumnConstraintRule()); } 
	 EOF 
;

// Rule ColumnConstraint
ruleColumnConstraint
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getColumnConstraintAccess().getAlternatives()); }
(rule__ColumnConstraint__Alternatives)
{ after(grammarAccess.getColumnConstraintAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDefaultValue
entryRuleDefaultValue 
:
{ before(grammarAccess.getDefaultValueRule()); }
	 ruleDefaultValue
{ after(grammarAccess.getDefaultValueRule()); } 
	 EOF 
;

// Rule DefaultValue
ruleDefaultValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefaultValueAccess().getAlternatives()); }
(rule__DefaultValue__Alternatives)
{ after(grammarAccess.getDefaultValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTableConstraint
entryRuleTableConstraint 
:
{ before(grammarAccess.getTableConstraintRule()); }
	 ruleTableConstraint
{ after(grammarAccess.getTableConstraintRule()); } 
	 EOF 
;

// Rule TableConstraint
ruleTableConstraint
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTableConstraintAccess().getAlternatives()); }
(rule__TableConstraint__Alternatives)
{ after(grammarAccess.getTableConstraintAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIndexedColumn
entryRuleIndexedColumn 
:
{ before(grammarAccess.getIndexedColumnRule()); }
	 ruleIndexedColumn
{ after(grammarAccess.getIndexedColumnRule()); } 
	 EOF 
;

// Rule IndexedColumn
ruleIndexedColumn
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIndexedColumnAccess().getGroup()); }
(rule__IndexedColumn__Group__0)
{ after(grammarAccess.getIndexedColumnAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOrderingTerm
entryRuleOrderingTerm 
:
{ before(grammarAccess.getOrderingTermRule()); }
	 ruleOrderingTerm
{ after(grammarAccess.getOrderingTermRule()); } 
	 EOF 
;

// Rule OrderingTerm
ruleOrderingTerm
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOrderingTermAccess().getGroup()); }
(rule__OrderingTerm__Group__0)
{ after(grammarAccess.getOrderingTermAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJoinSource
entryRuleJoinSource 
:
{ before(grammarAccess.getJoinSourceRule()); }
	 ruleJoinSource
{ after(grammarAccess.getJoinSourceRule()); } 
	 EOF 
;

// Rule JoinSource
ruleJoinSource
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJoinSourceAccess().getGroup()); }
(rule__JoinSource__Group__0)
{ after(grammarAccess.getJoinSourceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSingleSource
entryRuleSingleSource 
:
{ before(grammarAccess.getSingleSourceRule()); }
	 ruleSingleSource
{ after(grammarAccess.getSingleSourceRule()); } 
	 EOF 
;

// Rule SingleSource
ruleSingleSource
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSingleSourceAccess().getAlternatives()); }
(rule__SingleSource__Alternatives)
{ after(grammarAccess.getSingleSourceAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJoinStatement
entryRuleJoinStatement 
:
{ before(grammarAccess.getJoinStatementRule()); }
	 ruleJoinStatement
{ after(grammarAccess.getJoinStatementRule()); } 
	 EOF 
;

// Rule JoinStatement
ruleJoinStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJoinStatementAccess().getGroup()); }
(rule__JoinStatement__Group__0)
{ after(grammarAccess.getJoinStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleResultColumn
entryRuleResultColumn 
:
{ before(grammarAccess.getResultColumnRule()); }
	 ruleResultColumn
{ after(grammarAccess.getResultColumnRule()); } 
	 EOF 
;

// Rule ResultColumn
ruleResultColumn
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getResultColumnAccess().getAlternatives()); }
(rule__ResultColumn__Alternatives)
{ after(grammarAccess.getResultColumnAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConflictClause
entryRuleConflictClause 
:
{ before(grammarAccess.getConflictClauseRule()); }
	 ruleConflictClause
{ after(grammarAccess.getConflictClauseRule()); } 
	 EOF 
;

// Rule ConflictClause
ruleConflictClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConflictClauseAccess().getGroup()); }
(rule__ConflictClause__Group__0)
{ after(grammarAccess.getConflictClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteralValue
entryRuleLiteralValue 
:
{ before(grammarAccess.getLiteralValueRule()); }
	 ruleLiteralValue
{ after(grammarAccess.getLiteralValueRule()); } 
	 EOF 
;

// Rule LiteralValue
ruleLiteralValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralValueAccess().getAlternatives()); }
(rule__LiteralValue__Alternatives)
{ after(grammarAccess.getLiteralValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignedNumber
entryRuleSignedNumber 
:
{ before(grammarAccess.getSignedNumberRule()); }
	 ruleSignedNumber
{ after(grammarAccess.getSignedNumberRule()); } 
	 EOF 
;

// Rule SignedNumber
ruleSignedNumber
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSignedNumberAccess().getGroup()); }
(rule__SignedNumber__Group__0)
{ after(grammarAccess.getSignedNumberAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule ColumnType
ruleColumnType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColumnTypeAccess().getAlternatives()); }
(rule__ColumnType__Alternatives)
{ after(grammarAccess.getColumnTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule SqliteDataType
ruleSqliteDataType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSqliteDataTypeAccess().getAlternatives()); }
(rule__SqliteDataType__Alternatives)
{ after(grammarAccess.getSqliteDataTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule ConflictResolution
ruleConflictResolution
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConflictResolutionAccess().getAlternatives()); }
(rule__ConflictResolution__Alternatives)
{ after(grammarAccess.getConflictResolutionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule CompoundOperator
ruleCompoundOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundOperatorAccess().getAlternatives()); }
(rule__CompoundOperator__Alternatives)
{ after(grammarAccess.getCompoundOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__ExprMult__OpAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprMultAccess().getOpAsteriskKeyword_1_1_0_0()); }

	'*' 

{ after(grammarAccess.getExprMultAccess().getOpAsteriskKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getExprMultAccess().getOpSolidusKeyword_1_1_0_1()); }

	'/' 

{ after(grammarAccess.getExprMultAccess().getOpSolidusKeyword_1_1_0_1()); }
)

    |(
{ before(grammarAccess.getExprMultAccess().getOpPercentSignKeyword_1_1_0_2()); }

	'%' 

{ after(grammarAccess.getExprMultAccess().getOpPercentSignKeyword_1_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAdd__OpAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAddAccess().getOpPlusSignKeyword_1_1_0_0()); }

	'+' 

{ after(grammarAccess.getExprAddAccess().getOpPlusSignKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getExprAddAccess().getOpHyphenMinusKeyword_1_1_0_1()); }

	'-' 

{ after(grammarAccess.getExprAddAccess().getOpHyphenMinusKeyword_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBit__OpAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprBitAccess().getOpLessThanSignLessThanSignKeyword_1_1_0_0()); }

	'<<' 

{ after(grammarAccess.getExprBitAccess().getOpLessThanSignLessThanSignKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getExprBitAccess().getOpGreaterThanSignGreaterThanSignKeyword_1_1_0_1()); }

	'>>' 

{ after(grammarAccess.getExprBitAccess().getOpGreaterThanSignGreaterThanSignKeyword_1_1_0_1()); }
)

    |(
{ before(grammarAccess.getExprBitAccess().getOpAmpersandKeyword_1_1_0_2()); }

	'&' 

{ after(grammarAccess.getExprBitAccess().getOpAmpersandKeyword_1_1_0_2()); }
)

    |(
{ before(grammarAccess.getExprBitAccess().getOpVerticalLineKeyword_1_1_0_3()); }

	'|' 

{ after(grammarAccess.getExprBitAccess().getOpVerticalLineKeyword_1_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprRelate__OpAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprRelateAccess().getOpLessThanSignKeyword_1_1_0_0()); }

	'<' 

{ after(grammarAccess.getExprRelateAccess().getOpLessThanSignKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getExprRelateAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_1()); }

	'<=' 

{ after(grammarAccess.getExprRelateAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_1()); }
)

    |(
{ before(grammarAccess.getExprRelateAccess().getOpGreaterThanSignKeyword_1_1_0_2()); }

	'>' 

{ after(grammarAccess.getExprRelateAccess().getOpGreaterThanSignKeyword_1_1_0_2()); }
)

    |(
{ before(grammarAccess.getExprRelateAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_3()); }

	'>=' 

{ after(grammarAccess.getExprRelateAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprEqual__OpAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprEqualAccess().getOpEqualsSignKeyword_1_1_0_0()); }

	'=' 

{ after(grammarAccess.getExprEqualAccess().getOpEqualsSignKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getExprEqualAccess().getOpEqualsSignEqualsSignKeyword_1_1_0_1()); }

	'==' 

{ after(grammarAccess.getExprEqualAccess().getOpEqualsSignEqualsSignKeyword_1_1_0_1()); }
)

    |(
{ before(grammarAccess.getExprEqualAccess().getOpExclamationMarkEqualsSignKeyword_1_1_0_2()); }

	'!=' 

{ after(grammarAccess.getExprEqualAccess().getOpExclamationMarkEqualsSignKeyword_1_1_0_2()); }
)

    |(
{ before(grammarAccess.getExprEqualAccess().getOpLessThanSignGreaterThanSignKeyword_1_1_0_3()); }

	'<>' 

{ after(grammarAccess.getExprEqualAccess().getOpLessThanSignGreaterThanSignKeyword_1_1_0_3()); }
)

    |(
{ before(grammarAccess.getExprEqualAccess().getOpIsKeyword_1_1_0_4()); }

	'is' 

{ after(grammarAccess.getExprEqualAccess().getOpIsKeyword_1_1_0_4()); }
)

    |(
{ before(grammarAccess.getExprEqualAccess().getOpIsNotKeyword_1_1_0_5()); }

	'is not' 

{ after(grammarAccess.getExprEqualAccess().getOpIsNotKeyword_1_1_0_5()); }
)

    |(
{ before(grammarAccess.getExprEqualAccess().getOpInKeyword_1_1_0_6()); }

	'in' 

{ after(grammarAccess.getExprEqualAccess().getOpInKeyword_1_1_0_6()); }
)

    |(
{ before(grammarAccess.getExprEqualAccess().getOpLikeKeyword_1_1_0_7()); }

	'like' 

{ after(grammarAccess.getExprEqualAccess().getOpLikeKeyword_1_1_0_7()); }
)

    |(
{ before(grammarAccess.getExprEqualAccess().getOpGlobKeyword_1_1_0_8()); }

	'glob' 

{ after(grammarAccess.getExprEqualAccess().getOpGlobKeyword_1_1_0_8()); }
)

    |(
{ before(grammarAccess.getExprEqualAccess().getOpMatchKeyword_1_1_0_9()); }

	'match' 

{ after(grammarAccess.getExprEqualAccess().getOpMatchKeyword_1_1_0_9()); }
)

    |(
{ before(grammarAccess.getExprEqualAccess().getOpRegexpKeyword_1_1_0_10()); }

	'regexp' 

{ after(grammarAccess.getExprEqualAccess().getOpRegexpKeyword_1_1_0_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NullExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNullExpressionAccess().getGroup_0()); }
(rule__NullExpression__Group_0__0)
{ after(grammarAccess.getNullExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getNullExpressionAccess().getGroup_1()); }
(rule__NullExpression__Group_1__0)
{ after(grammarAccess.getNullExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NullExpression__Alternatives_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNullExpressionAccess().getNotNullKeyword_1_1_0()); }

	'not null' 

{ after(grammarAccess.getNullExpressionAccess().getNotNullKeyword_1_1_0()); }
)

    |(
{ before(grammarAccess.getNullExpressionAccess().getNotnullKeyword_1_1_1()); }

	'notnull' 

{ after(grammarAccess.getNullExpressionAccess().getNotnullKeyword_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_0()); }
(rule__PrimaryExpression__Group_0__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_1()); }
(rule__PrimaryExpression__Group_1__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_2()); }
(rule__PrimaryExpression__Group_2__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_3()); }
(rule__PrimaryExpression__Group_3__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_4()); }
(rule__PrimaryExpression__Group_4__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_5()); }
(rule__PrimaryExpression__Group_5__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_5()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_6()); }
(rule__PrimaryExpression__Group_6__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Alternatives_5_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getAllAssignment_5_3_0()); }
(rule__PrimaryExpression__AllAssignment_5_3_0)
{ after(grammarAccess.getPrimaryExpressionAccess().getAllAssignment_5_3_0()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_5_3_1()); }
(rule__PrimaryExpression__Group_5_3_1__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_5_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getGroup_0()); }
(rule__DDLStatement__Group_0__0)
{ after(grammarAccess.getDDLStatementAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getDDLStatementAccess().getGroup_1()); }
(rule__DDLStatement__Group_1__0)
{ after(grammarAccess.getDDLStatementAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getDDLStatementAccess().getGroup_2()); }
(rule__DDLStatement__Group_2__0)
{ after(grammarAccess.getDDLStatementAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getDDLStatementAccess().getGroup_3()); }
(rule__DDLStatement__Group_3__0)
{ after(grammarAccess.getDDLStatementAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getDDLStatementAccess().getGroup_4()); }
(rule__DDLStatement__Group_4__0)
{ after(grammarAccess.getDDLStatementAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getDDLStatementAccess().getGroup_5()); }
(rule__DDLStatement__Group_5__0)
{ after(grammarAccess.getDDLStatementAccess().getGroup_5()); }
)

    |(
{ before(grammarAccess.getDDLStatementAccess().getGroup_6()); }
(rule__DDLStatement__Group_6__0)
{ after(grammarAccess.getDDLStatementAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__WhenAlternatives_2_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getWhenBeforeKeyword_2_4_0_0()); }

	'before' 

{ after(grammarAccess.getDDLStatementAccess().getWhenBeforeKeyword_2_4_0_0()); }
)

    |(
{ before(grammarAccess.getDDLStatementAccess().getWhenAfterKeyword_2_4_0_1()); }

	'after' 

{ after(grammarAccess.getDDLStatementAccess().getWhenAfterKeyword_2_4_0_1()); }
)

    |(
{ before(grammarAccess.getDDLStatementAccess().getWhenInsteadOfKeyword_2_4_0_2()); }

	'instead of' 

{ after(grammarAccess.getDDLStatementAccess().getWhenInsteadOfKeyword_2_4_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Alternatives_2_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getEventTypeAssignment_2_5_0()); }
(rule__DDLStatement__EventTypeAssignment_2_5_0)
{ after(grammarAccess.getDDLStatementAccess().getEventTypeAssignment_2_5_0()); }
)

    |(
{ before(grammarAccess.getDDLStatementAccess().getEventTypeAssignment_2_5_1()); }
(rule__DDLStatement__EventTypeAssignment_2_5_1)
{ after(grammarAccess.getDDLStatementAccess().getEventTypeAssignment_2_5_1()); }
)

    |(
{ before(grammarAccess.getDDLStatementAccess().getGroup_2_5_2()); }
(rule__DDLStatement__Group_2_5_2__0)
{ after(grammarAccess.getDDLStatementAccess().getGroup_2_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DMLStatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDMLStatementAccess().getSelectStatementParserRuleCall_0()); }
	ruleSelectStatement
{ after(grammarAccess.getDMLStatementAccess().getSelectStatementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDMLStatementAccess().getInsertStatementParserRuleCall_1()); }
	ruleInsertStatement
{ after(grammarAccess.getDMLStatementAccess().getInsertStatementParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getDMLStatementAccess().getUpdateStatementParserRuleCall_2()); }
	ruleUpdateStatement
{ after(grammarAccess.getDMLStatementAccess().getUpdateStatementParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getDMLStatementAccess().getDeleteStatementParserRuleCall_3()); }
	ruleDeleteStatement
{ after(grammarAccess.getDMLStatementAccess().getDeleteStatementParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertStatementAccess().getGroup_0_0()); }
(rule__InsertStatement__Group_0_0__0)
{ after(grammarAccess.getInsertStatementAccess().getGroup_0_0()); }
)

    |(
{ before(grammarAccess.getInsertStatementAccess().getReplaceKeyword_0_1()); }

	'replace' 

{ after(grammarAccess.getInsertStatementAccess().getReplaceKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Alternatives_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertStatementAccess().getAlternatives_4_0()); }
(rule__InsertStatement__Alternatives_4_0)
{ after(grammarAccess.getInsertStatementAccess().getAlternatives_4_0()); }
)

    |(
{ before(grammarAccess.getInsertStatementAccess().getGroup_4_1()); }
(rule__InsertStatement__Group_4_1__0)
{ after(grammarAccess.getInsertStatementAccess().getGroup_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Alternatives_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertStatementAccess().getGroup_4_0_0()); }
(rule__InsertStatement__Group_4_0_0__0)
{ after(grammarAccess.getInsertStatementAccess().getGroup_4_0_0()); }
)

    |(
{ before(grammarAccess.getInsertStatementAccess().getSelectStatementAssignment_4_0_1()); }
(rule__InsertStatement__SelectStatementAssignment_4_0_1)
{ after(grammarAccess.getInsertStatementAccess().getSelectStatementAssignment_4_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCoreOperand__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreOperandAccess().getDistinctAssignment_1_0()); }
(rule__SelectCoreOperand__DistinctAssignment_1_0)
{ after(grammarAccess.getSelectCoreOperandAccess().getDistinctAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getSelectCoreOperandAccess().getAllAssignment_1_1()); }
(rule__SelectCoreOperand__AllAssignment_1_1)
{ after(grammarAccess.getSelectCoreOperandAccess().getAllAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AlterTableClause__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlterTableClauseAccess().getGroup_0()); }
(rule__AlterTableClause__Group_0__0)
{ after(grammarAccess.getAlterTableClauseAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getAlterTableClauseAccess().getGroup_1()); }
(rule__AlterTableClause__Group_1__0)
{ after(grammarAccess.getAlterTableClauseAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnConstraint__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColumnConstraintAccess().getGroup_0()); }
(rule__ColumnConstraint__Group_0__0)
{ after(grammarAccess.getColumnConstraintAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getColumnConstraintAccess().getGroup_1()); }
(rule__ColumnConstraint__Group_1__0)
{ after(grammarAccess.getColumnConstraintAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getColumnConstraintAccess().getGroup_2()); }
(rule__ColumnConstraint__Group_2__0)
{ after(grammarAccess.getColumnConstraintAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnConstraint__Alternatives_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColumnConstraintAccess().getAscAssignment_0_2_0()); }
(rule__ColumnConstraint__AscAssignment_0_2_0)
{ after(grammarAccess.getColumnConstraintAccess().getAscAssignment_0_2_0()); }
)

    |(
{ before(grammarAccess.getColumnConstraintAccess().getDescAssignment_0_2_1()); }
(rule__ColumnConstraint__DescAssignment_0_2_1)
{ after(grammarAccess.getColumnConstraintAccess().getDescAssignment_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultValue__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultValueAccess().getGroup_0()); }
(rule__DefaultValue__Group_0__0)
{ after(grammarAccess.getDefaultValueAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getDefaultValueAccess().getGroup_1()); }
(rule__DefaultValue__Group_1__0)
{ after(grammarAccess.getDefaultValueAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getGroup_0()); }
(rule__TableConstraint__Group_0__0)
{ after(grammarAccess.getTableConstraintAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getTableConstraintAccess().getGroup_1()); }
(rule__TableConstraint__Group_1__0)
{ after(grammarAccess.getTableConstraintAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getTableConstraintAccess().getGroup_2()); }
(rule__TableConstraint__Group_2__0)
{ after(grammarAccess.getTableConstraintAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IndexedColumn__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexedColumnAccess().getAscAssignment_1_0()); }
(rule__IndexedColumn__AscAssignment_1_0)
{ after(grammarAccess.getIndexedColumnAccess().getAscAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getIndexedColumnAccess().getDescAssignment_1_1()); }
(rule__IndexedColumn__DescAssignment_1_1)
{ after(grammarAccess.getIndexedColumnAccess().getDescAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrderingTerm__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrderingTermAccess().getAscAssignment_1_0()); }
(rule__OrderingTerm__AscAssignment_1_0)
{ after(grammarAccess.getOrderingTermAccess().getAscAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getOrderingTermAccess().getDescAssignment_1_1()); }
(rule__OrderingTerm__DescAssignment_1_1)
{ after(grammarAccess.getOrderingTermAccess().getDescAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SingleSource__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleSourceAccess().getGroup_0()); }
(rule__SingleSource__Group_0__0)
{ after(grammarAccess.getSingleSourceAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getSingleSourceAccess().getGroup_1()); }
(rule__SingleSource__Group_1__0)
{ after(grammarAccess.getSingleSourceAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getSingleSourceAccess().getGroup_2()); }
(rule__SingleSource__Group_2__0)
{ after(grammarAccess.getSingleSourceAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinStatementAccess().getGroup_2_0()); }
(rule__JoinStatement__Group_2_0__0)
{ after(grammarAccess.getJoinStatementAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getJoinStatementAccess().getInnerAssignment_2_1()); }
(rule__JoinStatement__InnerAssignment_2_1)
{ after(grammarAccess.getJoinStatementAccess().getInnerAssignment_2_1()); }
)

    |(
{ before(grammarAccess.getJoinStatementAccess().getCrossAssignment_2_2()); }
(rule__JoinStatement__CrossAssignment_2_2)
{ after(grammarAccess.getJoinStatementAccess().getCrossAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ResultColumn__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResultColumnAccess().getGroup_0()); }
(rule__ResultColumn__Group_0__0)
{ after(grammarAccess.getResultColumnAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getResultColumnAccess().getGroup_1()); }
(rule__ResultColumn__Group_1__0)
{ after(grammarAccess.getResultColumnAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralValueAccess().getGroup_0()); }
(rule__LiteralValue__Group_0__0)
{ after(grammarAccess.getLiteralValueAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getLiteralValueAccess().getGroup_1()); }
(rule__LiteralValue__Group_1__0)
{ after(grammarAccess.getLiteralValueAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getLiteralValueAccess().getGroup_2()); }
(rule__LiteralValue__Group_2__0)
{ after(grammarAccess.getLiteralValueAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getLiteralValueAccess().getGroup_3()); }
(rule__LiteralValue__Group_3__0)
{ after(grammarAccess.getLiteralValueAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getLiteralValueAccess().getGroup_4()); }
(rule__LiteralValue__Group_4__0)
{ after(grammarAccess.getLiteralValueAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getLiteralValueAccess().getGroup_5()); }
(rule__LiteralValue__Group_5__0)
{ after(grammarAccess.getLiteralValueAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColumnTypeAccess().getTextEnumLiteralDeclaration_0()); }
(	'text' 
)
{ after(grammarAccess.getColumnTypeAccess().getTextEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getColumnTypeAccess().getIntegerEnumLiteralDeclaration_1()); }
(	'integer' 
)
{ after(grammarAccess.getColumnTypeAccess().getIntegerEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getColumnTypeAccess().getRealEnumLiteralDeclaration_2()); }
(	'real' 
)
{ after(grammarAccess.getColumnTypeAccess().getRealEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getColumnTypeAccess().getBlobEnumLiteralDeclaration_3()); }
(	'blob' 
)
{ after(grammarAccess.getColumnTypeAccess().getBlobEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getColumnTypeAccess().getBooleanEnumLiteralDeclaration_4()); }
(	'boolean' 
)
{ after(grammarAccess.getColumnTypeAccess().getBooleanEnumLiteralDeclaration_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SqliteDataType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSqliteDataTypeAccess().getTextEnumLiteralDeclaration_0()); }
(	'text' 
)
{ after(grammarAccess.getSqliteDataTypeAccess().getTextEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getSqliteDataTypeAccess().getIntegerEnumLiteralDeclaration_1()); }
(	'integer' 
)
{ after(grammarAccess.getSqliteDataTypeAccess().getIntegerEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getSqliteDataTypeAccess().getRealEnumLiteralDeclaration_2()); }
(	'real' 
)
{ after(grammarAccess.getSqliteDataTypeAccess().getRealEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getSqliteDataTypeAccess().getBlobEnumLiteralDeclaration_3()); }
(	'blob' 
)
{ after(grammarAccess.getSqliteDataTypeAccess().getBlobEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getSqliteDataTypeAccess().getNoneEnumLiteralDeclaration_4()); }
(	'none' 
)
{ after(grammarAccess.getSqliteDataTypeAccess().getNoneEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getSqliteDataTypeAccess().getNumericEnumLiteralDeclaration_5()); }
(	'numeric' 
)
{ after(grammarAccess.getSqliteDataTypeAccess().getNumericEnumLiteralDeclaration_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictResolution__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConflictResolutionAccess().getRollbackEnumLiteralDeclaration_0()); }
(	'rollback' 
)
{ after(grammarAccess.getConflictResolutionAccess().getRollbackEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getConflictResolutionAccess().getAbortEnumLiteralDeclaration_1()); }
(	'abort' 
)
{ after(grammarAccess.getConflictResolutionAccess().getAbortEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getConflictResolutionAccess().getFailEnumLiteralDeclaration_2()); }
(	'fail' 
)
{ after(grammarAccess.getConflictResolutionAccess().getFailEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getConflictResolutionAccess().getIgnoreEnumLiteralDeclaration_3()); }
(	'ignore' 
)
{ after(grammarAccess.getConflictResolutionAccess().getIgnoreEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getConflictResolutionAccess().getReplaceEnumLiteralDeclaration_4()); }
(	'replace' 
)
{ after(grammarAccess.getConflictResolutionAccess().getReplaceEnumLiteralDeclaration_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundOperatorAccess().getUnionallEnumLiteralDeclaration_0()); }
(	'union all' 
)
{ after(grammarAccess.getCompoundOperatorAccess().getUnionallEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getCompoundOperatorAccess().getUnionEnumLiteralDeclaration_1()); }
(	'union' 
)
{ after(grammarAccess.getCompoundOperatorAccess().getUnionEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getCompoundOperatorAccess().getIntersectEnumLiteralDeclaration_2()); }
(	'intersect' 
)
{ after(grammarAccess.getCompoundOperatorAccess().getIntersectEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getCompoundOperatorAccess().getExceptEnumLiteralDeclaration_3()); }
(	'except' 
)
{ after(grammarAccess.getCompoundOperatorAccess().getExceptEnumLiteralDeclaration_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getPackageKeyword_0()); }

	'package' 

{ after(grammarAccess.getModelAccess().getPackageKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getPackageNameAssignment_1()); }
(rule__Model__PackageNameAssignment_1)
{ after(grammarAccess.getModelAccess().getPackageNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getDatabaseAssignment_2()); }
(rule__Model__DatabaseAssignment_2)
{ after(grammarAccess.getModelAccess().getDatabaseAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DatabaseBlock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DatabaseBlock__Group__0__Impl
	rule__DatabaseBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DatabaseBlock__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatabaseBlockAccess().getDatabaseKeyword_0()); }

	'database' 

{ after(grammarAccess.getDatabaseBlockAccess().getDatabaseKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DatabaseBlock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DatabaseBlock__Group__1__Impl
	rule__DatabaseBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DatabaseBlock__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatabaseBlockAccess().getNameAssignment_1()); }
(rule__DatabaseBlock__NameAssignment_1)
{ after(grammarAccess.getDatabaseBlockAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DatabaseBlock__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DatabaseBlock__Group__2__Impl
	rule__DatabaseBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DatabaseBlock__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatabaseBlockAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getDatabaseBlockAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DatabaseBlock__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DatabaseBlock__Group__3__Impl
	rule__DatabaseBlock__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DatabaseBlock__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatabaseBlockAccess().getConfigAssignment_3()); }
(rule__DatabaseBlock__ConfigAssignment_3)?
{ after(grammarAccess.getDatabaseBlockAccess().getConfigAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DatabaseBlock__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DatabaseBlock__Group__4__Impl
	rule__DatabaseBlock__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DatabaseBlock__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatabaseBlockAccess().getMigrationsAssignment_4()); }
(rule__DatabaseBlock__MigrationsAssignment_4)*
{ after(grammarAccess.getDatabaseBlockAccess().getMigrationsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DatabaseBlock__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DatabaseBlock__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DatabaseBlock__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatabaseBlockAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getDatabaseBlockAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ConfigBlock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfigBlock__Group__0__Impl
	rule__ConfigBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigBlock__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigBlockAccess().getConfigBlockAction_0()); }
(

)
{ after(grammarAccess.getConfigBlockAccess().getConfigBlockAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConfigBlock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfigBlock__Group__1__Impl
	rule__ConfigBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigBlock__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigBlockAccess().getConfigKeyword_1()); }

	'config' 

{ after(grammarAccess.getConfigBlockAccess().getConfigKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConfigBlock__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfigBlock__Group__2__Impl
	rule__ConfigBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigBlock__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigBlockAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getConfigBlockAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConfigBlock__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfigBlock__Group__3__Impl
	rule__ConfigBlock__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigBlock__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigBlockAccess().getStatementsAssignment_3()); }
(rule__ConfigBlock__StatementsAssignment_3)*
{ after(grammarAccess.getConfigBlockAccess().getStatementsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConfigBlock__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfigBlock__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigBlock__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigBlockAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getConfigBlockAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ConfigurationStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfigurationStatement__Group__0__Impl
	rule__ConfigurationStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigurationStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigurationStatementAccess().getActionStatementAction_0()); }
(

)
{ after(grammarAccess.getConfigurationStatementAccess().getActionStatementAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConfigurationStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfigurationStatement__Group__1__Impl
	rule__ConfigurationStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigurationStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigurationStatementAccess().getActionKeyword_1()); }

	'action' 

{ after(grammarAccess.getConfigurationStatementAccess().getActionKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConfigurationStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfigurationStatement__Group__2__Impl
	rule__ConfigurationStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigurationStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigurationStatementAccess().getNameAssignment_2()); }
(rule__ConfigurationStatement__NameAssignment_2)
{ after(grammarAccess.getConfigurationStatementAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConfigurationStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConfigurationStatement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigurationStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigurationStatementAccess().getPathAssignment_3()); }
(rule__ConfigurationStatement__PathAssignment_3)
{ after(grammarAccess.getConfigurationStatementAccess().getPathAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__MigrationBlock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MigrationBlock__Group__0__Impl
	rule__MigrationBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MigrationBlock__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMigrationBlockAccess().getMigrationBlockAction_0()); }
(

)
{ after(grammarAccess.getMigrationBlockAccess().getMigrationBlockAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MigrationBlock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MigrationBlock__Group__1__Impl
	rule__MigrationBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MigrationBlock__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMigrationBlockAccess().getMigrationKeyword_1()); }

	'migration' 

{ after(grammarAccess.getMigrationBlockAccess().getMigrationKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MigrationBlock__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MigrationBlock__Group__2__Impl
	rule__MigrationBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MigrationBlock__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMigrationBlockAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getMigrationBlockAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MigrationBlock__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MigrationBlock__Group__3__Impl
	rule__MigrationBlock__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MigrationBlock__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMigrationBlockAccess().getGroup_3()); }
(rule__MigrationBlock__Group_3__0)*
{ after(grammarAccess.getMigrationBlockAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MigrationBlock__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MigrationBlock__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MigrationBlock__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMigrationBlockAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getMigrationBlockAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__MigrationBlock__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MigrationBlock__Group_3__0__Impl
	rule__MigrationBlock__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MigrationBlock__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMigrationBlockAccess().getStatementsAssignment_3_0()); }
(rule__MigrationBlock__StatementsAssignment_3_0)
{ after(grammarAccess.getMigrationBlockAccess().getStatementsAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MigrationBlock__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MigrationBlock__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MigrationBlock__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMigrationBlockAccess().getSemicolonKeyword_3_1()); }

	';' 

{ after(grammarAccess.getMigrationBlockAccess().getSemicolonKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExprConcat__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprConcat__Group__0__Impl
	rule__ExprConcat__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprConcat__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprConcatAccess().getExprMultParserRuleCall_0()); }
	ruleExprMult
{ after(grammarAccess.getExprConcatAccess().getExprMultParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprConcat__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprConcat__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprConcat__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprConcatAccess().getGroup_1()); }
(rule__ExprConcat__Group_1__0)*
{ after(grammarAccess.getExprConcatAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExprConcat__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprConcat__Group_1__0__Impl
	rule__ExprConcat__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprConcat__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprConcatAccess().getExprConcatLeftAction_1_0()); }
(

)
{ after(grammarAccess.getExprConcatAccess().getExprConcatLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprConcat__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprConcat__Group_1__1__Impl
	rule__ExprConcat__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprConcat__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprConcatAccess().getOpAssignment_1_1()); }
(rule__ExprConcat__OpAssignment_1_1)
{ after(grammarAccess.getExprConcatAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprConcat__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprConcat__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprConcat__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprConcatAccess().getRightAssignment_1_2()); }
(rule__ExprConcat__RightAssignment_1_2)
{ after(grammarAccess.getExprConcatAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExprMult__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprMult__Group__0__Impl
	rule__ExprMult__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprMult__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprMultAccess().getExprAddParserRuleCall_0()); }
	ruleExprAdd
{ after(grammarAccess.getExprMultAccess().getExprAddParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprMult__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprMult__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprMult__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprMultAccess().getGroup_1()); }
(rule__ExprMult__Group_1__0)*
{ after(grammarAccess.getExprMultAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExprMult__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprMult__Group_1__0__Impl
	rule__ExprMult__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprMult__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprMultAccess().getExprMultLeftAction_1_0()); }
(

)
{ after(grammarAccess.getExprMultAccess().getExprMultLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprMult__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprMult__Group_1__1__Impl
	rule__ExprMult__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprMult__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprMultAccess().getOpAssignment_1_1()); }
(rule__ExprMult__OpAssignment_1_1)
{ after(grammarAccess.getExprMultAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprMult__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprMult__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprMult__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprMultAccess().getRightAssignment_1_2()); }
(rule__ExprMult__RightAssignment_1_2)
{ after(grammarAccess.getExprMultAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExprAdd__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprAdd__Group__0__Impl
	rule__ExprAdd__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAdd__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAddAccess().getExprBitParserRuleCall_0()); }
	ruleExprBit
{ after(grammarAccess.getExprAddAccess().getExprBitParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprAdd__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprAdd__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAdd__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAddAccess().getGroup_1()); }
(rule__ExprAdd__Group_1__0)*
{ after(grammarAccess.getExprAddAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExprAdd__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprAdd__Group_1__0__Impl
	rule__ExprAdd__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAdd__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAddAccess().getExprAddLeftAction_1_0()); }
(

)
{ after(grammarAccess.getExprAddAccess().getExprAddLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprAdd__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprAdd__Group_1__1__Impl
	rule__ExprAdd__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAdd__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAddAccess().getOpAssignment_1_1()); }
(rule__ExprAdd__OpAssignment_1_1)
{ after(grammarAccess.getExprAddAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprAdd__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprAdd__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAdd__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAddAccess().getRightAssignment_1_2()); }
(rule__ExprAdd__RightAssignment_1_2)
{ after(grammarAccess.getExprAddAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExprBit__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprBit__Group__0__Impl
	rule__ExprBit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBit__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprBitAccess().getExprRelateParserRuleCall_0()); }
	ruleExprRelate
{ after(grammarAccess.getExprBitAccess().getExprRelateParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprBit__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprBit__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBit__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprBitAccess().getGroup_1()); }
(rule__ExprBit__Group_1__0)*
{ after(grammarAccess.getExprBitAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExprBit__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprBit__Group_1__0__Impl
	rule__ExprBit__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBit__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprBitAccess().getExprBitLeftAction_1_0()); }
(

)
{ after(grammarAccess.getExprBitAccess().getExprBitLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprBit__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprBit__Group_1__1__Impl
	rule__ExprBit__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBit__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprBitAccess().getOpAssignment_1_1()); }
(rule__ExprBit__OpAssignment_1_1)
{ after(grammarAccess.getExprBitAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprBit__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprBit__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBit__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprBitAccess().getRightAssignment_1_2()); }
(rule__ExprBit__RightAssignment_1_2)
{ after(grammarAccess.getExprBitAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExprRelate__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprRelate__Group__0__Impl
	rule__ExprRelate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprRelate__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprRelateAccess().getExprEqualParserRuleCall_0()); }
	ruleExprEqual
{ after(grammarAccess.getExprRelateAccess().getExprEqualParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprRelate__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprRelate__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprRelate__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprRelateAccess().getGroup_1()); }
(rule__ExprRelate__Group_1__0)*
{ after(grammarAccess.getExprRelateAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExprRelate__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprRelate__Group_1__0__Impl
	rule__ExprRelate__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprRelate__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprRelateAccess().getExprRelateLeftAction_1_0()); }
(

)
{ after(grammarAccess.getExprRelateAccess().getExprRelateLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprRelate__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprRelate__Group_1__1__Impl
	rule__ExprRelate__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprRelate__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprRelateAccess().getOpAssignment_1_1()); }
(rule__ExprRelate__OpAssignment_1_1)
{ after(grammarAccess.getExprRelateAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprRelate__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprRelate__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprRelate__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprRelateAccess().getRightAssignment_1_2()); }
(rule__ExprRelate__RightAssignment_1_2)
{ after(grammarAccess.getExprRelateAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExprEqual__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprEqual__Group__0__Impl
	rule__ExprEqual__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprEqual__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprEqualAccess().getExprAndParserRuleCall_0()); }
	ruleExprAnd
{ after(grammarAccess.getExprEqualAccess().getExprAndParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprEqual__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprEqual__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprEqual__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprEqualAccess().getGroup_1()); }
(rule__ExprEqual__Group_1__0)*
{ after(grammarAccess.getExprEqualAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExprEqual__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprEqual__Group_1__0__Impl
	rule__ExprEqual__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprEqual__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprEqualAccess().getExprEqualLeftAction_1_0()); }
(

)
{ after(grammarAccess.getExprEqualAccess().getExprEqualLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprEqual__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprEqual__Group_1__1__Impl
	rule__ExprEqual__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprEqual__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprEqualAccess().getOpAssignment_1_1()); }
(rule__ExprEqual__OpAssignment_1_1)
{ after(grammarAccess.getExprEqualAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprEqual__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprEqual__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprEqual__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprEqualAccess().getRightAssignment_1_2()); }
(rule__ExprEqual__RightAssignment_1_2)
{ after(grammarAccess.getExprEqualAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExprAnd__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprAnd__Group__0__Impl
	rule__ExprAnd__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAnd__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAndAccess().getExprOrParserRuleCall_0()); }
	ruleExprOr
{ after(grammarAccess.getExprAndAccess().getExprOrParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprAnd__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprAnd__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAnd__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAndAccess().getGroup_1()); }
(rule__ExprAnd__Group_1__0)*
{ after(grammarAccess.getExprAndAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExprAnd__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprAnd__Group_1__0__Impl
	rule__ExprAnd__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAnd__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAndAccess().getExprAndLeftAction_1_0()); }
(

)
{ after(grammarAccess.getExprAndAccess().getExprAndLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprAnd__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprAnd__Group_1__1__Impl
	rule__ExprAnd__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAnd__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAndAccess().getOpAssignment_1_1()); }
(rule__ExprAnd__OpAssignment_1_1)
{ after(grammarAccess.getExprAndAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprAnd__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprAnd__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAnd__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAndAccess().getRightAssignment_1_2()); }
(rule__ExprAnd__RightAssignment_1_2)
{ after(grammarAccess.getExprAndAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExprOr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprOr__Group__0__Impl
	rule__ExprOr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprOr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprOrAccess().getNullCheckExpressionParserRuleCall_0()); }
	ruleNullCheckExpression
{ after(grammarAccess.getExprOrAccess().getNullCheckExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprOr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprOr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprOr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprOrAccess().getGroup_1()); }
(rule__ExprOr__Group_1__0)*
{ after(grammarAccess.getExprOrAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExprOr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprOr__Group_1__0__Impl
	rule__ExprOr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprOr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprOrAccess().getExprOrLeftAction_1_0()); }
(

)
{ after(grammarAccess.getExprOrAccess().getExprOrLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprOr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprOr__Group_1__1__Impl
	rule__ExprOr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprOr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprOrAccess().getOpAssignment_1_1()); }
(rule__ExprOr__OpAssignment_1_1)
{ after(grammarAccess.getExprOrAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprOr__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprOr__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprOr__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprOrAccess().getRightAssignment_1_2()); }
(rule__ExprOr__RightAssignment_1_2)
{ after(grammarAccess.getExprOrAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NullCheckExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NullCheckExpression__Group__0__Impl
	rule__NullCheckExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NullCheckExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNullCheckExpressionAccess().getPrimaryExpressionParserRuleCall_0()); }
	rulePrimaryExpression
{ after(grammarAccess.getNullCheckExpressionAccess().getPrimaryExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NullCheckExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NullCheckExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NullCheckExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNullCheckExpressionAccess().getGroup_1()); }
(rule__NullCheckExpression__Group_1__0)?
{ after(grammarAccess.getNullCheckExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NullCheckExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NullCheckExpression__Group_1__0__Impl
	rule__NullCheckExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NullCheckExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNullCheckExpressionAccess().getNullCheckExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getNullCheckExpressionAccess().getNullCheckExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NullCheckExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NullCheckExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NullCheckExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNullCheckExpressionAccess().getRightAssignment_1_1()); }
(rule__NullCheckExpression__RightAssignment_1_1)
{ after(grammarAccess.getNullCheckExpressionAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NullExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NullExpression__Group_0__0__Impl
	rule__NullExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NullExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNullExpressionAccess().getIsNullAction_0_0()); }
(

)
{ after(grammarAccess.getNullExpressionAccess().getIsNullAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NullExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NullExpression__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NullExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNullExpressionAccess().getIsNullKeyword_0_1()); }

	'is null' 

{ after(grammarAccess.getNullExpressionAccess().getIsNullKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NullExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NullExpression__Group_1__0__Impl
	rule__NullExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NullExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNullExpressionAccess().getNotNullAction_1_0()); }
(

)
{ after(grammarAccess.getNullExpressionAccess().getNotNullAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NullExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NullExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NullExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNullExpressionAccess().getAlternatives_1_1()); }
(rule__NullExpression__Alternatives_1_1)
{ after(grammarAccess.getNullExpressionAccess().getAlternatives_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0__0__Impl
	rule__PrimaryExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getColumnLiteralAction_0_0()); }
(

)
{ after(grammarAccess.getPrimaryExpressionAccess().getColumnLiteralAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getNameAssignment_0_1()); }
(rule__PrimaryExpression__NameAssignment_0_1)
{ after(grammarAccess.getPrimaryExpressionAccess().getNameAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1__0__Impl
	rule__PrimaryExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLiteralAction_1_0()); }
(

)
{ after(grammarAccess.getPrimaryExpressionAccess().getLiteralAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLiteralValueAssignment_1_1()); }
(rule__PrimaryExpression__LiteralValueAssignment_1_1)
{ after(grammarAccess.getPrimaryExpressionAccess().getLiteralValueAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_2__0__Impl
	rule__PrimaryExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_2__1__Impl
	rule__PrimaryExpression__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getSqlExpressionParserRuleCall_2_1()); }
	ruleSqlExpression
{ after(grammarAccess.getPrimaryExpressionAccess().getSqlExpressionParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_2_2()); }

	')' 

{ after(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PrimaryExpression__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_3__0__Impl
	rule__PrimaryExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getSelectStatementExpressionAction_3_0()); }
(

)
{ after(grammarAccess.getPrimaryExpressionAccess().getSelectStatementExpressionAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_3__1__Impl
	rule__PrimaryExpression__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getNotAssignment_3_1()); }
(rule__PrimaryExpression__NotAssignment_3_1)?
{ after(grammarAccess.getPrimaryExpressionAccess().getNotAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_3__2__Impl
	rule__PrimaryExpression__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getExistsAssignment_3_2()); }
(rule__PrimaryExpression__ExistsAssignment_3_2)?
{ after(grammarAccess.getPrimaryExpressionAccess().getExistsAssignment_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_3__3__Impl
	rule__PrimaryExpression__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_3_3()); }

	'(' 

{ after(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_3__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_3__4__Impl
	rule__PrimaryExpression__Group_3__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getSelectAssignment_3_4()); }
(rule__PrimaryExpression__SelectAssignment_3_4)
{ after(grammarAccess.getPrimaryExpressionAccess().getSelectAssignment_3_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_3__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_3__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_3_5()); }

	')' 

{ after(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_3_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__PrimaryExpression__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_4__0__Impl
	rule__PrimaryExpression__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getCaseExpressionAction_4_0()); }
(

)
{ after(grammarAccess.getPrimaryExpressionAccess().getCaseExpressionAction_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_4__1__Impl
	rule__PrimaryExpression__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getCaseKeyword_4_1()); }

	'case' 

{ after(grammarAccess.getPrimaryExpressionAccess().getCaseKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_4__2__Impl
	rule__PrimaryExpression__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getCaseExpressionAssignment_4_2()); }
(rule__PrimaryExpression__CaseExpressionAssignment_4_2)?
{ after(grammarAccess.getPrimaryExpressionAccess().getCaseExpressionAssignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_4__3__Impl
	rule__PrimaryExpression__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getPrimaryExpressionAccess().getCasesAssignment_4_3()); }
(rule__PrimaryExpression__CasesAssignment_4_3)
{ after(grammarAccess.getPrimaryExpressionAccess().getCasesAssignment_4_3()); }
)
(
{ before(grammarAccess.getPrimaryExpressionAccess().getCasesAssignment_4_3()); }
(rule__PrimaryExpression__CasesAssignment_4_3)*
{ after(grammarAccess.getPrimaryExpressionAccess().getCasesAssignment_4_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_4__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_4__4__Impl
	rule__PrimaryExpression__Group_4__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_4__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_4_4()); }
(rule__PrimaryExpression__Group_4_4__0)?
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_4_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_4__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_4__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_4__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getEndKeyword_4_5()); }

	'end' 

{ after(grammarAccess.getPrimaryExpressionAccess().getEndKeyword_4_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__PrimaryExpression__Group_4_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_4_4__0__Impl
	rule__PrimaryExpression__Group_4_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_4_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getElseKeyword_4_4_0()); }

	'else' 

{ after(grammarAccess.getPrimaryExpressionAccess().getElseKeyword_4_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_4_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_4_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_4_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getElseExpressionAssignment_4_4_1()); }
(rule__PrimaryExpression__ElseExpressionAssignment_4_4_1)
{ after(grammarAccess.getPrimaryExpressionAccess().getElseExpressionAssignment_4_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryExpression__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_5__0__Impl
	rule__PrimaryExpression__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getFunctionAction_5_0()); }
(

)
{ after(grammarAccess.getPrimaryExpressionAccess().getFunctionAction_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_5__1__Impl
	rule__PrimaryExpression__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getNameAssignment_5_1()); }
(rule__PrimaryExpression__NameAssignment_5_1)
{ after(grammarAccess.getPrimaryExpressionAccess().getNameAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_5__2__Impl
	rule__PrimaryExpression__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_5_2()); }

	'(' 

{ after(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_5__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_5__3__Impl
	rule__PrimaryExpression__Group_5__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_5__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getAlternatives_5_3()); }
(rule__PrimaryExpression__Alternatives_5_3)
{ after(grammarAccess.getPrimaryExpressionAccess().getAlternatives_5_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_5__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_5__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_5__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_5_4()); }

	')' 

{ after(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_5_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__PrimaryExpression__Group_5_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_5_3_1__0__Impl
	rule__PrimaryExpression__Group_5_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_5_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getArgumentsAssignment_5_3_1_0()); }
(rule__PrimaryExpression__ArgumentsAssignment_5_3_1_0)
{ after(grammarAccess.getPrimaryExpressionAccess().getArgumentsAssignment_5_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_5_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_5_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_5_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_5_3_1_1()); }
(rule__PrimaryExpression__Group_5_3_1_1__0)*
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_5_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryExpression__Group_5_3_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_5_3_1_1__0__Impl
	rule__PrimaryExpression__Group_5_3_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_5_3_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getCommaKeyword_5_3_1_1_0()); }

	',' 

{ after(grammarAccess.getPrimaryExpressionAccess().getCommaKeyword_5_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_5_3_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_5_3_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_5_3_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getArugmentsAssignment_5_3_1_1_1()); }
(rule__PrimaryExpression__ArugmentsAssignment_5_3_1_1_1)
{ after(grammarAccess.getPrimaryExpressionAccess().getArugmentsAssignment_5_3_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryExpression__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_6__0__Impl
	rule__PrimaryExpression__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getCastExpressionAction_6_0()); }
(

)
{ after(grammarAccess.getPrimaryExpressionAccess().getCastExpressionAction_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_6__1__Impl
	rule__PrimaryExpression__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getCastKeyword_6_1()); }

	'cast' 

{ after(grammarAccess.getPrimaryExpressionAccess().getCastKeyword_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_6__2__Impl
	rule__PrimaryExpression__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_6_2()); }

	'(' 

{ after(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_6__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_6__3__Impl
	rule__PrimaryExpression__Group_6__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_6__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getExpressionAssignment_6_3()); }
(rule__PrimaryExpression__ExpressionAssignment_6_3)
{ after(grammarAccess.getPrimaryExpressionAccess().getExpressionAssignment_6_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_6__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_6__4__Impl
	rule__PrimaryExpression__Group_6__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_6__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getAsKeyword_6_4()); }

	'as' 

{ after(grammarAccess.getPrimaryExpressionAccess().getAsKeyword_6_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_6__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_6__5__Impl
	rule__PrimaryExpression__Group_6__6
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_6__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getTypeAssignment_6_5()); }
(rule__PrimaryExpression__TypeAssignment_6_5)
{ after(grammarAccess.getPrimaryExpressionAccess().getTypeAssignment_6_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_6__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_6__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_6__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_6_6()); }

	')' 

{ after(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_6_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Case__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case__Group__0__Impl
	rule__Case__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getWhenKeyword_0()); }

	'when' 

{ after(grammarAccess.getCaseAccess().getWhenKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Case__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case__Group__1__Impl
	rule__Case__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getWhenExpressionAssignment_1()); }
(rule__Case__WhenExpressionAssignment_1)
{ after(grammarAccess.getCaseAccess().getWhenExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Case__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case__Group__2__Impl
	rule__Case__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getThenKeyword_2()); }

	'then' 

{ after(grammarAccess.getCaseAccess().getThenKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Case__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getThenExpressionAssignment_3()); }
(rule__Case__ThenExpressionAssignment_3)
{ after(grammarAccess.getCaseAccess().getThenExpressionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__DDLStatement__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_0__0__Impl
	rule__DDLStatement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getCreateTableStatementAction_0_0()); }
(

)
{ after(grammarAccess.getDDLStatementAccess().getCreateTableStatementAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DDLStatement__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_0__1__Impl
	rule__DDLStatement__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getCreateKeyword_0_1()); }

	'create' 

{ after(grammarAccess.getDDLStatementAccess().getCreateKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DDLStatement__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_0__2__Impl
	rule__DDLStatement__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getTableKeyword_0_2()); }

	'table' 

{ after(grammarAccess.getDDLStatementAccess().getTableKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DDLStatement__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_0__3__Impl
	rule__DDLStatement__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getNameAssignment_0_3()); }
(rule__DDLStatement__NameAssignment_0_3)
{ after(grammarAccess.getDDLStatementAccess().getNameAssignment_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DDLStatement__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_0__4__Impl
	rule__DDLStatement__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getLeftParenthesisKeyword_0_4()); }

	'(' 

{ after(grammarAccess.getDDLStatementAccess().getLeftParenthesisKeyword_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DDLStatement__Group_0__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_0__5__Impl
	rule__DDLStatement__Group_0__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_0__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getColumnDefsAssignment_0_5()); }
(rule__DDLStatement__ColumnDefsAssignment_0_5)
{ after(grammarAccess.getDDLStatementAccess().getColumnDefsAssignment_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DDLStatement__Group_0__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_0__6__Impl
	rule__DDLStatement__Group_0__7
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_0__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getGroup_0_6()); }
(rule__DDLStatement__Group_0_6__0)*
{ after(grammarAccess.getDDLStatementAccess().getGroup_0_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DDLStatement__Group_0__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_0__7__Impl
	rule__DDLStatement__Group_0__8
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_0__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getGroup_0_7()); }
(rule__DDLStatement__Group_0_7__0)*
{ after(grammarAccess.getDDLStatementAccess().getGroup_0_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DDLStatement__Group_0__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_0__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_0__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getRightParenthesisKeyword_0_8()); }

	')' 

{ after(grammarAccess.getDDLStatementAccess().getRightParenthesisKeyword_0_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__DDLStatement__Group_0_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_0_6__0__Impl
	rule__DDLStatement__Group_0_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_0_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getCommaKeyword_0_6_0()); }

	',' 

{ after(grammarAccess.getDDLStatementAccess().getCommaKeyword_0_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DDLStatement__Group_0_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_0_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_0_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getColumnDefsAssignment_0_6_1()); }
(rule__DDLStatement__ColumnDefsAssignment_0_6_1)
{ after(grammarAccess.getDDLStatementAccess().getColumnDefsAssignment_0_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DDLStatement__Group_0_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_0_7__0__Impl
	rule__DDLStatement__Group_0_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_0_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getCommaKeyword_0_7_0()); }

	',' 

{ after(grammarAccess.getDDLStatementAccess().getCommaKeyword_0_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DDLStatement__Group_0_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_0_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_0_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getConstraintsAssignment_0_7_1()); }
(rule__DDLStatement__ConstraintsAssignment_0_7_1)
{ after(grammarAccess.getDDLStatementAccess().getConstraintsAssignment_0_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DDLStatement__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_1__0__Impl
	rule__DDLStatement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getCreateViewStatementAction_1_0()); }
(

)
{ after(grammarAccess.getDDLStatementAccess().getCreateViewStatementAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DDLStatement__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_1__1__Impl
	rule__DDLStatement__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getCreateKeyword_1_1()); }

	'create' 

{ after(grammarAccess.getDDLStatementAccess().getCreateKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DDLStatement__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_1__2__Impl
	rule__DDLStatement__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getViewKeyword_1_2()); }

	'view' 

{ after(grammarAccess.getDDLStatementAccess().getViewKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DDLStatement__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_1__3__Impl
	rule__DDLStatement__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getNameAssignment_1_3()); }
(rule__DDLStatement__NameAssignment_1_3)
{ after(grammarAccess.getDDLStatementAccess().getNameAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DDLStatement__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_1__4__Impl
	rule__DDLStatement__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getAsKeyword_1_4()); }

	'as' 

{ after(grammarAccess.getDDLStatementAccess().getAsKeyword_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DDLStatement__Group_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getSelectStatementAssignment_1_5()); }
(rule__DDLStatement__SelectStatementAssignment_1_5)
{ after(grammarAccess.getDDLStatementAccess().getSelectStatementAssignment_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__DDLStatement__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_2__0__Impl
	rule__DDLStatement__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getCreateTriggerStatementAction_2_0()); }
(

)
{ after(grammarAccess.getDDLStatementAccess().getCreateTriggerStatementAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DDLStatement__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_2__1__Impl
	rule__DDLStatement__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getCreateKeyword_2_1()); }

	'create' 

{ after(grammarAccess.getDDLStatementAccess().getCreateKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DDLStatement__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_2__2__Impl
	rule__DDLStatement__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getTriggerKeyword_2_2()); }

	'trigger' 

{ after(grammarAccess.getDDLStatementAccess().getTriggerKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DDLStatement__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_2__3__Impl
	rule__DDLStatement__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getNameAssignment_2_3()); }
(rule__DDLStatement__NameAssignment_2_3)
{ after(grammarAccess.getDDLStatementAccess().getNameAssignment_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DDLStatement__Group_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_2__4__Impl
	rule__DDLStatement__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getWhenAssignment_2_4()); }
(rule__DDLStatement__WhenAssignment_2_4)?
{ after(grammarAccess.getDDLStatementAccess().getWhenAssignment_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DDLStatement__Group_2__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_2__5__Impl
	rule__DDLStatement__Group_2__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_2__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getAlternatives_2_5()); }
(rule__DDLStatement__Alternatives_2_5)
{ after(grammarAccess.getDDLStatementAccess().getAlternatives_2_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DDLStatement__Group_2__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_2__6__Impl
	rule__DDLStatement__Group_2__7
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_2__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getOnKeyword_2_6()); }

	'on' 

{ after(grammarAccess.getDDLStatementAccess().getOnKeyword_2_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DDLStatement__Group_2__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_2__7__Impl
	rule__DDLStatement__Group_2__8
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_2__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getTableNameAssignment_2_7()); }
(rule__DDLStatement__TableNameAssignment_2_7)
{ after(grammarAccess.getDDLStatementAccess().getTableNameAssignment_2_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DDLStatement__Group_2__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_2__8__Impl
	rule__DDLStatement__Group_2__9
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_2__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getForEachRowAssignment_2_8()); }
(rule__DDLStatement__ForEachRowAssignment_2_8)?
{ after(grammarAccess.getDDLStatementAccess().getForEachRowAssignment_2_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DDLStatement__Group_2__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_2__9__Impl
	rule__DDLStatement__Group_2__10
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_2__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getGroup_2_9()); }
(rule__DDLStatement__Group_2_9__0)?
{ after(grammarAccess.getDDLStatementAccess().getGroup_2_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DDLStatement__Group_2__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_2__10__Impl
	rule__DDLStatement__Group_2__11
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_2__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getBeginKeyword_2_10()); }

	'begin' 

{ after(grammarAccess.getDDLStatementAccess().getBeginKeyword_2_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DDLStatement__Group_2__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_2__11__Impl
	rule__DDLStatement__Group_2__12
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_2__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getGroup_2_11()); }
(rule__DDLStatement__Group_2_11__0)?
{ after(grammarAccess.getDDLStatementAccess().getGroup_2_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DDLStatement__Group_2__12
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_2__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_2__12__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getEndKeyword_2_12()); }

	'end' 

{ after(grammarAccess.getDDLStatementAccess().getEndKeyword_2_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}




























rule__DDLStatement__Group_2_5_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_2_5_2__0__Impl
	rule__DDLStatement__Group_2_5_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_2_5_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getEventTypeAssignment_2_5_2_0()); }
(rule__DDLStatement__EventTypeAssignment_2_5_2_0)
{ after(grammarAccess.getDDLStatementAccess().getEventTypeAssignment_2_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DDLStatement__Group_2_5_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_2_5_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_2_5_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getGroup_2_5_2_1()); }
(rule__DDLStatement__Group_2_5_2_1__0)?
{ after(grammarAccess.getDDLStatementAccess().getGroup_2_5_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DDLStatement__Group_2_5_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_2_5_2_1__0__Impl
	rule__DDLStatement__Group_2_5_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_2_5_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getOfKeyword_2_5_2_1_0()); }

	'of' 

{ after(grammarAccess.getDDLStatementAccess().getOfKeyword_2_5_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DDLStatement__Group_2_5_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_2_5_2_1__1__Impl
	rule__DDLStatement__Group_2_5_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_2_5_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getUpdateColumnNamesAssignment_2_5_2_1_1()); }
(rule__DDLStatement__UpdateColumnNamesAssignment_2_5_2_1_1)
{ after(grammarAccess.getDDLStatementAccess().getUpdateColumnNamesAssignment_2_5_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DDLStatement__Group_2_5_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_2_5_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_2_5_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getGroup_2_5_2_1_2()); }
(rule__DDLStatement__Group_2_5_2_1_2__0)*
{ after(grammarAccess.getDDLStatementAccess().getGroup_2_5_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DDLStatement__Group_2_5_2_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_2_5_2_1_2__0__Impl
	rule__DDLStatement__Group_2_5_2_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_2_5_2_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getCommaKeyword_2_5_2_1_2_0()); }

	',' 

{ after(grammarAccess.getDDLStatementAccess().getCommaKeyword_2_5_2_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DDLStatement__Group_2_5_2_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_2_5_2_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_2_5_2_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getUpdateColumnNamesAssignment_2_5_2_1_2_1()); }
(rule__DDLStatement__UpdateColumnNamesAssignment_2_5_2_1_2_1)
{ after(grammarAccess.getDDLStatementAccess().getUpdateColumnNamesAssignment_2_5_2_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DDLStatement__Group_2_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_2_9__0__Impl
	rule__DDLStatement__Group_2_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_2_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getWhenKeyword_2_9_0()); }

	'when' 

{ after(grammarAccess.getDDLStatementAccess().getWhenKeyword_2_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DDLStatement__Group_2_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_2_9__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_2_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getWhenExpressionAssignment_2_9_1()); }
(rule__DDLStatement__WhenExpressionAssignment_2_9_1)
{ after(grammarAccess.getDDLStatementAccess().getWhenExpressionAssignment_2_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DDLStatement__Group_2_11__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_2_11__0__Impl
	rule__DDLStatement__Group_2_11__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_2_11__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getStatementsAssignment_2_11_0()); }
(rule__DDLStatement__StatementsAssignment_2_11_0)
{ after(grammarAccess.getDDLStatementAccess().getStatementsAssignment_2_11_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DDLStatement__Group_2_11__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_2_11__1__Impl
	rule__DDLStatement__Group_2_11__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_2_11__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getSemicolonKeyword_2_11_1()); }

	';' 

{ after(grammarAccess.getDDLStatementAccess().getSemicolonKeyword_2_11_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DDLStatement__Group_2_11__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_2_11__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_2_11__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getGroup_2_11_2()); }
(rule__DDLStatement__Group_2_11_2__0)*
{ after(grammarAccess.getDDLStatementAccess().getGroup_2_11_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DDLStatement__Group_2_11_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_2_11_2__0__Impl
	rule__DDLStatement__Group_2_11_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_2_11_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getStatementsAssignment_2_11_2_0()); }
(rule__DDLStatement__StatementsAssignment_2_11_2_0)
{ after(grammarAccess.getDDLStatementAccess().getStatementsAssignment_2_11_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DDLStatement__Group_2_11_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_2_11_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_2_11_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getSemicolonKeyword_2_11_2_1()); }

	';' 

{ after(grammarAccess.getDDLStatementAccess().getSemicolonKeyword_2_11_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DDLStatement__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_3__0__Impl
	rule__DDLStatement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getAlterTableStatementAction_3_0()); }
(

)
{ after(grammarAccess.getDDLStatementAccess().getAlterTableStatementAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DDLStatement__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_3__1__Impl
	rule__DDLStatement__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getAlterKeyword_3_1()); }

	'alter' 

{ after(grammarAccess.getDDLStatementAccess().getAlterKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DDLStatement__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_3__2__Impl
	rule__DDLStatement__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getTableKeyword_3_2()); }

	'table' 

{ after(grammarAccess.getDDLStatementAccess().getTableKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DDLStatement__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_3__3__Impl
	rule__DDLStatement__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getNameAssignment_3_3()); }
(rule__DDLStatement__NameAssignment_3_3)
{ after(grammarAccess.getDDLStatementAccess().getNameAssignment_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DDLStatement__Group_3__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_3__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getClauseAssignment_3_4()); }
(rule__DDLStatement__ClauseAssignment_3_4)
{ after(grammarAccess.getDDLStatementAccess().getClauseAssignment_3_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__DDLStatement__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_4__0__Impl
	rule__DDLStatement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getDropTableStatementAction_4_0()); }
(

)
{ after(grammarAccess.getDDLStatementAccess().getDropTableStatementAction_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DDLStatement__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_4__1__Impl
	rule__DDLStatement__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getDropKeyword_4_1()); }

	'drop' 

{ after(grammarAccess.getDDLStatementAccess().getDropKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DDLStatement__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_4__2__Impl
	rule__DDLStatement__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getTableKeyword_4_2()); }

	'table' 

{ after(grammarAccess.getDDLStatementAccess().getTableKeyword_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DDLStatement__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_4__3__Impl
	rule__DDLStatement__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getIfExistsAssignment_4_3()); }
(rule__DDLStatement__IfExistsAssignment_4_3)?
{ after(grammarAccess.getDDLStatementAccess().getIfExistsAssignment_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DDLStatement__Group_4__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_4__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getNameAssignment_4_4()); }
(rule__DDLStatement__NameAssignment_4_4)
{ after(grammarAccess.getDDLStatementAccess().getNameAssignment_4_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__DDLStatement__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_5__0__Impl
	rule__DDLStatement__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getDropTriggerStatementAction_5_0()); }
(

)
{ after(grammarAccess.getDDLStatementAccess().getDropTriggerStatementAction_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DDLStatement__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_5__1__Impl
	rule__DDLStatement__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getDropKeyword_5_1()); }

	'drop' 

{ after(grammarAccess.getDDLStatementAccess().getDropKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DDLStatement__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_5__2__Impl
	rule__DDLStatement__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getTriggerKeyword_5_2()); }

	'trigger' 

{ after(grammarAccess.getDDLStatementAccess().getTriggerKeyword_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DDLStatement__Group_5__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_5__3__Impl
	rule__DDLStatement__Group_5__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_5__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getIfExistsAssignment_5_3()); }
(rule__DDLStatement__IfExistsAssignment_5_3)?
{ after(grammarAccess.getDDLStatementAccess().getIfExistsAssignment_5_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DDLStatement__Group_5__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_5__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_5__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getNameAssignment_5_4()); }
(rule__DDLStatement__NameAssignment_5_4)
{ after(grammarAccess.getDDLStatementAccess().getNameAssignment_5_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__DDLStatement__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_6__0__Impl
	rule__DDLStatement__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getDropViewStatementAction_6_0()); }
(

)
{ after(grammarAccess.getDDLStatementAccess().getDropViewStatementAction_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DDLStatement__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_6__1__Impl
	rule__DDLStatement__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getDropKeyword_6_1()); }

	'drop' 

{ after(grammarAccess.getDDLStatementAccess().getDropKeyword_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DDLStatement__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_6__2__Impl
	rule__DDLStatement__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getViewKeyword_6_2()); }

	'view' 

{ after(grammarAccess.getDDLStatementAccess().getViewKeyword_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DDLStatement__Group_6__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_6__3__Impl
	rule__DDLStatement__Group_6__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_6__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getIfExistsAssignment_6_3()); }
(rule__DDLStatement__IfExistsAssignment_6_3)?
{ after(grammarAccess.getDDLStatementAccess().getIfExistsAssignment_6_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DDLStatement__Group_6__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DDLStatement__Group_6__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__Group_6__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getNameAssignment_6_4()); }
(rule__DDLStatement__NameAssignment_6_4)
{ after(grammarAccess.getDDLStatementAccess().getNameAssignment_6_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__DeleteStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeleteStatement__Group__0__Impl
	rule__DeleteStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeleteStatementAccess().getDeleteKeyword_0()); }

	'delete' 

{ after(grammarAccess.getDeleteStatementAccess().getDeleteKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeleteStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeleteStatement__Group__1__Impl
	rule__DeleteStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeleteStatementAccess().getFromKeyword_1()); }

	'from' 

{ after(grammarAccess.getDeleteStatementAccess().getFromKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeleteStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeleteStatement__Group__2__Impl
	rule__DeleteStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeleteStatementAccess().getTableNameAssignment_2()); }
(rule__DeleteStatement__TableNameAssignment_2)
{ after(grammarAccess.getDeleteStatementAccess().getTableNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeleteStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeleteStatement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeleteStatementAccess().getGroup_3()); }
(rule__DeleteStatement__Group_3__0)?
{ after(grammarAccess.getDeleteStatementAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__DeleteStatement__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeleteStatement__Group_3__0__Impl
	rule__DeleteStatement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteStatement__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeleteStatementAccess().getWhereKeyword_3_0()); }

	'where' 

{ after(grammarAccess.getDeleteStatementAccess().getWhereKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeleteStatement__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeleteStatement__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteStatement__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeleteStatementAccess().getExpressionAssignment_3_1()); }
(rule__DeleteStatement__ExpressionAssignment_3_1)
{ after(grammarAccess.getDeleteStatementAccess().getExpressionAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InsertStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InsertStatement__Group__0__Impl
	rule__InsertStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertStatementAccess().getAlternatives_0()); }
(rule__InsertStatement__Alternatives_0)
{ after(grammarAccess.getInsertStatementAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InsertStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InsertStatement__Group__1__Impl
	rule__InsertStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertStatementAccess().getIntoKeyword_1()); }

	'into' 

{ after(grammarAccess.getInsertStatementAccess().getIntoKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InsertStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InsertStatement__Group__2__Impl
	rule__InsertStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertStatementAccess().getTableNameAssignment_2()); }
(rule__InsertStatement__TableNameAssignment_2)
{ after(grammarAccess.getInsertStatementAccess().getTableNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InsertStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InsertStatement__Group__3__Impl
	rule__InsertStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertStatementAccess().getGroup_3()); }
(rule__InsertStatement__Group_3__0)?
{ after(grammarAccess.getInsertStatementAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InsertStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InsertStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertStatementAccess().getAlternatives_4()); }
(rule__InsertStatement__Alternatives_4)
{ after(grammarAccess.getInsertStatementAccess().getAlternatives_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__InsertStatement__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InsertStatement__Group_0_0__0__Impl
	rule__InsertStatement__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertStatementAccess().getInsertKeyword_0_0_0()); }

	'insert' 

{ after(grammarAccess.getInsertStatementAccess().getInsertKeyword_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InsertStatement__Group_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InsertStatement__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertStatementAccess().getGroup_0_0_1()); }
(rule__InsertStatement__Group_0_0_1__0)?
{ after(grammarAccess.getInsertStatementAccess().getGroup_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InsertStatement__Group_0_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InsertStatement__Group_0_0_1__0__Impl
	rule__InsertStatement__Group_0_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group_0_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertStatementAccess().getOrKeyword_0_0_1_0()); }

	'or' 

{ after(grammarAccess.getInsertStatementAccess().getOrKeyword_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InsertStatement__Group_0_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InsertStatement__Group_0_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group_0_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertStatementAccess().getConflictResolutionAssignment_0_0_1_1()); }
(rule__InsertStatement__ConflictResolutionAssignment_0_0_1_1)
{ after(grammarAccess.getInsertStatementAccess().getConflictResolutionAssignment_0_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InsertStatement__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InsertStatement__Group_3__0__Impl
	rule__InsertStatement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertStatementAccess().getLeftParenthesisKeyword_3_0()); }

	'(' 

{ after(grammarAccess.getInsertStatementAccess().getLeftParenthesisKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InsertStatement__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InsertStatement__Group_3__1__Impl
	rule__InsertStatement__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertStatementAccess().getColumnNamesAssignment_3_1()); }
(rule__InsertStatement__ColumnNamesAssignment_3_1)
{ after(grammarAccess.getInsertStatementAccess().getColumnNamesAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InsertStatement__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InsertStatement__Group_3__2__Impl
	rule__InsertStatement__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertStatementAccess().getGroup_3_2()); }
(rule__InsertStatement__Group_3_2__0)*
{ after(grammarAccess.getInsertStatementAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InsertStatement__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InsertStatement__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertStatementAccess().getRightParenthesisKeyword_3_3()); }

	')' 

{ after(grammarAccess.getInsertStatementAccess().getRightParenthesisKeyword_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__InsertStatement__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InsertStatement__Group_3_2__0__Impl
	rule__InsertStatement__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertStatementAccess().getCommaKeyword_3_2_0()); }

	',' 

{ after(grammarAccess.getInsertStatementAccess().getCommaKeyword_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InsertStatement__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InsertStatement__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertStatementAccess().getColumnNamesAssignment_3_2_1()); }
(rule__InsertStatement__ColumnNamesAssignment_3_2_1)
{ after(grammarAccess.getInsertStatementAccess().getColumnNamesAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InsertStatement__Group_4_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InsertStatement__Group_4_0_0__0__Impl
	rule__InsertStatement__Group_4_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group_4_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertStatementAccess().getValuesKeyword_4_0_0_0()); }

	'values' 

{ after(grammarAccess.getInsertStatementAccess().getValuesKeyword_4_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InsertStatement__Group_4_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InsertStatement__Group_4_0_0__1__Impl
	rule__InsertStatement__Group_4_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group_4_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertStatementAccess().getLeftParenthesisKeyword_4_0_0_1()); }

	'(' 

{ after(grammarAccess.getInsertStatementAccess().getLeftParenthesisKeyword_4_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InsertStatement__Group_4_0_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InsertStatement__Group_4_0_0__2__Impl
	rule__InsertStatement__Group_4_0_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group_4_0_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertStatementAccess().getExpressionsAssignment_4_0_0_2()); }
(rule__InsertStatement__ExpressionsAssignment_4_0_0_2)
{ after(grammarAccess.getInsertStatementAccess().getExpressionsAssignment_4_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InsertStatement__Group_4_0_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InsertStatement__Group_4_0_0__3__Impl
	rule__InsertStatement__Group_4_0_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group_4_0_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertStatementAccess().getGroup_4_0_0_3()); }
(rule__InsertStatement__Group_4_0_0_3__0)*
{ after(grammarAccess.getInsertStatementAccess().getGroup_4_0_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InsertStatement__Group_4_0_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InsertStatement__Group_4_0_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group_4_0_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertStatementAccess().getRightParenthesisKeyword_4_0_0_4()); }

	')' 

{ after(grammarAccess.getInsertStatementAccess().getRightParenthesisKeyword_4_0_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__InsertStatement__Group_4_0_0_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InsertStatement__Group_4_0_0_3__0__Impl
	rule__InsertStatement__Group_4_0_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group_4_0_0_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertStatementAccess().getCommaKeyword_4_0_0_3_0()); }

	',' 

{ after(grammarAccess.getInsertStatementAccess().getCommaKeyword_4_0_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InsertStatement__Group_4_0_0_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InsertStatement__Group_4_0_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group_4_0_0_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertStatementAccess().getExpressionsAssignment_4_0_0_3_1()); }
(rule__InsertStatement__ExpressionsAssignment_4_0_0_3_1)
{ after(grammarAccess.getInsertStatementAccess().getExpressionsAssignment_4_0_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InsertStatement__Group_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InsertStatement__Group_4_1__0__Impl
	rule__InsertStatement__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertStatementAccess().getDefaultKeyword_4_1_0()); }

	'default' 

{ after(grammarAccess.getInsertStatementAccess().getDefaultKeyword_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InsertStatement__Group_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InsertStatement__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertStatementAccess().getValuesKeyword_4_1_1()); }

	'values' 

{ after(grammarAccess.getInsertStatementAccess().getValuesKeyword_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UpdateStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UpdateStatement__Group__0__Impl
	rule__UpdateStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdateStatementAccess().getUpdateKeyword_0()); }

	'update' 

{ after(grammarAccess.getUpdateStatementAccess().getUpdateKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UpdateStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UpdateStatement__Group__1__Impl
	rule__UpdateStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdateStatementAccess().getGroup_1()); }
(rule__UpdateStatement__Group_1__0)?
{ after(grammarAccess.getUpdateStatementAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UpdateStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UpdateStatement__Group__2__Impl
	rule__UpdateStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdateStatementAccess().getTableNameAssignment_2()); }
(rule__UpdateStatement__TableNameAssignment_2)
{ after(grammarAccess.getUpdateStatementAccess().getTableNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UpdateStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UpdateStatement__Group__3__Impl
	rule__UpdateStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdateStatementAccess().getSetKeyword_3()); }

	'set' 

{ after(grammarAccess.getUpdateStatementAccess().getSetKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UpdateStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UpdateStatement__Group__4__Impl
	rule__UpdateStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdateStatementAccess().getUpdateColumnExpressionsAssignment_4()); }
(rule__UpdateStatement__UpdateColumnExpressionsAssignment_4)
{ after(grammarAccess.getUpdateStatementAccess().getUpdateColumnExpressionsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UpdateStatement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UpdateStatement__Group__5__Impl
	rule__UpdateStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdateStatementAccess().getGroup_5()); }
(rule__UpdateStatement__Group_5__0)*
{ after(grammarAccess.getUpdateStatementAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UpdateStatement__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UpdateStatement__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdateStatementAccess().getGroup_6()); }
(rule__UpdateStatement__Group_6__0)?
{ after(grammarAccess.getUpdateStatementAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__UpdateStatement__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UpdateStatement__Group_1__0__Impl
	rule__UpdateStatement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdateStatementAccess().getOrKeyword_1_0()); }

	'or' 

{ after(grammarAccess.getUpdateStatementAccess().getOrKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UpdateStatement__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UpdateStatement__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdateStatementAccess().getConflictResolutionAssignment_1_1()); }
(rule__UpdateStatement__ConflictResolutionAssignment_1_1)
{ after(grammarAccess.getUpdateStatementAccess().getConflictResolutionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UpdateStatement__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UpdateStatement__Group_5__0__Impl
	rule__UpdateStatement__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdateStatementAccess().getCommaKeyword_5_0()); }

	',' 

{ after(grammarAccess.getUpdateStatementAccess().getCommaKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UpdateStatement__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UpdateStatement__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdateStatementAccess().getUpdateColumnExpressionsAssignment_5_1()); }
(rule__UpdateStatement__UpdateColumnExpressionsAssignment_5_1)
{ after(grammarAccess.getUpdateStatementAccess().getUpdateColumnExpressionsAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UpdateStatement__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UpdateStatement__Group_6__0__Impl
	rule__UpdateStatement__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdateStatementAccess().getWhereKeyword_6_0()); }

	'where' 

{ after(grammarAccess.getUpdateStatementAccess().getWhereKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UpdateStatement__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UpdateStatement__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdateStatementAccess().getWhereExpressionAssignment_6_1()); }
(rule__UpdateStatement__WhereExpressionAssignment_6_1)
{ after(grammarAccess.getUpdateStatementAccess().getWhereExpressionAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UpdateColumnExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UpdateColumnExpression__Group__0__Impl
	rule__UpdateColumnExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateColumnExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdateColumnExpressionAccess().getColumnNameAssignment_0()); }
(rule__UpdateColumnExpression__ColumnNameAssignment_0)
{ after(grammarAccess.getUpdateColumnExpressionAccess().getColumnNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UpdateColumnExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UpdateColumnExpression__Group__1__Impl
	rule__UpdateColumnExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateColumnExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdateColumnExpressionAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getUpdateColumnExpressionAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UpdateColumnExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UpdateColumnExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateColumnExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdateColumnExpressionAccess().getExpressionAssignment_2()); }
(rule__UpdateColumnExpression__ExpressionAssignment_2)
{ after(grammarAccess.getUpdateColumnExpressionAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SelectStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectStatement__Group__0__Impl
	rule__SelectStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectStatementAccess().getCoreAssignment_0()); }
(rule__SelectStatement__CoreAssignment_0)
{ after(grammarAccess.getSelectStatementAccess().getCoreAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectStatementAccess().getGroup_1()); }
(rule__SelectStatement__Group_1__0)?
{ after(grammarAccess.getSelectStatementAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SelectStatement__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectStatement__Group_1__0__Impl
	rule__SelectStatement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectStatementAccess().getOrderByKeyword_1_0()); }

	'order by' 

{ after(grammarAccess.getSelectStatementAccess().getOrderByKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectStatement__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectStatement__Group_1__1__Impl
	rule__SelectStatement__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectStatementAccess().getOrderingTermsAssignment_1_1()); }
(rule__SelectStatement__OrderingTermsAssignment_1_1)
{ after(grammarAccess.getSelectStatementAccess().getOrderingTermsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectStatement__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectStatement__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectStatementAccess().getGroup_1_2()); }
(rule__SelectStatement__Group_1_2__0)*
{ after(grammarAccess.getSelectStatementAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SelectStatement__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectStatement__Group_1_2__0__Impl
	rule__SelectStatement__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectStatementAccess().getCommaKeyword_1_2_0()); }

	',' 

{ after(grammarAccess.getSelectStatementAccess().getCommaKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectStatement__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectStatement__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectStatementAccess().getOrderingTermsAssignment_1_2_1()); }
(rule__SelectStatement__OrderingTermsAssignment_1_2_1)
{ after(grammarAccess.getSelectStatementAccess().getOrderingTermsAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SelectCore__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectCore__Group__0__Impl
	rule__SelectCore__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCore__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreAccess().getSelectCoreOperandParserRuleCall_0()); }
	ruleSelectCoreOperand
{ after(grammarAccess.getSelectCoreAccess().getSelectCoreOperandParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectCore__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectCore__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCore__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreAccess().getGroup_1()); }
(rule__SelectCore__Group_1__0)*
{ after(grammarAccess.getSelectCoreAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SelectCore__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectCore__Group_1__0__Impl
	rule__SelectCore__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCore__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreAccess().getSelectCoreLeftAction_1_0()); }
(

)
{ after(grammarAccess.getSelectCoreAccess().getSelectCoreLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectCore__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectCore__Group_1__1__Impl
	rule__SelectCore__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCore__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreAccess().getOpAssignment_1_1()); }
(rule__SelectCore__OpAssignment_1_1)
{ after(grammarAccess.getSelectCoreAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectCore__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectCore__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCore__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreAccess().getRightAssignment_1_2()); }
(rule__SelectCore__RightAssignment_1_2)
{ after(grammarAccess.getSelectCoreAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SelectCoreOperand__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectCoreOperand__Group__0__Impl
	rule__SelectCoreOperand__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCoreOperand__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreOperandAccess().getSelectKeyword_0()); }

	'select' 

{ after(grammarAccess.getSelectCoreOperandAccess().getSelectKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectCoreOperand__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectCoreOperand__Group__1__Impl
	rule__SelectCoreOperand__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCoreOperand__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreOperandAccess().getAlternatives_1()); }
(rule__SelectCoreOperand__Alternatives_1)?
{ after(grammarAccess.getSelectCoreOperandAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectCoreOperand__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectCoreOperand__Group__2__Impl
	rule__SelectCoreOperand__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCoreOperand__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreOperandAccess().getResultColumnsAssignment_2()); }
(rule__SelectCoreOperand__ResultColumnsAssignment_2)
{ after(grammarAccess.getSelectCoreOperandAccess().getResultColumnsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectCoreOperand__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectCoreOperand__Group__3__Impl
	rule__SelectCoreOperand__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCoreOperand__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreOperandAccess().getGroup_3()); }
(rule__SelectCoreOperand__Group_3__0)*
{ after(grammarAccess.getSelectCoreOperandAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectCoreOperand__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectCoreOperand__Group__4__Impl
	rule__SelectCoreOperand__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCoreOperand__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreOperandAccess().getGroup_4()); }
(rule__SelectCoreOperand__Group_4__0)?
{ after(grammarAccess.getSelectCoreOperandAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectCoreOperand__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectCoreOperand__Group__5__Impl
	rule__SelectCoreOperand__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCoreOperand__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreOperandAccess().getGroup_5()); }
(rule__SelectCoreOperand__Group_5__0)?
{ after(grammarAccess.getSelectCoreOperandAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectCoreOperand__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectCoreOperand__Group__6__Impl
	rule__SelectCoreOperand__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCoreOperand__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreOperandAccess().getGroup_6()); }
(rule__SelectCoreOperand__Group_6__0)?
{ after(grammarAccess.getSelectCoreOperandAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectCoreOperand__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectCoreOperand__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCoreOperand__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreOperandAccess().getGroup_7()); }
(rule__SelectCoreOperand__Group_7__0)?
{ after(grammarAccess.getSelectCoreOperandAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__SelectCoreOperand__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectCoreOperand__Group_3__0__Impl
	rule__SelectCoreOperand__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCoreOperand__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreOperandAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getSelectCoreOperandAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectCoreOperand__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectCoreOperand__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCoreOperand__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreOperandAccess().getResultColumnsAssignment_3_1()); }
(rule__SelectCoreOperand__ResultColumnsAssignment_3_1)
{ after(grammarAccess.getSelectCoreOperandAccess().getResultColumnsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SelectCoreOperand__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectCoreOperand__Group_4__0__Impl
	rule__SelectCoreOperand__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCoreOperand__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreOperandAccess().getFromKeyword_4_0()); }

	'from' 

{ after(grammarAccess.getSelectCoreOperandAccess().getFromKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectCoreOperand__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectCoreOperand__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCoreOperand__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreOperandAccess().getSourceAssignment_4_1()); }
(rule__SelectCoreOperand__SourceAssignment_4_1)
{ after(grammarAccess.getSelectCoreOperandAccess().getSourceAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SelectCoreOperand__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectCoreOperand__Group_5__0__Impl
	rule__SelectCoreOperand__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCoreOperand__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreOperandAccess().getWhereKeyword_5_0()); }

	'where' 

{ after(grammarAccess.getSelectCoreOperandAccess().getWhereKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectCoreOperand__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectCoreOperand__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCoreOperand__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreOperandAccess().getWhereExpressionAssignment_5_1()); }
(rule__SelectCoreOperand__WhereExpressionAssignment_5_1)
{ after(grammarAccess.getSelectCoreOperandAccess().getWhereExpressionAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SelectCoreOperand__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectCoreOperand__Group_6__0__Impl
	rule__SelectCoreOperand__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCoreOperand__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreOperandAccess().getGroupByKeyword_6_0()); }

	'group by' 

{ after(grammarAccess.getSelectCoreOperandAccess().getGroupByKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectCoreOperand__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectCoreOperand__Group_6__1__Impl
	rule__SelectCoreOperand__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCoreOperand__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreOperandAccess().getGroupByExpressionsAssignment_6_1()); }
(rule__SelectCoreOperand__GroupByExpressionsAssignment_6_1)
{ after(grammarAccess.getSelectCoreOperandAccess().getGroupByExpressionsAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectCoreOperand__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectCoreOperand__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCoreOperand__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreOperandAccess().getGroup_6_2()); }
(rule__SelectCoreOperand__Group_6_2__0)*
{ after(grammarAccess.getSelectCoreOperandAccess().getGroup_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SelectCoreOperand__Group_6_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectCoreOperand__Group_6_2__0__Impl
	rule__SelectCoreOperand__Group_6_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCoreOperand__Group_6_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreOperandAccess().getCommaKeyword_6_2_0()); }

	',' 

{ after(grammarAccess.getSelectCoreOperandAccess().getCommaKeyword_6_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectCoreOperand__Group_6_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectCoreOperand__Group_6_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCoreOperand__Group_6_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreOperandAccess().getGroupByExpressionsAssignment_6_2_1()); }
(rule__SelectCoreOperand__GroupByExpressionsAssignment_6_2_1)
{ after(grammarAccess.getSelectCoreOperandAccess().getGroupByExpressionsAssignment_6_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SelectCoreOperand__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectCoreOperand__Group_7__0__Impl
	rule__SelectCoreOperand__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCoreOperand__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreOperandAccess().getHavingKeyword_7_0()); }

	'having' 

{ after(grammarAccess.getSelectCoreOperandAccess().getHavingKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectCoreOperand__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectCoreOperand__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCoreOperand__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreOperandAccess().getHavingExpressionAssignment_7_1()); }
(rule__SelectCoreOperand__HavingExpressionAssignment_7_1)
{ after(grammarAccess.getSelectCoreOperandAccess().getHavingExpressionAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AlterTableClause__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AlterTableClause__Group_0__0__Impl
	rule__AlterTableClause__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AlterTableClause__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlterTableClauseAccess().getAlterTableRenameClauseAction_0_0()); }
(

)
{ after(grammarAccess.getAlterTableClauseAccess().getAlterTableRenameClauseAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AlterTableClause__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AlterTableClause__Group_0__1__Impl
	rule__AlterTableClause__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AlterTableClause__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlterTableClauseAccess().getRenameToKeyword_0_1()); }

	'rename to' 

{ after(grammarAccess.getAlterTableClauseAccess().getRenameToKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AlterTableClause__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AlterTableClause__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AlterTableClause__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlterTableClauseAccess().getNameAssignment_0_2()); }
(rule__AlterTableClause__NameAssignment_0_2)
{ after(grammarAccess.getAlterTableClauseAccess().getNameAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AlterTableClause__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AlterTableClause__Group_1__0__Impl
	rule__AlterTableClause__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AlterTableClause__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlterTableClauseAccess().getAlterTableAddColumnClauseAction_1_0()); }
(

)
{ after(grammarAccess.getAlterTableClauseAccess().getAlterTableAddColumnClauseAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AlterTableClause__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AlterTableClause__Group_1__1__Impl
	rule__AlterTableClause__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AlterTableClause__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlterTableClauseAccess().getAddColumnKeyword_1_1()); }

	'add column' 

{ after(grammarAccess.getAlterTableClauseAccess().getAddColumnKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AlterTableClause__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AlterTableClause__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AlterTableClause__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlterTableClauseAccess().getColumnDefAssignment_1_2()); }
(rule__AlterTableClause__ColumnDefAssignment_1_2)
{ after(grammarAccess.getAlterTableClauseAccess().getColumnDefAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ColumnDef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ColumnDef__Group__0__Impl
	rule__ColumnDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnDef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColumnDefAccess().getNameAssignment_0()); }
(rule__ColumnDef__NameAssignment_0)
{ after(grammarAccess.getColumnDefAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ColumnDef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ColumnDef__Group__1__Impl
	rule__ColumnDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnDef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColumnDefAccess().getTypeAssignment_1()); }
(rule__ColumnDef__TypeAssignment_1)
{ after(grammarAccess.getColumnDefAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ColumnDef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ColumnDef__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnDef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColumnDefAccess().getConstraintsAssignment_2()); }
(rule__ColumnDef__ConstraintsAssignment_2)*
{ after(grammarAccess.getColumnDefAccess().getConstraintsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ColumnConstraint__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ColumnConstraint__Group_0__0__Impl
	rule__ColumnConstraint__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnConstraint__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColumnConstraintAccess().getPrimaryKeyColumnConstraintAction_0_0()); }
(

)
{ after(grammarAccess.getColumnConstraintAccess().getPrimaryKeyColumnConstraintAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ColumnConstraint__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ColumnConstraint__Group_0__1__Impl
	rule__ColumnConstraint__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnConstraint__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColumnConstraintAccess().getPrimaryKeyKeyword_0_1()); }

	'primary key' 

{ after(grammarAccess.getColumnConstraintAccess().getPrimaryKeyKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ColumnConstraint__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ColumnConstraint__Group_0__2__Impl
	rule__ColumnConstraint__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnConstraint__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColumnConstraintAccess().getAlternatives_0_2()); }
(rule__ColumnConstraint__Alternatives_0_2)?
{ after(grammarAccess.getColumnConstraintAccess().getAlternatives_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ColumnConstraint__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ColumnConstraint__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnConstraint__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColumnConstraintAccess().getAutoincrementAssignment_0_3()); }
(rule__ColumnConstraint__AutoincrementAssignment_0_3)?
{ after(grammarAccess.getColumnConstraintAccess().getAutoincrementAssignment_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ColumnConstraint__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ColumnConstraint__Group_1__0__Impl
	rule__ColumnConstraint__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnConstraint__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColumnConstraintAccess().getNotNullConstraintAction_1_0()); }
(

)
{ after(grammarAccess.getColumnConstraintAccess().getNotNullConstraintAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ColumnConstraint__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ColumnConstraint__Group_1__1__Impl
	rule__ColumnConstraint__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnConstraint__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColumnConstraintAccess().getNotNullKeyword_1_1()); }

	'not null' 

{ after(grammarAccess.getColumnConstraintAccess().getNotNullKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ColumnConstraint__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ColumnConstraint__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnConstraint__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColumnConstraintAccess().getConflictClauseAssignment_1_2()); }
(rule__ColumnConstraint__ConflictClauseAssignment_1_2)?
{ after(grammarAccess.getColumnConstraintAccess().getConflictClauseAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ColumnConstraint__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ColumnConstraint__Group_2__0__Impl
	rule__ColumnConstraint__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnConstraint__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColumnConstraintAccess().getDefaultConstraintAction_2_0()); }
(

)
{ after(grammarAccess.getColumnConstraintAccess().getDefaultConstraintAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ColumnConstraint__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ColumnConstraint__Group_2__1__Impl
	rule__ColumnConstraint__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnConstraint__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColumnConstraintAccess().getDefaultKeyword_2_1()); }

	'default' 

{ after(grammarAccess.getColumnConstraintAccess().getDefaultKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ColumnConstraint__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ColumnConstraint__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnConstraint__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColumnConstraintAccess().getDefaultValueAssignment_2_2()); }
(rule__ColumnConstraint__DefaultValueAssignment_2_2)
{ after(grammarAccess.getColumnConstraintAccess().getDefaultValueAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DefaultValue__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefaultValue__Group_0__0__Impl
	rule__DefaultValue__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultValue__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultValueAccess().getLiteralDefaultValueAction_0_0()); }
(

)
{ after(grammarAccess.getDefaultValueAccess().getLiteralDefaultValueAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefaultValue__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefaultValue__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultValue__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultValueAccess().getLiteralAssignment_0_1()); }
(rule__DefaultValue__LiteralAssignment_0_1)
{ after(grammarAccess.getDefaultValueAccess().getLiteralAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DefaultValue__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefaultValue__Group_1__0__Impl
	rule__DefaultValue__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultValue__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultValueAccess().getExpressionDefaultValueAction_1_0()); }
(

)
{ after(grammarAccess.getDefaultValueAccess().getExpressionDefaultValueAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefaultValue__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefaultValue__Group_1__1__Impl
	rule__DefaultValue__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultValue__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultValueAccess().getLeftParenthesisKeyword_1_1()); }

	'(' 

{ after(grammarAccess.getDefaultValueAccess().getLeftParenthesisKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefaultValue__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefaultValue__Group_1__2__Impl
	rule__DefaultValue__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultValue__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultValueAccess().getExpressionAssignment_1_2()); }
(rule__DefaultValue__ExpressionAssignment_1_2)
{ after(grammarAccess.getDefaultValueAccess().getExpressionAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefaultValue__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefaultValue__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultValue__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultValueAccess().getRightParenthesisKeyword_1_3()); }

	')' 

{ after(grammarAccess.getDefaultValueAccess().getRightParenthesisKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TableConstraint__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_0__0__Impl
	rule__TableConstraint__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getUniqueTableContraintAction_0_0()); }
(

)
{ after(grammarAccess.getTableConstraintAccess().getUniqueTableContraintAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableConstraint__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_0__1__Impl
	rule__TableConstraint__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getGroup_0_1()); }
(rule__TableConstraint__Group_0_1__0)?
{ after(grammarAccess.getTableConstraintAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableConstraint__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_0__2__Impl
	rule__TableConstraint__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getUniqueKeyword_0_2()); }

	'unique' 

{ after(grammarAccess.getTableConstraintAccess().getUniqueKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableConstraint__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_0__3__Impl
	rule__TableConstraint__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getLeftParenthesisKeyword_0_3()); }

	'(' 

{ after(grammarAccess.getTableConstraintAccess().getLeftParenthesisKeyword_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableConstraint__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_0__4__Impl
	rule__TableConstraint__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getColumnsAssignment_0_4()); }
(rule__TableConstraint__ColumnsAssignment_0_4)
{ after(grammarAccess.getTableConstraintAccess().getColumnsAssignment_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableConstraint__Group_0__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_0__5__Impl
	rule__TableConstraint__Group_0__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_0__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getGroup_0_5()); }
(rule__TableConstraint__Group_0_5__0)*
{ after(grammarAccess.getTableConstraintAccess().getGroup_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableConstraint__Group_0__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_0__6__Impl
	rule__TableConstraint__Group_0__7
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_0__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getRightParenthesisKeyword_0_6()); }

	')' 

{ after(grammarAccess.getTableConstraintAccess().getRightParenthesisKeyword_0_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableConstraint__Group_0__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_0__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_0__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getConflictClauseAssignment_0_7()); }
(rule__TableConstraint__ConflictClauseAssignment_0_7)
{ after(grammarAccess.getTableConstraintAccess().getConflictClauseAssignment_0_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__TableConstraint__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_0_1__0__Impl
	rule__TableConstraint__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getConstraintKeyword_0_1_0()); }

	'constraint' 

{ after(grammarAccess.getTableConstraintAccess().getConstraintKeyword_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableConstraint__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getNameAssignment_0_1_1()); }
(rule__TableConstraint__NameAssignment_0_1_1)
{ after(grammarAccess.getTableConstraintAccess().getNameAssignment_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TableConstraint__Group_0_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_0_5__0__Impl
	rule__TableConstraint__Group_0_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_0_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getCommaKeyword_0_5_0()); }

	',' 

{ after(grammarAccess.getTableConstraintAccess().getCommaKeyword_0_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableConstraint__Group_0_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_0_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_0_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getColumnsAssignment_0_5_1()); }
(rule__TableConstraint__ColumnsAssignment_0_5_1)
{ after(grammarAccess.getTableConstraintAccess().getColumnsAssignment_0_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TableConstraint__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_1__0__Impl
	rule__TableConstraint__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getPrimaryContraintAction_1_0()); }
(

)
{ after(grammarAccess.getTableConstraintAccess().getPrimaryContraintAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableConstraint__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_1__1__Impl
	rule__TableConstraint__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getGroup_1_1()); }
(rule__TableConstraint__Group_1_1__0)?
{ after(grammarAccess.getTableConstraintAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableConstraint__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_1__2__Impl
	rule__TableConstraint__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getPrimaryKeyword_1_2()); }

	'primary' 

{ after(grammarAccess.getTableConstraintAccess().getPrimaryKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableConstraint__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_1__3__Impl
	rule__TableConstraint__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getKeyKeyword_1_3()); }

	'key' 

{ after(grammarAccess.getTableConstraintAccess().getKeyKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableConstraint__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_1__4__Impl
	rule__TableConstraint__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getLeftParenthesisKeyword_1_4()); }

	'(' 

{ after(grammarAccess.getTableConstraintAccess().getLeftParenthesisKeyword_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableConstraint__Group_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_1__5__Impl
	rule__TableConstraint__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getColumnsAssignment_1_5()); }
(rule__TableConstraint__ColumnsAssignment_1_5)
{ after(grammarAccess.getTableConstraintAccess().getColumnsAssignment_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableConstraint__Group_1__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_1__6__Impl
	rule__TableConstraint__Group_1__7
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_1__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getGroup_1_6()); }
(rule__TableConstraint__Group_1_6__0)*
{ after(grammarAccess.getTableConstraintAccess().getGroup_1_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableConstraint__Group_1__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_1__7__Impl
	rule__TableConstraint__Group_1__8
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_1__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getRightParenthesisKeyword_1_7()); }

	')' 

{ after(grammarAccess.getTableConstraintAccess().getRightParenthesisKeyword_1_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableConstraint__Group_1__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_1__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_1__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getConflictClauseAssignment_1_8()); }
(rule__TableConstraint__ConflictClauseAssignment_1_8)
{ after(grammarAccess.getTableConstraintAccess().getConflictClauseAssignment_1_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__TableConstraint__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_1_1__0__Impl
	rule__TableConstraint__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getConstraintKeyword_1_1_0()); }

	'constraint' 

{ after(grammarAccess.getTableConstraintAccess().getConstraintKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableConstraint__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getNameAssignment_1_1_1()); }
(rule__TableConstraint__NameAssignment_1_1_1)
{ after(grammarAccess.getTableConstraintAccess().getNameAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TableConstraint__Group_1_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_1_6__0__Impl
	rule__TableConstraint__Group_1_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_1_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getCommaKeyword_1_6_0()); }

	',' 

{ after(grammarAccess.getTableConstraintAccess().getCommaKeyword_1_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableConstraint__Group_1_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_1_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_1_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getColumnsAssignment_1_6_1()); }
(rule__TableConstraint__ColumnsAssignment_1_6_1)
{ after(grammarAccess.getTableConstraintAccess().getColumnsAssignment_1_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TableConstraint__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_2__0__Impl
	rule__TableConstraint__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getCheckTableConstraintAction_2_0()); }
(

)
{ after(grammarAccess.getTableConstraintAccess().getCheckTableConstraintAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableConstraint__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_2__1__Impl
	rule__TableConstraint__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getGroup_2_1()); }
(rule__TableConstraint__Group_2_1__0)?
{ after(grammarAccess.getTableConstraintAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableConstraint__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_2__2__Impl
	rule__TableConstraint__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getCheckKeyword_2_2()); }

	'check' 

{ after(grammarAccess.getTableConstraintAccess().getCheckKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableConstraint__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_2__3__Impl
	rule__TableConstraint__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getLeftParenthesisKeyword_2_3()); }

	'(' 

{ after(grammarAccess.getTableConstraintAccess().getLeftParenthesisKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableConstraint__Group_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_2__4__Impl
	rule__TableConstraint__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getExpressionAssignment_2_4()); }
(rule__TableConstraint__ExpressionAssignment_2_4)
{ after(grammarAccess.getTableConstraintAccess().getExpressionAssignment_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableConstraint__Group_2__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_2__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_2__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getRightParenthesisKeyword_2_5()); }

	')' 

{ after(grammarAccess.getTableConstraintAccess().getRightParenthesisKeyword_2_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__TableConstraint__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_2_1__0__Impl
	rule__TableConstraint__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getConstraintKeyword_2_1_0()); }

	'constraint' 

{ after(grammarAccess.getTableConstraintAccess().getConstraintKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableConstraint__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getNameAssignment_2_1_1()); }
(rule__TableConstraint__NameAssignment_2_1_1)
{ after(grammarAccess.getTableConstraintAccess().getNameAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IndexedColumn__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IndexedColumn__Group__0__Impl
	rule__IndexedColumn__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexedColumn__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexedColumnAccess().getNameAssignment_0()); }
(rule__IndexedColumn__NameAssignment_0)
{ after(grammarAccess.getIndexedColumnAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IndexedColumn__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IndexedColumn__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexedColumn__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexedColumnAccess().getAlternatives_1()); }
(rule__IndexedColumn__Alternatives_1)?
{ after(grammarAccess.getIndexedColumnAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrderingTerm__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrderingTerm__Group__0__Impl
	rule__OrderingTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderingTerm__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrderingTermAccess().getExpressionAssignment_0()); }
(rule__OrderingTerm__ExpressionAssignment_0)
{ after(grammarAccess.getOrderingTermAccess().getExpressionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrderingTerm__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrderingTerm__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderingTerm__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrderingTermAccess().getAlternatives_1()); }
(rule__OrderingTerm__Alternatives_1)?
{ after(grammarAccess.getOrderingTermAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JoinSource__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JoinSource__Group__0__Impl
	rule__JoinSource__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinSource__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinSourceAccess().getSourceAssignment_0()); }
(rule__JoinSource__SourceAssignment_0)
{ after(grammarAccess.getJoinSourceAccess().getSourceAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JoinSource__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JoinSource__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinSource__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinSourceAccess().getJoinStatementsAssignment_1()); }
(rule__JoinSource__JoinStatementsAssignment_1)*
{ after(grammarAccess.getJoinSourceAccess().getJoinStatementsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SingleSource__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleSource__Group_0__0__Impl
	rule__SingleSource__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleSource__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleSourceAccess().getSingleSourceTableAction_0_0()); }
(

)
{ after(grammarAccess.getSingleSourceAccess().getSingleSourceTableAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleSource__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleSource__Group_0__1__Impl
	rule__SingleSource__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleSource__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleSourceAccess().getTableAssignment_0_1()); }
(rule__SingleSource__TableAssignment_0_1)
{ after(grammarAccess.getSingleSourceAccess().getTableAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleSource__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleSource__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleSource__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleSourceAccess().getGroup_0_2()); }
(rule__SingleSource__Group_0_2__0)?
{ after(grammarAccess.getSingleSourceAccess().getGroup_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SingleSource__Group_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleSource__Group_0_2__0__Impl
	rule__SingleSource__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleSource__Group_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleSourceAccess().getAsKeyword_0_2_0()); }

	'as' 

{ after(grammarAccess.getSingleSourceAccess().getAsKeyword_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleSource__Group_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleSource__Group_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleSource__Group_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleSourceAccess().getNameAssignment_0_2_1()); }
(rule__SingleSource__NameAssignment_0_2_1)
{ after(grammarAccess.getSingleSourceAccess().getNameAssignment_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SingleSource__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleSource__Group_1__0__Impl
	rule__SingleSource__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleSource__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleSourceAccess().getSingleSourceSelectStatementAction_1_0()); }
(

)
{ after(grammarAccess.getSingleSourceAccess().getSingleSourceSelectStatementAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleSource__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleSource__Group_1__1__Impl
	rule__SingleSource__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleSource__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleSourceAccess().getLeftParenthesisKeyword_1_1()); }

	'(' 

{ after(grammarAccess.getSingleSourceAccess().getLeftParenthesisKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleSource__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleSource__Group_1__2__Impl
	rule__SingleSource__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleSource__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleSourceAccess().getSelectStatementAssignment_1_2()); }
(rule__SingleSource__SelectStatementAssignment_1_2)
{ after(grammarAccess.getSingleSourceAccess().getSelectStatementAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleSource__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleSource__Group_1__3__Impl
	rule__SingleSource__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleSource__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleSourceAccess().getRightParenthesisKeyword_1_3()); }

	')' 

{ after(grammarAccess.getSingleSourceAccess().getRightParenthesisKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleSource__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleSource__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleSource__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleSourceAccess().getGroup_1_4()); }
(rule__SingleSource__Group_1_4__0)?
{ after(grammarAccess.getSingleSourceAccess().getGroup_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__SingleSource__Group_1_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleSource__Group_1_4__0__Impl
	rule__SingleSource__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleSource__Group_1_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleSourceAccess().getAsKeyword_1_4_0()); }

	'as' 

{ after(grammarAccess.getSingleSourceAccess().getAsKeyword_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleSource__Group_1_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleSource__Group_1_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleSource__Group_1_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleSourceAccess().getNameAssignment_1_4_1()); }
(rule__SingleSource__NameAssignment_1_4_1)
{ after(grammarAccess.getSingleSourceAccess().getNameAssignment_1_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SingleSource__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleSource__Group_2__0__Impl
	rule__SingleSource__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleSource__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleSourceAccess().getSingleSourceJoinAction_2_0()); }
(

)
{ after(grammarAccess.getSingleSourceAccess().getSingleSourceJoinAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleSource__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleSource__Group_2__1__Impl
	rule__SingleSource__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleSource__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleSourceAccess().getLeftParenthesisKeyword_2_1()); }

	'(' 

{ after(grammarAccess.getSingleSourceAccess().getLeftParenthesisKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleSource__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleSource__Group_2__2__Impl
	rule__SingleSource__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleSource__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleSourceAccess().getJoinSourceAssignment_2_2()); }
(rule__SingleSource__JoinSourceAssignment_2_2)
{ after(grammarAccess.getSingleSourceAccess().getJoinSourceAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleSource__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleSource__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleSource__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleSourceAccess().getRightParenthesisKeyword_2_3()); }

	')' 

{ after(grammarAccess.getSingleSourceAccess().getRightParenthesisKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__JoinStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JoinStatement__Group__0__Impl
	rule__JoinStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinStatementAccess().getJoinStatementAction_0()); }
(

)
{ after(grammarAccess.getJoinStatementAccess().getJoinStatementAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JoinStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JoinStatement__Group__1__Impl
	rule__JoinStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinStatementAccess().getNaturalAssignment_1()); }
(rule__JoinStatement__NaturalAssignment_1)?
{ after(grammarAccess.getJoinStatementAccess().getNaturalAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JoinStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JoinStatement__Group__2__Impl
	rule__JoinStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinStatementAccess().getAlternatives_2()); }
(rule__JoinStatement__Alternatives_2)?
{ after(grammarAccess.getJoinStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JoinStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JoinStatement__Group__3__Impl
	rule__JoinStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinStatementAccess().getJoinKeyword_3()); }

	'join' 

{ after(grammarAccess.getJoinStatementAccess().getJoinKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JoinStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JoinStatement__Group__4__Impl
	rule__JoinStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinStatementAccess().getSingleSourceAssignment_4()); }
(rule__JoinStatement__SingleSourceAssignment_4)
{ after(grammarAccess.getJoinStatementAccess().getSingleSourceAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JoinStatement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JoinStatement__Group__5__Impl
	rule__JoinStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStatement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinStatementAccess().getOnKeyword_5()); }

	'on' 

{ after(grammarAccess.getJoinStatementAccess().getOnKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JoinStatement__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JoinStatement__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStatement__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinStatementAccess().getExpressionAssignment_6()); }
(rule__JoinStatement__ExpressionAssignment_6)
{ after(grammarAccess.getJoinStatementAccess().getExpressionAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__JoinStatement__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JoinStatement__Group_2_0__0__Impl
	rule__JoinStatement__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStatement__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinStatementAccess().getLeftAssignment_2_0_0()); }
(rule__JoinStatement__LeftAssignment_2_0_0)
{ after(grammarAccess.getJoinStatementAccess().getLeftAssignment_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JoinStatement__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JoinStatement__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStatement__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinStatementAccess().getOuterAssignment_2_0_1()); }
(rule__JoinStatement__OuterAssignment_2_0_1)?
{ after(grammarAccess.getJoinStatementAccess().getOuterAssignment_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ResultColumn__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResultColumn__Group_0__0__Impl
	rule__ResultColumn__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultColumn__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResultColumnAccess().getResultColumnAllAction_0_0()); }
(

)
{ after(grammarAccess.getResultColumnAccess().getResultColumnAllAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResultColumn__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResultColumn__Group_0__1__Impl
	rule__ResultColumn__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultColumn__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResultColumnAccess().getGroup_0_1()); }
(rule__ResultColumn__Group_0_1__0)?
{ after(grammarAccess.getResultColumnAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResultColumn__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResultColumn__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultColumn__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResultColumnAccess().getAsteriskKeyword_0_2()); }

	'*' 

{ after(grammarAccess.getResultColumnAccess().getAsteriskKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ResultColumn__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResultColumn__Group_0_1__0__Impl
	rule__ResultColumn__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultColumn__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResultColumnAccess().getSourceAssignment_0_1_0()); }
(rule__ResultColumn__SourceAssignment_0_1_0)
{ after(grammarAccess.getResultColumnAccess().getSourceAssignment_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResultColumn__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResultColumn__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultColumn__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResultColumnAccess().getFullStopKeyword_0_1_1()); }

	'.' 

{ after(grammarAccess.getResultColumnAccess().getFullStopKeyword_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ResultColumn__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResultColumn__Group_1__0__Impl
	rule__ResultColumn__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultColumn__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResultColumnAccess().getResultColumnExpressionAction_1_0()); }
(

)
{ after(grammarAccess.getResultColumnAccess().getResultColumnExpressionAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResultColumn__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResultColumn__Group_1__1__Impl
	rule__ResultColumn__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultColumn__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResultColumnAccess().getExpressionAssignment_1_1()); }
(rule__ResultColumn__ExpressionAssignment_1_1)
{ after(grammarAccess.getResultColumnAccess().getExpressionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResultColumn__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResultColumn__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultColumn__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResultColumnAccess().getGroup_1_2()); }
(rule__ResultColumn__Group_1_2__0)?
{ after(grammarAccess.getResultColumnAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ResultColumn__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResultColumn__Group_1_2__0__Impl
	rule__ResultColumn__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultColumn__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResultColumnAccess().getAsKeyword_1_2_0()); }

	'as' 

{ after(grammarAccess.getResultColumnAccess().getAsKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResultColumn__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResultColumn__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultColumn__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResultColumnAccess().getNameAssignment_1_2_1()); }
(rule__ResultColumn__NameAssignment_1_2_1)
{ after(grammarAccess.getResultColumnAccess().getNameAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConflictClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConflictClause__Group__0__Impl
	rule__ConflictClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConflictClauseAccess().getOnKeyword_0()); }

	'on' 

{ after(grammarAccess.getConflictClauseAccess().getOnKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConflictClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConflictClause__Group__1__Impl
	rule__ConflictClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConflictClauseAccess().getConflictKeyword_1()); }

	'conflict' 

{ after(grammarAccess.getConflictClauseAccess().getConflictKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConflictClause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConflictClause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictClause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConflictClauseAccess().getResolutionAssignment_2()); }
(rule__ConflictClause__ResolutionAssignment_2)
{ after(grammarAccess.getConflictClauseAccess().getResolutionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LiteralValue__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralValue__Group_0__0__Impl
	rule__LiteralValue__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralValueAccess().getNumericLiteralAction_0_0()); }
(

)
{ after(grammarAccess.getLiteralValueAccess().getNumericLiteralAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralValue__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralValue__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralValueAccess().getNumberAssignment_0_1()); }
(rule__LiteralValue__NumberAssignment_0_1)
{ after(grammarAccess.getLiteralValueAccess().getNumberAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LiteralValue__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralValue__Group_1__0__Impl
	rule__LiteralValue__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralValueAccess().getStringLiteralAction_1_0()); }
(

)
{ after(grammarAccess.getLiteralValueAccess().getStringLiteralAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralValue__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralValue__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralValueAccess().getLiteralAssignment_1_1()); }
(rule__LiteralValue__LiteralAssignment_1_1)
{ after(grammarAccess.getLiteralValueAccess().getLiteralAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LiteralValue__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralValue__Group_2__0__Impl
	rule__LiteralValue__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralValueAccess().getNullLiteralAction_2_0()); }
(

)
{ after(grammarAccess.getLiteralValueAccess().getNullLiteralAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralValue__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralValue__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralValueAccess().getLiteralAssignment_2_1()); }
(rule__LiteralValue__LiteralAssignment_2_1)
{ after(grammarAccess.getLiteralValueAccess().getLiteralAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LiteralValue__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralValue__Group_3__0__Impl
	rule__LiteralValue__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralValueAccess().getCurrentTimeLiteralAction_3_0()); }
(

)
{ after(grammarAccess.getLiteralValueAccess().getCurrentTimeLiteralAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralValue__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralValue__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralValueAccess().getLiteralAssignment_3_1()); }
(rule__LiteralValue__LiteralAssignment_3_1)
{ after(grammarAccess.getLiteralValueAccess().getLiteralAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LiteralValue__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralValue__Group_4__0__Impl
	rule__LiteralValue__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralValueAccess().getCurrentDateLiteralAction_4_0()); }
(

)
{ after(grammarAccess.getLiteralValueAccess().getCurrentDateLiteralAction_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralValue__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralValue__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralValueAccess().getLiteralAssignment_4_1()); }
(rule__LiteralValue__LiteralAssignment_4_1)
{ after(grammarAccess.getLiteralValueAccess().getLiteralAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LiteralValue__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralValue__Group_5__0__Impl
	rule__LiteralValue__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralValueAccess().getCurrentTimeStampLiteralAction_5_0()); }
(

)
{ after(grammarAccess.getLiteralValueAccess().getCurrentTimeStampLiteralAction_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralValue__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralValue__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralValueAccess().getLiteralAssignment_5_1()); }
(rule__LiteralValue__LiteralAssignment_5_1)
{ after(grammarAccess.getLiteralValueAccess().getLiteralAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SignedNumber__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignedNumber__Group__0__Impl
	rule__SignedNumber__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedNumber__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignedNumberAccess().getHyphenMinusKeyword_0()); }
(
	'-' 
)?
{ after(grammarAccess.getSignedNumberAccess().getHyphenMinusKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignedNumber__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignedNumber__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedNumber__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignedNumberAccess().getNUMBERTerminalRuleCall_1()); }
	RULE_NUMBER
{ after(grammarAccess.getSignedNumberAccess().getNUMBERTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
(rule__QualifiedName__Group_1__0)*
{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Model__PackageNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getPackageNameQualifiedNameParserRuleCall_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getModelAccess().getPackageNameQualifiedNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__DatabaseAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getDatabaseDatabaseBlockParserRuleCall_2_0()); }
	ruleDatabaseBlock{ after(grammarAccess.getModelAccess().getDatabaseDatabaseBlockParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DatabaseBlock__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatabaseBlockAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getDatabaseBlockAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DatabaseBlock__ConfigAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatabaseBlockAccess().getConfigConfigBlockParserRuleCall_3_0()); }
	ruleConfigBlock{ after(grammarAccess.getDatabaseBlockAccess().getConfigConfigBlockParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DatabaseBlock__MigrationsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatabaseBlockAccess().getMigrationsMigrationBlockParserRuleCall_4_0()); }
	ruleMigrationBlock{ after(grammarAccess.getDatabaseBlockAccess().getMigrationsMigrationBlockParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigBlock__StatementsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigBlockAccess().getStatementsConfigurationStatementParserRuleCall_3_0()); }
	ruleConfigurationStatement{ after(grammarAccess.getConfigBlockAccess().getStatementsConfigurationStatementParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigurationStatement__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigurationStatementAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getConfigurationStatementAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigurationStatement__PathAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigurationStatementAccess().getPathSTRINGTerminalRuleCall_3_0()); }
	RULE_STRING{ after(grammarAccess.getConfigurationStatementAccess().getPathSTRINGTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MigrationBlock__StatementsAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMigrationBlockAccess().getStatementsDDLStatementParserRuleCall_3_0_0()); }
	ruleDDLStatement{ after(grammarAccess.getMigrationBlockAccess().getStatementsDDLStatementParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprConcat__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprConcatAccess().getOpVerticalLineVerticalLineKeyword_1_1_0()); }
(
{ before(grammarAccess.getExprConcatAccess().getOpVerticalLineVerticalLineKeyword_1_1_0()); }

	'||' 

{ after(grammarAccess.getExprConcatAccess().getOpVerticalLineVerticalLineKeyword_1_1_0()); }
)

{ after(grammarAccess.getExprConcatAccess().getOpVerticalLineVerticalLineKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprConcat__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprConcatAccess().getRightExprMultParserRuleCall_1_2_0()); }
	ruleExprMult{ after(grammarAccess.getExprConcatAccess().getRightExprMultParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprMult__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprMultAccess().getOpAlternatives_1_1_0()); }
(rule__ExprMult__OpAlternatives_1_1_0)
{ after(grammarAccess.getExprMultAccess().getOpAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprMult__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprMultAccess().getRightExprAddParserRuleCall_1_2_0()); }
	ruleExprAdd{ after(grammarAccess.getExprMultAccess().getRightExprAddParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAdd__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAddAccess().getOpAlternatives_1_1_0()); }
(rule__ExprAdd__OpAlternatives_1_1_0)
{ after(grammarAccess.getExprAddAccess().getOpAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAdd__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAddAccess().getRightExprBitParserRuleCall_1_2_0()); }
	ruleExprBit{ after(grammarAccess.getExprAddAccess().getRightExprBitParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBit__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprBitAccess().getOpAlternatives_1_1_0()); }
(rule__ExprBit__OpAlternatives_1_1_0)
{ after(grammarAccess.getExprBitAccess().getOpAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprBit__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprBitAccess().getRightExprRelateParserRuleCall_1_2_0()); }
	ruleExprRelate{ after(grammarAccess.getExprBitAccess().getRightExprRelateParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprRelate__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprRelateAccess().getOpAlternatives_1_1_0()); }
(rule__ExprRelate__OpAlternatives_1_1_0)
{ after(grammarAccess.getExprRelateAccess().getOpAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprRelate__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprRelateAccess().getRightExprEqualParserRuleCall_1_2_0()); }
	ruleExprEqual{ after(grammarAccess.getExprRelateAccess().getRightExprEqualParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprEqual__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprEqualAccess().getOpAlternatives_1_1_0()); }
(rule__ExprEqual__OpAlternatives_1_1_0)
{ after(grammarAccess.getExprEqualAccess().getOpAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprEqual__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprEqualAccess().getRightExprAndParserRuleCall_1_2_0()); }
	ruleExprAnd{ after(grammarAccess.getExprEqualAccess().getRightExprAndParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAnd__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAndAccess().getOpAndKeyword_1_1_0()); }
(
{ before(grammarAccess.getExprAndAccess().getOpAndKeyword_1_1_0()); }

	'and' 

{ after(grammarAccess.getExprAndAccess().getOpAndKeyword_1_1_0()); }
)

{ after(grammarAccess.getExprAndAccess().getOpAndKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAnd__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAndAccess().getRightExprOrParserRuleCall_1_2_0()); }
	ruleExprOr{ after(grammarAccess.getExprAndAccess().getRightExprOrParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprOr__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprOrAccess().getOpOrKeyword_1_1_0()); }
(
{ before(grammarAccess.getExprOrAccess().getOpOrKeyword_1_1_0()); }

	'or' 

{ after(grammarAccess.getExprOrAccess().getOpOrKeyword_1_1_0()); }
)

{ after(grammarAccess.getExprOrAccess().getOpOrKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprOr__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprOrAccess().getRightNullCheckExpressionParserRuleCall_1_2_0()); }
	ruleNullCheckExpression{ after(grammarAccess.getExprOrAccess().getRightNullCheckExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NullCheckExpression__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNullCheckExpressionAccess().getRightNullExpressionParserRuleCall_1_1_0()); }
	ruleNullExpression{ after(grammarAccess.getNullCheckExpressionAccess().getRightNullExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__NameAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getNameQualifiedNameParserRuleCall_0_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getPrimaryExpressionAccess().getNameQualifiedNameParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__LiteralValueAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLiteralValueLiteralValueParserRuleCall_1_1_0()); }
	ruleLiteralValue{ after(grammarAccess.getPrimaryExpressionAccess().getLiteralValueLiteralValueParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__NotAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getNotNotKeyword_3_1_0()); }
(
{ before(grammarAccess.getPrimaryExpressionAccess().getNotNotKeyword_3_1_0()); }

	'not' 

{ after(grammarAccess.getPrimaryExpressionAccess().getNotNotKeyword_3_1_0()); }
)

{ after(grammarAccess.getPrimaryExpressionAccess().getNotNotKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ExistsAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getExistsExistsKeyword_3_2_0()); }
(
{ before(grammarAccess.getPrimaryExpressionAccess().getExistsExistsKeyword_3_2_0()); }

	'exists' 

{ after(grammarAccess.getPrimaryExpressionAccess().getExistsExistsKeyword_3_2_0()); }
)

{ after(grammarAccess.getPrimaryExpressionAccess().getExistsExistsKeyword_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__SelectAssignment_3_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getSelectSelectStatementParserRuleCall_3_4_0()); }
	ruleSelectStatement{ after(grammarAccess.getPrimaryExpressionAccess().getSelectSelectStatementParserRuleCall_3_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__CaseExpressionAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getCaseExpressionSqlExpressionParserRuleCall_4_2_0()); }
	ruleSqlExpression{ after(grammarAccess.getPrimaryExpressionAccess().getCaseExpressionSqlExpressionParserRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__CasesAssignment_4_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getCasesCaseParserRuleCall_4_3_0()); }
	ruleCase{ after(grammarAccess.getPrimaryExpressionAccess().getCasesCaseParserRuleCall_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ElseExpressionAssignment_4_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getElseExpressionSqlExpressionParserRuleCall_4_4_1_0()); }
	ruleSqlExpression{ after(grammarAccess.getPrimaryExpressionAccess().getElseExpressionSqlExpressionParserRuleCall_4_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__NameAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getNameIDTerminalRuleCall_5_1_0()); }
	RULE_ID{ after(grammarAccess.getPrimaryExpressionAccess().getNameIDTerminalRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__AllAssignment_5_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getAllAsteriskKeyword_5_3_0_0()); }
(
{ before(grammarAccess.getPrimaryExpressionAccess().getAllAsteriskKeyword_5_3_0_0()); }

	'*' 

{ after(grammarAccess.getPrimaryExpressionAccess().getAllAsteriskKeyword_5_3_0_0()); }
)

{ after(grammarAccess.getPrimaryExpressionAccess().getAllAsteriskKeyword_5_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ArgumentsAssignment_5_3_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getArgumentsSqlExpressionParserRuleCall_5_3_1_0_0()); }
	ruleSqlExpression{ after(grammarAccess.getPrimaryExpressionAccess().getArgumentsSqlExpressionParserRuleCall_5_3_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ArugmentsAssignment_5_3_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getArugmentsSqlExpressionParserRuleCall_5_3_1_1_1_0()); }
	ruleSqlExpression{ after(grammarAccess.getPrimaryExpressionAccess().getArugmentsSqlExpressionParserRuleCall_5_3_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ExpressionAssignment_6_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getExpressionSqlExpressionParserRuleCall_6_3_0()); }
	ruleSqlExpression{ after(grammarAccess.getPrimaryExpressionAccess().getExpressionSqlExpressionParserRuleCall_6_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__TypeAssignment_6_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getTypeSqliteDataTypeEnumRuleCall_6_5_0()); }
	ruleSqliteDataType{ after(grammarAccess.getPrimaryExpressionAccess().getTypeSqliteDataTypeEnumRuleCall_6_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Case__WhenExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getWhenExpressionSqlExpressionParserRuleCall_1_0()); }
	ruleSqlExpression{ after(grammarAccess.getCaseAccess().getWhenExpressionSqlExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Case__ThenExpressionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getThenExpressionSqlExpressionParserRuleCall_3_0()); }
	ruleSqlExpression{ after(grammarAccess.getCaseAccess().getThenExpressionSqlExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__NameAssignment_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getNameIDTerminalRuleCall_0_3_0()); }
	RULE_ID{ after(grammarAccess.getDDLStatementAccess().getNameIDTerminalRuleCall_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__ColumnDefsAssignment_0_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getColumnDefsColumnDefParserRuleCall_0_5_0()); }
	ruleColumnDef{ after(grammarAccess.getDDLStatementAccess().getColumnDefsColumnDefParserRuleCall_0_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__ColumnDefsAssignment_0_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getColumnDefsColumnDefParserRuleCall_0_6_1_0()); }
	ruleColumnDef{ after(grammarAccess.getDDLStatementAccess().getColumnDefsColumnDefParserRuleCall_0_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__ConstraintsAssignment_0_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getConstraintsTableConstraintParserRuleCall_0_7_1_0()); }
	ruleTableConstraint{ after(grammarAccess.getDDLStatementAccess().getConstraintsTableConstraintParserRuleCall_0_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__NameAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getNameIDTerminalRuleCall_1_3_0()); }
	RULE_ID{ after(grammarAccess.getDDLStatementAccess().getNameIDTerminalRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__SelectStatementAssignment_1_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getSelectStatementSelectStatementParserRuleCall_1_5_0()); }
	ruleSelectStatement{ after(grammarAccess.getDDLStatementAccess().getSelectStatementSelectStatementParserRuleCall_1_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__NameAssignment_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getNameIDTerminalRuleCall_2_3_0()); }
	RULE_ID{ after(grammarAccess.getDDLStatementAccess().getNameIDTerminalRuleCall_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__WhenAssignment_2_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getWhenAlternatives_2_4_0()); }
(rule__DDLStatement__WhenAlternatives_2_4_0)
{ after(grammarAccess.getDDLStatementAccess().getWhenAlternatives_2_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__EventTypeAssignment_2_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getEventTypeDeleteKeyword_2_5_0_0()); }
(
{ before(grammarAccess.getDDLStatementAccess().getEventTypeDeleteKeyword_2_5_0_0()); }

	'delete' 

{ after(grammarAccess.getDDLStatementAccess().getEventTypeDeleteKeyword_2_5_0_0()); }
)

{ after(grammarAccess.getDDLStatementAccess().getEventTypeDeleteKeyword_2_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__EventTypeAssignment_2_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getEventTypeInsertKeyword_2_5_1_0()); }
(
{ before(grammarAccess.getDDLStatementAccess().getEventTypeInsertKeyword_2_5_1_0()); }

	'insert' 

{ after(grammarAccess.getDDLStatementAccess().getEventTypeInsertKeyword_2_5_1_0()); }
)

{ after(grammarAccess.getDDLStatementAccess().getEventTypeInsertKeyword_2_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__EventTypeAssignment_2_5_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getEventTypeUpdateKeyword_2_5_2_0_0()); }
(
{ before(grammarAccess.getDDLStatementAccess().getEventTypeUpdateKeyword_2_5_2_0_0()); }

	'update' 

{ after(grammarAccess.getDDLStatementAccess().getEventTypeUpdateKeyword_2_5_2_0_0()); }
)

{ after(grammarAccess.getDDLStatementAccess().getEventTypeUpdateKeyword_2_5_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__UpdateColumnNamesAssignment_2_5_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getUpdateColumnNamesIDTerminalRuleCall_2_5_2_1_1_0()); }
	RULE_ID{ after(grammarAccess.getDDLStatementAccess().getUpdateColumnNamesIDTerminalRuleCall_2_5_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__UpdateColumnNamesAssignment_2_5_2_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getUpdateColumnNamesIDTerminalRuleCall_2_5_2_1_2_1_0()); }
	RULE_ID{ after(grammarAccess.getDDLStatementAccess().getUpdateColumnNamesIDTerminalRuleCall_2_5_2_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__TableNameAssignment_2_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getTableNameIDTerminalRuleCall_2_7_0()); }
	RULE_ID{ after(grammarAccess.getDDLStatementAccess().getTableNameIDTerminalRuleCall_2_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__ForEachRowAssignment_2_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getForEachRowForEachRowKeyword_2_8_0()); }
(
{ before(grammarAccess.getDDLStatementAccess().getForEachRowForEachRowKeyword_2_8_0()); }

	'for each row' 

{ after(grammarAccess.getDDLStatementAccess().getForEachRowForEachRowKeyword_2_8_0()); }
)

{ after(grammarAccess.getDDLStatementAccess().getForEachRowForEachRowKeyword_2_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__WhenExpressionAssignment_2_9_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getWhenExpressionSqlExpressionParserRuleCall_2_9_1_0()); }
	ruleSqlExpression{ after(grammarAccess.getDDLStatementAccess().getWhenExpressionSqlExpressionParserRuleCall_2_9_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__StatementsAssignment_2_11_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getStatementsDMLStatementParserRuleCall_2_11_0_0()); }
	ruleDMLStatement{ after(grammarAccess.getDDLStatementAccess().getStatementsDMLStatementParserRuleCall_2_11_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__StatementsAssignment_2_11_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getStatementsDMLStatementParserRuleCall_2_11_2_0_0()); }
	ruleDMLStatement{ after(grammarAccess.getDDLStatementAccess().getStatementsDMLStatementParserRuleCall_2_11_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__NameAssignment_3_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getNameIDTerminalRuleCall_3_3_0()); }
	RULE_ID{ after(grammarAccess.getDDLStatementAccess().getNameIDTerminalRuleCall_3_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__ClauseAssignment_3_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getClauseAlterTableClauseParserRuleCall_3_4_0()); }
	ruleAlterTableClause{ after(grammarAccess.getDDLStatementAccess().getClauseAlterTableClauseParserRuleCall_3_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__IfExistsAssignment_4_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getIfExistsIfExistsKeyword_4_3_0()); }
(
{ before(grammarAccess.getDDLStatementAccess().getIfExistsIfExistsKeyword_4_3_0()); }

	'if exists' 

{ after(grammarAccess.getDDLStatementAccess().getIfExistsIfExistsKeyword_4_3_0()); }
)

{ after(grammarAccess.getDDLStatementAccess().getIfExistsIfExistsKeyword_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__NameAssignment_4_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getNameIDTerminalRuleCall_4_4_0()); }
	RULE_ID{ after(grammarAccess.getDDLStatementAccess().getNameIDTerminalRuleCall_4_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__IfExistsAssignment_5_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getIfExistsIfExistsKeyword_5_3_0()); }
(
{ before(grammarAccess.getDDLStatementAccess().getIfExistsIfExistsKeyword_5_3_0()); }

	'if exists' 

{ after(grammarAccess.getDDLStatementAccess().getIfExistsIfExistsKeyword_5_3_0()); }
)

{ after(grammarAccess.getDDLStatementAccess().getIfExistsIfExistsKeyword_5_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__NameAssignment_5_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getNameIDTerminalRuleCall_5_4_0()); }
	RULE_ID{ after(grammarAccess.getDDLStatementAccess().getNameIDTerminalRuleCall_5_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__IfExistsAssignment_6_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getIfExistsIfExistsKeyword_6_3_0()); }
(
{ before(grammarAccess.getDDLStatementAccess().getIfExistsIfExistsKeyword_6_3_0()); }

	'if exists' 

{ after(grammarAccess.getDDLStatementAccess().getIfExistsIfExistsKeyword_6_3_0()); }
)

{ after(grammarAccess.getDDLStatementAccess().getIfExistsIfExistsKeyword_6_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DDLStatement__NameAssignment_6_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDDLStatementAccess().getNameIDTerminalRuleCall_6_4_0()); }
	RULE_ID{ after(grammarAccess.getDDLStatementAccess().getNameIDTerminalRuleCall_6_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteStatement__TableNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeleteStatementAccess().getTableNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getDeleteStatementAccess().getTableNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteStatement__ExpressionAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeleteStatementAccess().getExpressionSqlExpressionParserRuleCall_3_1_0()); }
	ruleSqlExpression{ after(grammarAccess.getDeleteStatementAccess().getExpressionSqlExpressionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__ConflictResolutionAssignment_0_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertStatementAccess().getConflictResolutionConflictResolutionEnumRuleCall_0_0_1_1_0()); }
	ruleConflictResolution{ after(grammarAccess.getInsertStatementAccess().getConflictResolutionConflictResolutionEnumRuleCall_0_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__TableNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertStatementAccess().getTableNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getInsertStatementAccess().getTableNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__ColumnNamesAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertStatementAccess().getColumnNamesIDTerminalRuleCall_3_1_0()); }
	RULE_ID{ after(grammarAccess.getInsertStatementAccess().getColumnNamesIDTerminalRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__ColumnNamesAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertStatementAccess().getColumnNamesIDTerminalRuleCall_3_2_1_0()); }
	RULE_ID{ after(grammarAccess.getInsertStatementAccess().getColumnNamesIDTerminalRuleCall_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__ExpressionsAssignment_4_0_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertStatementAccess().getExpressionsSqlExpressionParserRuleCall_4_0_0_2_0()); }
	ruleSqlExpression{ after(grammarAccess.getInsertStatementAccess().getExpressionsSqlExpressionParserRuleCall_4_0_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__ExpressionsAssignment_4_0_0_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertStatementAccess().getExpressionsSqlExpressionParserRuleCall_4_0_0_3_1_0()); }
	ruleSqlExpression{ after(grammarAccess.getInsertStatementAccess().getExpressionsSqlExpressionParserRuleCall_4_0_0_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__SelectStatementAssignment_4_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertStatementAccess().getSelectStatementSelectStatementParserRuleCall_4_0_1_0()); }
	ruleSelectStatement{ after(grammarAccess.getInsertStatementAccess().getSelectStatementSelectStatementParserRuleCall_4_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__ConflictResolutionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdateStatementAccess().getConflictResolutionConflictResolutionEnumRuleCall_1_1_0()); }
	ruleConflictResolution{ after(grammarAccess.getUpdateStatementAccess().getConflictResolutionConflictResolutionEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__TableNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdateStatementAccess().getTableNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getUpdateStatementAccess().getTableNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__UpdateColumnExpressionsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdateStatementAccess().getUpdateColumnExpressionsUpdateColumnExpressionParserRuleCall_4_0()); }
	ruleUpdateColumnExpression{ after(grammarAccess.getUpdateStatementAccess().getUpdateColumnExpressionsUpdateColumnExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__UpdateColumnExpressionsAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdateStatementAccess().getUpdateColumnExpressionsUpdateColumnExpressionParserRuleCall_5_1_0()); }
	ruleUpdateColumnExpression{ after(grammarAccess.getUpdateStatementAccess().getUpdateColumnExpressionsUpdateColumnExpressionParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__WhereExpressionAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdateStatementAccess().getWhereExpressionSqlExpressionParserRuleCall_6_1_0()); }
	ruleSqlExpression{ after(grammarAccess.getUpdateStatementAccess().getWhereExpressionSqlExpressionParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateColumnExpression__ColumnNameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdateColumnExpressionAccess().getColumnNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getUpdateColumnExpressionAccess().getColumnNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateColumnExpression__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdateColumnExpressionAccess().getExpressionSqlExpressionParserRuleCall_2_0()); }
	ruleSqlExpression{ after(grammarAccess.getUpdateColumnExpressionAccess().getExpressionSqlExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__CoreAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectStatementAccess().getCoreSelectCoreParserRuleCall_0_0()); }
	ruleSelectCore{ after(grammarAccess.getSelectStatementAccess().getCoreSelectCoreParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__OrderingTermsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectStatementAccess().getOrderingTermsOrderingTermParserRuleCall_1_1_0()); }
	ruleOrderingTerm{ after(grammarAccess.getSelectStatementAccess().getOrderingTermsOrderingTermParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__OrderingTermsAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectStatementAccess().getOrderingTermsOrderingTermParserRuleCall_1_2_1_0()); }
	ruleOrderingTerm{ after(grammarAccess.getSelectStatementAccess().getOrderingTermsOrderingTermParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCore__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreAccess().getOpCompoundOperatorEnumRuleCall_1_1_0()); }
	ruleCompoundOperator{ after(grammarAccess.getSelectCoreAccess().getOpCompoundOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCore__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreAccess().getRightSelectCoreOperandParserRuleCall_1_2_0()); }
	ruleSelectCoreOperand{ after(grammarAccess.getSelectCoreAccess().getRightSelectCoreOperandParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCoreOperand__DistinctAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreOperandAccess().getDistinctDistinctKeyword_1_0_0()); }
(
{ before(grammarAccess.getSelectCoreOperandAccess().getDistinctDistinctKeyword_1_0_0()); }

	'distinct' 

{ after(grammarAccess.getSelectCoreOperandAccess().getDistinctDistinctKeyword_1_0_0()); }
)

{ after(grammarAccess.getSelectCoreOperandAccess().getDistinctDistinctKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCoreOperand__AllAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreOperandAccess().getAllAllKeyword_1_1_0()); }
(
{ before(grammarAccess.getSelectCoreOperandAccess().getAllAllKeyword_1_1_0()); }

	'all' 

{ after(grammarAccess.getSelectCoreOperandAccess().getAllAllKeyword_1_1_0()); }
)

{ after(grammarAccess.getSelectCoreOperandAccess().getAllAllKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCoreOperand__ResultColumnsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreOperandAccess().getResultColumnsResultColumnParserRuleCall_2_0()); }
	ruleResultColumn{ after(grammarAccess.getSelectCoreOperandAccess().getResultColumnsResultColumnParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCoreOperand__ResultColumnsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreOperandAccess().getResultColumnsResultColumnParserRuleCall_3_1_0()); }
	ruleResultColumn{ after(grammarAccess.getSelectCoreOperandAccess().getResultColumnsResultColumnParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCoreOperand__SourceAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreOperandAccess().getSourceJoinSourceParserRuleCall_4_1_0()); }
	ruleJoinSource{ after(grammarAccess.getSelectCoreOperandAccess().getSourceJoinSourceParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCoreOperand__WhereExpressionAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreOperandAccess().getWhereExpressionSqlExpressionParserRuleCall_5_1_0()); }
	ruleSqlExpression{ after(grammarAccess.getSelectCoreOperandAccess().getWhereExpressionSqlExpressionParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCoreOperand__GroupByExpressionsAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreOperandAccess().getGroupByExpressionsSqlExpressionParserRuleCall_6_1_0()); }
	ruleSqlExpression{ after(grammarAccess.getSelectCoreOperandAccess().getGroupByExpressionsSqlExpressionParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCoreOperand__GroupByExpressionsAssignment_6_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreOperandAccess().getGroupByExpressionsSqlExpressionParserRuleCall_6_2_1_0()); }
	ruleSqlExpression{ after(grammarAccess.getSelectCoreOperandAccess().getGroupByExpressionsSqlExpressionParserRuleCall_6_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCoreOperand__HavingExpressionAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreOperandAccess().getHavingExpressionSqlExpressionParserRuleCall_7_1_0()); }
	ruleSqlExpression{ after(grammarAccess.getSelectCoreOperandAccess().getHavingExpressionSqlExpressionParserRuleCall_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AlterTableClause__NameAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlterTableClauseAccess().getNameIDTerminalRuleCall_0_2_0()); }
	RULE_ID{ after(grammarAccess.getAlterTableClauseAccess().getNameIDTerminalRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AlterTableClause__ColumnDefAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlterTableClauseAccess().getColumnDefColumnDefParserRuleCall_1_2_0()); }
	ruleColumnDef{ after(grammarAccess.getAlterTableClauseAccess().getColumnDefColumnDefParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnDef__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColumnDefAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getColumnDefAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnDef__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColumnDefAccess().getTypeColumnTypeEnumRuleCall_1_0()); }
	ruleColumnType{ after(grammarAccess.getColumnDefAccess().getTypeColumnTypeEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnDef__ConstraintsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColumnDefAccess().getConstraintsColumnConstraintParserRuleCall_2_0()); }
	ruleColumnConstraint{ after(grammarAccess.getColumnDefAccess().getConstraintsColumnConstraintParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnConstraint__AscAssignment_0_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColumnConstraintAccess().getAscAscKeyword_0_2_0_0()); }
(
{ before(grammarAccess.getColumnConstraintAccess().getAscAscKeyword_0_2_0_0()); }

	'asc' 

{ after(grammarAccess.getColumnConstraintAccess().getAscAscKeyword_0_2_0_0()); }
)

{ after(grammarAccess.getColumnConstraintAccess().getAscAscKeyword_0_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnConstraint__DescAssignment_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColumnConstraintAccess().getDescDescKeyword_0_2_1_0()); }
(
{ before(grammarAccess.getColumnConstraintAccess().getDescDescKeyword_0_2_1_0()); }

	'desc' 

{ after(grammarAccess.getColumnConstraintAccess().getDescDescKeyword_0_2_1_0()); }
)

{ after(grammarAccess.getColumnConstraintAccess().getDescDescKeyword_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnConstraint__AutoincrementAssignment_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColumnConstraintAccess().getAutoincrementAutoincrementKeyword_0_3_0()); }
(
{ before(grammarAccess.getColumnConstraintAccess().getAutoincrementAutoincrementKeyword_0_3_0()); }

	'autoincrement' 

{ after(grammarAccess.getColumnConstraintAccess().getAutoincrementAutoincrementKeyword_0_3_0()); }
)

{ after(grammarAccess.getColumnConstraintAccess().getAutoincrementAutoincrementKeyword_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnConstraint__ConflictClauseAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColumnConstraintAccess().getConflictClauseConflictClauseParserRuleCall_1_2_0()); }
	ruleConflictClause{ after(grammarAccess.getColumnConstraintAccess().getConflictClauseConflictClauseParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnConstraint__DefaultValueAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColumnConstraintAccess().getDefaultValueDefaultValueParserRuleCall_2_2_0()); }
	ruleDefaultValue{ after(grammarAccess.getColumnConstraintAccess().getDefaultValueDefaultValueParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultValue__LiteralAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultValueAccess().getLiteralLiteralValueParserRuleCall_0_1_0()); }
	ruleLiteralValue{ after(grammarAccess.getDefaultValueAccess().getLiteralLiteralValueParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultValue__ExpressionAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultValueAccess().getExpressionSqlExpressionParserRuleCall_1_2_0()); }
	ruleSqlExpression{ after(grammarAccess.getDefaultValueAccess().getExpressionSqlExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__NameAssignment_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getNameIDTerminalRuleCall_0_1_1_0()); }
	RULE_ID{ after(grammarAccess.getTableConstraintAccess().getNameIDTerminalRuleCall_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__ColumnsAssignment_0_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getColumnsIndexedColumnParserRuleCall_0_4_0()); }
	ruleIndexedColumn{ after(grammarAccess.getTableConstraintAccess().getColumnsIndexedColumnParserRuleCall_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__ColumnsAssignment_0_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getColumnsIndexedColumnParserRuleCall_0_5_1_0()); }
	ruleIndexedColumn{ after(grammarAccess.getTableConstraintAccess().getColumnsIndexedColumnParserRuleCall_0_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__ConflictClauseAssignment_0_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getConflictClauseConflictClauseParserRuleCall_0_7_0()); }
	ruleConflictClause{ after(grammarAccess.getTableConstraintAccess().getConflictClauseConflictClauseParserRuleCall_0_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__NameAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getNameIDTerminalRuleCall_1_1_1_0()); }
	RULE_ID{ after(grammarAccess.getTableConstraintAccess().getNameIDTerminalRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__ColumnsAssignment_1_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getColumnsIndexedColumnParserRuleCall_1_5_0()); }
	ruleIndexedColumn{ after(grammarAccess.getTableConstraintAccess().getColumnsIndexedColumnParserRuleCall_1_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__ColumnsAssignment_1_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getColumnsIndexedColumnParserRuleCall_1_6_1_0()); }
	ruleIndexedColumn{ after(grammarAccess.getTableConstraintAccess().getColumnsIndexedColumnParserRuleCall_1_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__ConflictClauseAssignment_1_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getConflictClauseConflictClauseParserRuleCall_1_8_0()); }
	ruleConflictClause{ after(grammarAccess.getTableConstraintAccess().getConflictClauseConflictClauseParserRuleCall_1_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__NameAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getNameIDTerminalRuleCall_2_1_1_0()); }
	RULE_ID{ after(grammarAccess.getTableConstraintAccess().getNameIDTerminalRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__ExpressionAssignment_2_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getExpressionSqlExpressionParserRuleCall_2_4_0()); }
	ruleSqlExpression{ after(grammarAccess.getTableConstraintAccess().getExpressionSqlExpressionParserRuleCall_2_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IndexedColumn__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexedColumnAccess().getNameColumnDefCrossReference_0_0()); }
(
{ before(grammarAccess.getIndexedColumnAccess().getNameColumnDefIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getIndexedColumnAccess().getNameColumnDefIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getIndexedColumnAccess().getNameColumnDefCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IndexedColumn__AscAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexedColumnAccess().getAscAscKeyword_1_0_0()); }
(
{ before(grammarAccess.getIndexedColumnAccess().getAscAscKeyword_1_0_0()); }

	'asc' 

{ after(grammarAccess.getIndexedColumnAccess().getAscAscKeyword_1_0_0()); }
)

{ after(grammarAccess.getIndexedColumnAccess().getAscAscKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IndexedColumn__DescAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexedColumnAccess().getDescDescKeyword_1_1_0()); }
(
{ before(grammarAccess.getIndexedColumnAccess().getDescDescKeyword_1_1_0()); }

	'desc' 

{ after(grammarAccess.getIndexedColumnAccess().getDescDescKeyword_1_1_0()); }
)

{ after(grammarAccess.getIndexedColumnAccess().getDescDescKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrderingTerm__ExpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrderingTermAccess().getExpressionSqlExpressionParserRuleCall_0_0()); }
	ruleSqlExpression{ after(grammarAccess.getOrderingTermAccess().getExpressionSqlExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrderingTerm__AscAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrderingTermAccess().getAscAscKeyword_1_0_0()); }
(
{ before(grammarAccess.getOrderingTermAccess().getAscAscKeyword_1_0_0()); }

	'asc' 

{ after(grammarAccess.getOrderingTermAccess().getAscAscKeyword_1_0_0()); }
)

{ after(grammarAccess.getOrderingTermAccess().getAscAscKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrderingTerm__DescAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrderingTermAccess().getDescDescKeyword_1_1_0()); }
(
{ before(grammarAccess.getOrderingTermAccess().getDescDescKeyword_1_1_0()); }

	'desc' 

{ after(grammarAccess.getOrderingTermAccess().getDescDescKeyword_1_1_0()); }
)

{ after(grammarAccess.getOrderingTermAccess().getDescDescKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JoinSource__SourceAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinSourceAccess().getSourceSingleSourceParserRuleCall_0_0()); }
	ruleSingleSource{ after(grammarAccess.getJoinSourceAccess().getSourceSingleSourceParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JoinSource__JoinStatementsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinSourceAccess().getJoinStatementsJoinStatementParserRuleCall_1_0()); }
	ruleJoinStatement{ after(grammarAccess.getJoinSourceAccess().getJoinStatementsJoinStatementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SingleSource__TableAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleSourceAccess().getTableIDTerminalRuleCall_0_1_0()); }
	RULE_ID{ after(grammarAccess.getSingleSourceAccess().getTableIDTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SingleSource__NameAssignment_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleSourceAccess().getNameIDTerminalRuleCall_0_2_1_0()); }
	RULE_ID{ after(grammarAccess.getSingleSourceAccess().getNameIDTerminalRuleCall_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SingleSource__SelectStatementAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleSourceAccess().getSelectStatementSelectStatementParserRuleCall_1_2_0()); }
	ruleSelectStatement{ after(grammarAccess.getSingleSourceAccess().getSelectStatementSelectStatementParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SingleSource__NameAssignment_1_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleSourceAccess().getNameIDTerminalRuleCall_1_4_1_0()); }
	RULE_ID{ after(grammarAccess.getSingleSourceAccess().getNameIDTerminalRuleCall_1_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SingleSource__JoinSourceAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleSourceAccess().getJoinSourceJoinSourceParserRuleCall_2_2_0()); }
	ruleJoinSource{ after(grammarAccess.getSingleSourceAccess().getJoinSourceJoinSourceParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStatement__NaturalAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinStatementAccess().getNaturalNaturalKeyword_1_0()); }
(
{ before(grammarAccess.getJoinStatementAccess().getNaturalNaturalKeyword_1_0()); }

	'natural' 

{ after(grammarAccess.getJoinStatementAccess().getNaturalNaturalKeyword_1_0()); }
)

{ after(grammarAccess.getJoinStatementAccess().getNaturalNaturalKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStatement__LeftAssignment_2_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinStatementAccess().getLeftLeftKeyword_2_0_0_0()); }
(
{ before(grammarAccess.getJoinStatementAccess().getLeftLeftKeyword_2_0_0_0()); }

	'left' 

{ after(grammarAccess.getJoinStatementAccess().getLeftLeftKeyword_2_0_0_0()); }
)

{ after(grammarAccess.getJoinStatementAccess().getLeftLeftKeyword_2_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStatement__OuterAssignment_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinStatementAccess().getOuterOuterKeyword_2_0_1_0()); }
(
{ before(grammarAccess.getJoinStatementAccess().getOuterOuterKeyword_2_0_1_0()); }

	'outer' 

{ after(grammarAccess.getJoinStatementAccess().getOuterOuterKeyword_2_0_1_0()); }
)

{ after(grammarAccess.getJoinStatementAccess().getOuterOuterKeyword_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStatement__InnerAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinStatementAccess().getInnerInnerKeyword_2_1_0()); }
(
{ before(grammarAccess.getJoinStatementAccess().getInnerInnerKeyword_2_1_0()); }

	'inner' 

{ after(grammarAccess.getJoinStatementAccess().getInnerInnerKeyword_2_1_0()); }
)

{ after(grammarAccess.getJoinStatementAccess().getInnerInnerKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStatement__CrossAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinStatementAccess().getCrossCrossKeyword_2_2_0()); }
(
{ before(grammarAccess.getJoinStatementAccess().getCrossCrossKeyword_2_2_0()); }

	'cross' 

{ after(grammarAccess.getJoinStatementAccess().getCrossCrossKeyword_2_2_0()); }
)

{ after(grammarAccess.getJoinStatementAccess().getCrossCrossKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStatement__SingleSourceAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinStatementAccess().getSingleSourceSingleSourceParserRuleCall_4_0()); }
	ruleSingleSource{ after(grammarAccess.getJoinStatementAccess().getSingleSourceSingleSourceParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStatement__ExpressionAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinStatementAccess().getExpressionSqlExpressionParserRuleCall_6_0()); }
	ruleSqlExpression{ after(grammarAccess.getJoinStatementAccess().getExpressionSqlExpressionParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ResultColumn__SourceAssignment_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResultColumnAccess().getSourceIDTerminalRuleCall_0_1_0_0()); }
	RULE_ID{ after(grammarAccess.getResultColumnAccess().getSourceIDTerminalRuleCall_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ResultColumn__ExpressionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResultColumnAccess().getExpressionSqlExpressionParserRuleCall_1_1_0()); }
	ruleSqlExpression{ after(grammarAccess.getResultColumnAccess().getExpressionSqlExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ResultColumn__NameAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResultColumnAccess().getNameIDTerminalRuleCall_1_2_1_0()); }
	RULE_ID{ after(grammarAccess.getResultColumnAccess().getNameIDTerminalRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictClause__ResolutionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConflictClauseAccess().getResolutionConflictResolutionEnumRuleCall_2_0()); }
	ruleConflictResolution{ after(grammarAccess.getConflictClauseAccess().getResolutionConflictResolutionEnumRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__NumberAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralValueAccess().getNumberSignedNumberParserRuleCall_0_1_0()); }
	ruleSignedNumber{ after(grammarAccess.getLiteralValueAccess().getNumberSignedNumberParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__LiteralAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralValueAccess().getLiteralSTRINGTerminalRuleCall_1_1_0()); }
	RULE_STRING{ after(grammarAccess.getLiteralValueAccess().getLiteralSTRINGTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__LiteralAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralValueAccess().getLiteralNullKeyword_2_1_0()); }
(
{ before(grammarAccess.getLiteralValueAccess().getLiteralNullKeyword_2_1_0()); }

	'null' 

{ after(grammarAccess.getLiteralValueAccess().getLiteralNullKeyword_2_1_0()); }
)

{ after(grammarAccess.getLiteralValueAccess().getLiteralNullKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__LiteralAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralValueAccess().getLiteralCurrent_timeKeyword_3_1_0()); }
(
{ before(grammarAccess.getLiteralValueAccess().getLiteralCurrent_timeKeyword_3_1_0()); }

	'current_time' 

{ after(grammarAccess.getLiteralValueAccess().getLiteralCurrent_timeKeyword_3_1_0()); }
)

{ after(grammarAccess.getLiteralValueAccess().getLiteralCurrent_timeKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__LiteralAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralValueAccess().getLiteralCurrent_dateKeyword_4_1_0()); }
(
{ before(grammarAccess.getLiteralValueAccess().getLiteralCurrent_dateKeyword_4_1_0()); }

	'current_date' 

{ after(grammarAccess.getLiteralValueAccess().getLiteralCurrent_dateKeyword_4_1_0()); }
)

{ after(grammarAccess.getLiteralValueAccess().getLiteralCurrent_dateKeyword_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__LiteralAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralValueAccess().getLiteralCurrent_time_stampKeyword_5_1_0()); }
(
{ before(grammarAccess.getLiteralValueAccess().getLiteralCurrent_time_stampKeyword_5_1_0()); }

	'current_time_stamp' 

{ after(grammarAccess.getLiteralValueAccess().getLiteralCurrent_time_stampKeyword_5_1_0()); }
)

{ after(grammarAccess.getLiteralValueAccess().getLiteralCurrent_time_stampKeyword_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_NUMBER : ('0'..'9')* ('.' ('0'..'9')+)?;

RULE_INT : '$$$don\'t use this anymore$$$';

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


