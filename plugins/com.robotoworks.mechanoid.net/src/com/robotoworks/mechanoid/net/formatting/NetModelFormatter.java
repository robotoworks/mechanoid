/*
 * generated by Xtext
 */
package com.robotoworks.mechanoid.net.formatting;

import org.eclipse.xtext.formatting.impl.AbstractDeclarativeFormatter;
import org.eclipse.xtext.formatting.impl.FormattingConfig;

import com.robotoworks.mechanoid.net.services.NetModelGrammarAccess;

/**
 * This class contains custom formatting description.
 * 
 * see : http://www.eclipse.org/Xtext/documentation/latest/xtext.html#formatting
 * on how and when to use it 
 * 
 * Also see {@link org.eclipse.xtext.xtext.XtextFormattingTokenSerializer} as an example
 */
public class NetModelFormatter extends AbstractDeclarativeFormatter {
	
	@Override
	protected void configureFormatting(FormattingConfig c) {
	    NetModelGrammarAccess g = (NetModelGrammarAccess) getGrammarAccess();
	    
        // It's usually a good idea to activate the following three statements.
        // They will add and preserve newlines around comments
		c.setLinewrap(0, 1, 2).before(g.getSL_COMMENTRule());
		c.setLinewrap(0, 1, 2).before(g.getML_COMMENTRule());
		c.setLinewrap(0, 1, 1).after(g.getML_COMMENTRule());
		
		c.setLinewrap(2).after(g.getModelAccess().getPackageNameAssignment_1());
		c.setLinewrap().after(g.getClientAccess().getLeftCurlyBracketKeyword_3());
	}
}
