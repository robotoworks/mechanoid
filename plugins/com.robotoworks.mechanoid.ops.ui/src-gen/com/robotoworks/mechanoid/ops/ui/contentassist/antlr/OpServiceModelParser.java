/*
* generated by Xtext
*/
package com.robotoworks.mechanoid.ops.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import com.robotoworks.mechanoid.ops.services.OpServiceModelGrammarAccess;

public class OpServiceModelParser extends AbstractContentAssistParser {
	
	@Inject
	private OpServiceModelGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected com.robotoworks.mechanoid.ops.ui.contentassist.antlr.internal.InternalOpServiceModelParser createParser() {
		com.robotoworks.mechanoid.ops.ui.contentassist.antlr.internal.InternalOpServiceModelParser result = new com.robotoworks.mechanoid.ops.ui.contentassist.antlr.internal.InternalOpServiceModelParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getUniqueClauseAccess().getAlternatives(), "rule__UniqueClause__Alternatives");
					put(grammarAccess.getOpArgTypeAccess().getAlternatives(), "rule__OpArgType__Alternatives");
					put(grammarAccess.getModelAccess().getGroup(), "rule__Model__Group__0");
					put(grammarAccess.getServiceBlockAccess().getGroup(), "rule__ServiceBlock__Group__0");
					put(grammarAccess.getOperationAccess().getGroup(), "rule__Operation__Group__0");
					put(grammarAccess.getOperationAccess().getGroup_3(), "rule__Operation__Group_3__0");
					put(grammarAccess.getOperationAccess().getGroup_3_1(), "rule__Operation__Group_3_1__0");
					put(grammarAccess.getOperationArgAccess().getGroup(), "rule__OperationArg__Group__0");
					put(grammarAccess.getUniqueClauseAccess().getGroup_0(), "rule__UniqueClause__Group_0__0");
					put(grammarAccess.getUniqueClauseAccess().getGroup_1(), "rule__UniqueClause__Group_1__0");
					put(grammarAccess.getUniqueClauseAccess().getGroup_1_4(), "rule__UniqueClause__Group_1_4__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup_1(), "rule__QualifiedName__Group_1__0");
					put(grammarAccess.getModelAccess().getPackageNameAssignment_1(), "rule__Model__PackageNameAssignment_1");
					put(grammarAccess.getModelAccess().getServiceAssignment_2(), "rule__Model__ServiceAssignment_2");
					put(grammarAccess.getServiceBlockAccess().getNameAssignment_1(), "rule__ServiceBlock__NameAssignment_1");
					put(grammarAccess.getServiceBlockAccess().getOpsAssignment_3(), "rule__ServiceBlock__OpsAssignment_3");
					put(grammarAccess.getOperationAccess().getNameAssignment_1(), "rule__Operation__NameAssignment_1");
					put(grammarAccess.getOperationAccess().getArgsAssignment_3_0(), "rule__Operation__ArgsAssignment_3_0");
					put(grammarAccess.getOperationAccess().getArgsAssignment_3_1_1(), "rule__Operation__ArgsAssignment_3_1_1");
					put(grammarAccess.getOperationAccess().getUniqueClauseAssignment_5(), "rule__Operation__UniqueClauseAssignment_5");
					put(grammarAccess.getOperationArgAccess().getTypeAssignment_0(), "rule__OperationArg__TypeAssignment_0");
					put(grammarAccess.getOperationArgAccess().getNameAssignment_1(), "rule__OperationArg__NameAssignment_1");
					put(grammarAccess.getUniqueClauseAccess().getArgsAssignment_1_3(), "rule__UniqueClause__ArgsAssignment_1_3");
					put(grammarAccess.getUniqueClauseAccess().getArgsAssignment_1_4_1(), "rule__UniqueClause__ArgsAssignment_1_4_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			com.robotoworks.mechanoid.ops.ui.contentassist.antlr.internal.InternalOpServiceModelParser typedParser = (com.robotoworks.mechanoid.ops.ui.contentassist.antlr.internal.InternalOpServiceModelParser) parser;
			typedParser.entryRuleModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public OpServiceModelGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(OpServiceModelGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
