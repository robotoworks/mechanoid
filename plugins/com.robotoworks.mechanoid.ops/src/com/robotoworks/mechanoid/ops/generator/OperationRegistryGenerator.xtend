package com.robotoworks.mechanoid.ops.generator

import com.robotoworks.mechanoid.ops.opServiceModel.Model

import static extension com.robotoworks.mechanoid.text.Strings.*
import static extension com.robotoworks.mechanoid.ops.generator.Extensions.*;

class OperationRegistryGenerator {
		def CharSequence generate(Model model) '''		
			«var svc = model.service»
			/*
			 * Generated by Robotoworks Mechanoid
			 */
			package «model.packageName»;

			import java.util.HashMap;
			
			import com.robotoworks.mechanoid.ops.OperationConfigurationRegistry;
			import com.robotoworks.mechanoid.ops.OperationConfiguration;
			
			public abstract class Abstract«svc.name.formatServiceName»OperationConfigurationRegistry extends OperationConfigurationRegistry {
				
				private HashMap<String, OperationConfiguration> mOperationConfigurations;
				
				public Abstract«svc.name.formatServiceName»OperationConfigurationRegistry() {
					
					mOperationConfigurations = new HashMap<String, OperationConfiguration>();
					
					registerOperationConfigurations();
				}
				
				protected void registerOperationConfigurations(){
					«FOR op : svc.ops»
					registerOperationConfiguration(«op.name.pascalize»Operation.ACTION_«op.name.underscore.toUpperCase», new «op.name.pascalize»Operation.Configuration());
					«ENDFOR»
				}
				
				protected void registerOperationConfiguration(String action, OperationConfiguration config) {
					mOperationConfigurations.put(action, config);
				}
			
				@Override
				public OperationConfiguration getOperationConfiguration(String action) {
					return mOperationConfigurations.get(action);
				}
			}
			'''
			
		def CharSequence generateStub(Model model) '''
			«var svc = model.service»
			/*
			 * Generated by Robotoworks Mechanoid
			 */
			package «model.packageName»;
			
			public class «svc.name.formatServiceName»OperationConfigurationRegistry extends Abstract«svc.name.formatServiceName»OperationConfigurationRegistry {
				
			}
			
		'''
}