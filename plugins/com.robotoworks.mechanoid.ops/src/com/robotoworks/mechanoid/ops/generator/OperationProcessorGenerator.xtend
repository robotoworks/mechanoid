package com.robotoworks.mechanoid.ops.generator


import static extension com.robotoworks.mechanoid.text.Strings.*
import static extension com.robotoworks.mechanoid.ops.generator.Extensions.*
import com.robotoworks.mechanoid.ops.opServiceModel.Model

class OperationProcessorGenerator {
		def CharSequence generate(Model model) '''
			«var svc = model.service»
			/*
			 * Generated by Robotoworks Mechanoid
			 */
			package «model.packageName»;
			
			import com.robotoworks.mechanoid.ops.Operation;
			import com.robotoworks.mechanoid.ops.OperationService;
			import com.robotoworks.mechanoid.ops.OperationProcessor;			
			
			public abstract class Abstract«svc.name.pascalize»Processor extends OperationProcessor {

				@Override
				protected Operation createOperation(String action) {
					return «svc.name.formatServiceName».CONFIG
						.getOperationConfigurationRegistry()
						.getOperationConfiguration(action)
						.createOperation();
				}
				
				public Abstract«svc.name.pascalize»Processor(OperationService service, boolean enableLogging) {
					super(service, enableLogging);
				}
			}
			'''
			
		def CharSequence generateStub(Model model) '''
			«var svc = model.service»
			/*
			 * Generated by Robotoworks Mechanoid
			 */
			package «model.packageName»;
			
			import com.robotoworks.mechanoid.ops.OperationService;
			
			public class «svc.name.pascalize»Processor extends Abstract«svc.name.pascalize»Processor {
				public «svc.name.pascalize»Processor(OperationService service) {
					super(service, false);
				}
			}
		'''
}