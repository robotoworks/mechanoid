/*
* generated by Xtext
*/
grammar InternalSqliteModel;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package com.robotoworks.mechanoid.sqlite.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package com.robotoworks.mechanoid.sqlite.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.robotoworks.mechanoid.sqlite.services.SqliteModelGrammarAccess;

}

@parser::members {

 	private SqliteModelGrammarAccess grammarAccess;
 	
    public InternalSqliteModelParser(TokenStream input, SqliteModelGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected SqliteModelGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='package' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getModelAccess().getPackageKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getPackageNameQualifiedNameParserRuleCall_1_0()); 
	    }
		lv_packageName_1_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		set(
       			$current, 
       			"packageName",
        		lv_packageName_1_0, 
        		"QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getDatabaseDatabaseBlockParserRuleCall_2_0()); 
	    }
		lv_database_2_0=ruleDatabaseBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		set(
       			$current, 
       			"database",
        		lv_database_2_0, 
        		"DatabaseBlock");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleDatabaseBlock
entryRuleDatabaseBlock returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDatabaseBlockRule()); }
	 iv_ruleDatabaseBlock=ruleDatabaseBlock 
	 { $current=$iv_ruleDatabaseBlock.current; } 
	 EOF 
;

// Rule DatabaseBlock
ruleDatabaseBlock returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='database' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDatabaseBlockAccess().getDatabaseKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getDatabaseBlockAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDatabaseBlockRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDatabaseBlockAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDatabaseBlockAccess().getConfigConfigBlockParserRuleCall_3_0()); 
	    }
		lv_config_3_0=ruleConfigBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDatabaseBlockRule());
	        }
       		set(
       			$current, 
       			"config",
        		lv_config_3_0, 
        		"ConfigBlock");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getDatabaseBlockAccess().getMigrationsMigrationBlockParserRuleCall_4_0()); 
	    }
		lv_migrations_4_0=ruleMigrationBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDatabaseBlockRule());
	        }
       		add(
       			$current, 
       			"migrations",
        		lv_migrations_4_0, 
        		"MigrationBlock");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDatabaseBlockAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleConfigBlock
entryRuleConfigBlock returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConfigBlockRule()); }
	 iv_ruleConfigBlock=ruleConfigBlock 
	 { $current=$iv_ruleConfigBlock.current; } 
	 EOF 
;

// Rule ConfigBlock
ruleConfigBlock returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getConfigBlockAccess().getConfigBlockAction_0(),
            $current);
    }
)	otherlv_1='config' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getConfigBlockAccess().getConfigKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getConfigBlockAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConfigBlockAccess().getStatementsConfigurationStatementParserRuleCall_3_0()); 
	    }
		lv_statements_3_0=ruleConfigurationStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConfigBlockRule());
	        }
       		add(
       			$current, 
       			"statements",
        		lv_statements_3_0, 
        		"ConfigurationStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getConfigBlockAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleConfigurationStatement
entryRuleConfigurationStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConfigurationStatementRule()); }
	 iv_ruleConfigurationStatement=ruleConfigurationStatement 
	 { $current=$iv_ruleConfigurationStatement.current; } 
	 EOF 
;

// Rule ConfigurationStatement
ruleConfigurationStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getConfigurationStatementAccess().getActionStatementAction_0(),
            $current);
    }
)	otherlv_1='action' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getConfigurationStatementAccess().getActionKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getConfigurationStatementAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConfigurationStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)(
(
		lv_path_3_0=RULE_STRING
		{
			newLeafNode(lv_path_3_0, grammarAccess.getConfigurationStatementAccess().getPathSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConfigurationStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"path",
        		lv_path_3_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleMigrationBlock
entryRuleMigrationBlock returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMigrationBlockRule()); }
	 iv_ruleMigrationBlock=ruleMigrationBlock 
	 { $current=$iv_ruleMigrationBlock.current; } 
	 EOF 
;

// Rule MigrationBlock
ruleMigrationBlock returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getMigrationBlockAccess().getMigrationBlockAction_0(),
            $current);
    }
)	otherlv_1='migration' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMigrationBlockAccess().getMigrationKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMigrationBlockAccess().getLeftCurlyBracketKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getMigrationBlockAccess().getStatementsDDLStatementParserRuleCall_3_0_0()); 
	    }
		lv_statements_3_0=ruleDDLStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMigrationBlockRule());
	        }
       		add(
       			$current, 
       			"statements",
        		lv_statements_3_0, 
        		"DDLStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=';' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getMigrationBlockAccess().getSemicolonKeyword_3_1());
    }
)*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getMigrationBlockAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleSqlExpression
entryRuleSqlExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqlExpressionRule()); }
	 iv_ruleSqlExpression=ruleSqlExpression 
	 { $current=$iv_ruleSqlExpression.current; } 
	 EOF 
;

// Rule SqlExpression
ruleSqlExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getSqlExpressionAccess().getExprConcatParserRuleCall()); 
    }
    this_ExprConcat_0=ruleExprConcat
    { 
        $current = $this_ExprConcat_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleExprConcat
entryRuleExprConcat returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExprConcatRule()); }
	 iv_ruleExprConcat=ruleExprConcat 
	 { $current=$iv_ruleExprConcat.current; } 
	 EOF 
;

// Rule ExprConcat
ruleExprConcat returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getExprConcatAccess().getExprMultParserRuleCall_0()); 
    }
    this_ExprMult_0=ruleExprMult
    { 
        $current = $this_ExprMult_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getExprConcatAccess().getExprConcatLeftAction_1_0(),
            $current);
    }
)(
(
		lv_op_2_0=	'||' 
    {
        newLeafNode(lv_op_2_0, grammarAccess.getExprConcatAccess().getOpVerticalLineVerticalLineKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExprConcatRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_0, "||");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExprConcatAccess().getRightExprMultParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleExprMult		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExprConcatRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"ExprMult");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleExprMult
entryRuleExprMult returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExprMultRule()); }
	 iv_ruleExprMult=ruleExprMult 
	 { $current=$iv_ruleExprMult.current; } 
	 EOF 
;

// Rule ExprMult
ruleExprMult returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getExprMultAccess().getExprAddParserRuleCall_0()); 
    }
    this_ExprAdd_0=ruleExprAdd
    { 
        $current = $this_ExprAdd_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getExprMultAccess().getExprMultLeftAction_1_0(),
            $current);
    }
)(
(
(
		lv_op_2_1=	'*' 
    {
        newLeafNode(lv_op_2_1, grammarAccess.getExprMultAccess().getOpAsteriskKeyword_1_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExprMultRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_1, null);
	    }

    |		lv_op_2_2=	'/' 
    {
        newLeafNode(lv_op_2_2, grammarAccess.getExprMultAccess().getOpSolidusKeyword_1_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExprMultRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_2, null);
	    }

    |		lv_op_2_3=	'%' 
    {
        newLeafNode(lv_op_2_3, grammarAccess.getExprMultAccess().getOpPercentSignKeyword_1_1_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExprMultRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_3, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExprMultAccess().getRightExprAddParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleExprAdd		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExprMultRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"ExprAdd");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleExprAdd
entryRuleExprAdd returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExprAddRule()); }
	 iv_ruleExprAdd=ruleExprAdd 
	 { $current=$iv_ruleExprAdd.current; } 
	 EOF 
;

// Rule ExprAdd
ruleExprAdd returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getExprAddAccess().getExprBitParserRuleCall_0()); 
    }
    this_ExprBit_0=ruleExprBit
    { 
        $current = $this_ExprBit_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getExprAddAccess().getExprAddLeftAction_1_0(),
            $current);
    }
)(
(
(
		lv_op_2_1=	'+' 
    {
        newLeafNode(lv_op_2_1, grammarAccess.getExprAddAccess().getOpPlusSignKeyword_1_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExprAddRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_1, null);
	    }

    |		lv_op_2_2=	'-' 
    {
        newLeafNode(lv_op_2_2, grammarAccess.getExprAddAccess().getOpHyphenMinusKeyword_1_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExprAddRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_2, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExprAddAccess().getRightExprBitParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleExprBit		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExprAddRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"ExprBit");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleExprBit
entryRuleExprBit returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExprBitRule()); }
	 iv_ruleExprBit=ruleExprBit 
	 { $current=$iv_ruleExprBit.current; } 
	 EOF 
;

// Rule ExprBit
ruleExprBit returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getExprBitAccess().getExprRelateParserRuleCall_0()); 
    }
    this_ExprRelate_0=ruleExprRelate
    { 
        $current = $this_ExprRelate_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getExprBitAccess().getExprBitLeftAction_1_0(),
            $current);
    }
)(
(
(
		lv_op_2_1=	'<<' 
    {
        newLeafNode(lv_op_2_1, grammarAccess.getExprBitAccess().getOpLessThanSignLessThanSignKeyword_1_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExprBitRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_1, null);
	    }

    |		lv_op_2_2=	'>>' 
    {
        newLeafNode(lv_op_2_2, grammarAccess.getExprBitAccess().getOpGreaterThanSignGreaterThanSignKeyword_1_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExprBitRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_2, null);
	    }

    |		lv_op_2_3=	'&' 
    {
        newLeafNode(lv_op_2_3, grammarAccess.getExprBitAccess().getOpAmpersandKeyword_1_1_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExprBitRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_3, null);
	    }

    |		lv_op_2_4=	'|' 
    {
        newLeafNode(lv_op_2_4, grammarAccess.getExprBitAccess().getOpVerticalLineKeyword_1_1_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExprBitRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_4, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExprBitAccess().getRightExprRelateParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleExprRelate		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExprBitRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"ExprRelate");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleExprRelate
entryRuleExprRelate returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExprRelateRule()); }
	 iv_ruleExprRelate=ruleExprRelate 
	 { $current=$iv_ruleExprRelate.current; } 
	 EOF 
;

// Rule ExprRelate
ruleExprRelate returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getExprRelateAccess().getExprEqualParserRuleCall_0()); 
    }
    this_ExprEqual_0=ruleExprEqual
    { 
        $current = $this_ExprEqual_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getExprRelateAccess().getExprRelateLeftAction_1_0(),
            $current);
    }
)(
(
(
		lv_op_2_1=	'<' 
    {
        newLeafNode(lv_op_2_1, grammarAccess.getExprRelateAccess().getOpLessThanSignKeyword_1_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExprRelateRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_1, null);
	    }

    |		lv_op_2_2=	'<=' 
    {
        newLeafNode(lv_op_2_2, grammarAccess.getExprRelateAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExprRelateRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_2, null);
	    }

    |		lv_op_2_3=	'>' 
    {
        newLeafNode(lv_op_2_3, grammarAccess.getExprRelateAccess().getOpGreaterThanSignKeyword_1_1_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExprRelateRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_3, null);
	    }

    |		lv_op_2_4=	'>=' 
    {
        newLeafNode(lv_op_2_4, grammarAccess.getExprRelateAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExprRelateRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_4, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExprRelateAccess().getRightExprEqualParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleExprEqual		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExprRelateRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"ExprEqual");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleExprEqual
entryRuleExprEqual returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExprEqualRule()); }
	 iv_ruleExprEqual=ruleExprEqual 
	 { $current=$iv_ruleExprEqual.current; } 
	 EOF 
;

// Rule ExprEqual
ruleExprEqual returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getExprEqualAccess().getExprAndParserRuleCall_0()); 
    }
    this_ExprAnd_0=ruleExprAnd
    { 
        $current = $this_ExprAnd_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getExprEqualAccess().getExprEqualLeftAction_1_0(),
            $current);
    }
)(
(
(
		lv_op_2_1=	'=' 
    {
        newLeafNode(lv_op_2_1, grammarAccess.getExprEqualAccess().getOpEqualsSignKeyword_1_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExprEqualRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_1, null);
	    }

    |		lv_op_2_2=	'==' 
    {
        newLeafNode(lv_op_2_2, grammarAccess.getExprEqualAccess().getOpEqualsSignEqualsSignKeyword_1_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExprEqualRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_2, null);
	    }

    |		lv_op_2_3=	'!=' 
    {
        newLeafNode(lv_op_2_3, grammarAccess.getExprEqualAccess().getOpExclamationMarkEqualsSignKeyword_1_1_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExprEqualRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_3, null);
	    }

    |		lv_op_2_4=	'<>' 
    {
        newLeafNode(lv_op_2_4, grammarAccess.getExprEqualAccess().getOpLessThanSignGreaterThanSignKeyword_1_1_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExprEqualRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_4, null);
	    }

    |		lv_op_2_5=	'is' 
    {
        newLeafNode(lv_op_2_5, grammarAccess.getExprEqualAccess().getOpIsKeyword_1_1_0_4());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExprEqualRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_5, null);
	    }

    |		lv_op_2_6=	'is not' 
    {
        newLeafNode(lv_op_2_6, grammarAccess.getExprEqualAccess().getOpIsNotKeyword_1_1_0_5());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExprEqualRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_6, null);
	    }

    |		lv_op_2_7=	'in' 
    {
        newLeafNode(lv_op_2_7, grammarAccess.getExprEqualAccess().getOpInKeyword_1_1_0_6());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExprEqualRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_7, null);
	    }

    |		lv_op_2_8=	'like' 
    {
        newLeafNode(lv_op_2_8, grammarAccess.getExprEqualAccess().getOpLikeKeyword_1_1_0_7());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExprEqualRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_8, null);
	    }

    |		lv_op_2_9=	'glob' 
    {
        newLeafNode(lv_op_2_9, grammarAccess.getExprEqualAccess().getOpGlobKeyword_1_1_0_8());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExprEqualRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_9, null);
	    }

    |		lv_op_2_10=	'match' 
    {
        newLeafNode(lv_op_2_10, grammarAccess.getExprEqualAccess().getOpMatchKeyword_1_1_0_9());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExprEqualRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_10, null);
	    }

    |		lv_op_2_11=	'regexp' 
    {
        newLeafNode(lv_op_2_11, grammarAccess.getExprEqualAccess().getOpRegexpKeyword_1_1_0_10());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExprEqualRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_11, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExprEqualAccess().getRightExprAndParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleExprAnd		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExprEqualRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"ExprAnd");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleExprAnd
entryRuleExprAnd returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExprAndRule()); }
	 iv_ruleExprAnd=ruleExprAnd 
	 { $current=$iv_ruleExprAnd.current; } 
	 EOF 
;

// Rule ExprAnd
ruleExprAnd returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getExprAndAccess().getExprOrParserRuleCall_0()); 
    }
    this_ExprOr_0=ruleExprOr
    { 
        $current = $this_ExprOr_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getExprAndAccess().getExprAndLeftAction_1_0(),
            $current);
    }
)(
(
		lv_op_2_0=	'and' 
    {
        newLeafNode(lv_op_2_0, grammarAccess.getExprAndAccess().getOpAndKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExprAndRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_0, "and");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExprAndAccess().getRightExprOrParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleExprOr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExprAndRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"ExprOr");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleExprOr
entryRuleExprOr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExprOrRule()); }
	 iv_ruleExprOr=ruleExprOr 
	 { $current=$iv_ruleExprOr.current; } 
	 EOF 
;

// Rule ExprOr
ruleExprOr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getExprOrAccess().getNullCheckExpressionParserRuleCall_0()); 
    }
    this_NullCheckExpression_0=ruleNullCheckExpression
    { 
        $current = $this_NullCheckExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getExprOrAccess().getExprOrLeftAction_1_0(),
            $current);
    }
)(
(
		lv_op_2_0=	'or' 
    {
        newLeafNode(lv_op_2_0, grammarAccess.getExprOrAccess().getOpOrKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExprOrRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_0, "or");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExprOrAccess().getRightNullCheckExpressionParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleNullCheckExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExprOrRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"NullCheckExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleNullCheckExpression
entryRuleNullCheckExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNullCheckExpressionRule()); }
	 iv_ruleNullCheckExpression=ruleNullCheckExpression 
	 { $current=$iv_ruleNullCheckExpression.current; } 
	 EOF 
;

// Rule NullCheckExpression
ruleNullCheckExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getNullCheckExpressionAccess().getPrimaryExpressionParserRuleCall_0()); 
    }
    this_PrimaryExpression_0=rulePrimaryExpression
    { 
        $current = $this_PrimaryExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getNullCheckExpressionAccess().getNullCheckExpressionLeftAction_1_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getNullCheckExpressionAccess().getRightNullExpressionParserRuleCall_1_1_0()); 
	    }
		lv_right_2_0=ruleNullExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNullCheckExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_2_0, 
        		"NullExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleNullExpression
entryRuleNullExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNullExpressionRule()); }
	 iv_ruleNullExpression=ruleNullExpression 
	 { $current=$iv_ruleNullExpression.current; } 
	 EOF 
;

// Rule NullExpression
ruleNullExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getNullExpressionAccess().getIsNullAction_0_0(),
            $current);
    }
)	otherlv_1='is null' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getNullExpressionAccess().getIsNullKeyword_0_1());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getNullExpressionAccess().getNotNullAction_1_0(),
            $current);
    }
)(	otherlv_3='not null' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getNullExpressionAccess().getNotNullKeyword_1_1_0());
    }

    |	otherlv_4='notnull' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getNullExpressionAccess().getNotnullKeyword_1_1_1());
    }
)))
;





// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrimaryExpressionRule()); }
	 iv_rulePrimaryExpression=rulePrimaryExpression 
	 { $current=$iv_rulePrimaryExpression.current; } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPrimaryExpressionAccess().getColumnLiteralAction_0_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getNameQualifiedNameParserRuleCall_0_1_0()); 
	    }
		lv_name_1_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPrimaryExpressionAccess().getLiteralAction_1_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getLiteralValueLiteralValueParserRuleCall_1_1_0()); 
	    }
		lv_literalValue_3_0=ruleLiteralValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"literalValue",
        		lv_literalValue_3_0, 
        		"LiteralValue");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPrimaryExpressionAccess().getNestedExpressionAction_2_0(),
            $current);
    }
)	otherlv_5='(' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getExpressionSqlExpressionParserRuleCall_2_2_0()); 
	    }
		lv_expression_6_0=ruleSqlExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_6_0, 
        		"SqlExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_2_3());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPrimaryExpressionAccess().getSelectStatementExpressionAction_3_0(),
            $current);
    }
)(
(
		lv_not_9_0=	'not' 
    {
        newLeafNode(lv_not_9_0, grammarAccess.getPrimaryExpressionAccess().getNotNotKeyword_3_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimaryExpressionRule());
	        }
       		setWithLastConsumed($current, "not", true, "not");
	    }

)
)?(
(
		lv_exists_10_0=	'exists' 
    {
        newLeafNode(lv_exists_10_0, grammarAccess.getPrimaryExpressionAccess().getExistsExistsKeyword_3_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimaryExpressionRule());
	        }
       		setWithLastConsumed($current, "exists", true, "exists");
	    }

)
)?	otherlv_11='(' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_3_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getSelectSelectStatementParserRuleCall_3_4_0()); 
	    }
		lv_select_12_0=ruleSelectStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"select",
        		lv_select_12_0, 
        		"SelectStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_13=')' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_3_5());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPrimaryExpressionAccess().getCaseExpressionAction_4_0(),
            $current);
    }
)	otherlv_15='case' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getPrimaryExpressionAccess().getCaseKeyword_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getCaseExpressionSqlExpressionParserRuleCall_4_2_0()); 
	    }
		lv_caseExpression_16_0=ruleSqlExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"caseExpression",
        		lv_caseExpression_16_0, 
        		"SqlExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getCasesCaseParserRuleCall_4_3_0()); 
	    }
		lv_cases_17_0=ruleCase		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		add(
       			$current, 
       			"cases",
        		lv_cases_17_0, 
        		"Case");
	        afterParserOrEnumRuleCall();
	    }

)
)+(	otherlv_18='else' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getPrimaryExpressionAccess().getElseKeyword_4_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getElseExpressionSqlExpressionParserRuleCall_4_4_1_0()); 
	    }
		lv_elseExpression_19_0=ruleSqlExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"elseExpression",
        		lv_elseExpression_19_0, 
        		"SqlExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_20='end' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getPrimaryExpressionAccess().getEndKeyword_4_5());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPrimaryExpressionAccess().getFunctionAction_5_0(),
            $current);
    }
)(
(
		lv_name_22_0=RULE_ID
		{
			newLeafNode(lv_name_22_0, grammarAccess.getPrimaryExpressionAccess().getNameIDTerminalRuleCall_5_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimaryExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_22_0, 
        		"ID");
	    }

)
)	otherlv_23='(' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_5_2());
    }
((
(
		lv_all_24_0=	'*' 
    {
        newLeafNode(lv_all_24_0, grammarAccess.getPrimaryExpressionAccess().getAllAsteriskKeyword_5_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimaryExpressionRule());
	        }
       		setWithLastConsumed($current, "all", true, "*");
	    }

)
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArgumentsSqlExpressionParserRuleCall_5_3_1_0_0()); 
	    }
		lv_arguments_25_0=ruleSqlExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_25_0, 
        		"SqlExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_26=',' 
    {
    	newLeafNode(otherlv_26, grammarAccess.getPrimaryExpressionAccess().getCommaKeyword_5_3_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArugmentsSqlExpressionParserRuleCall_5_3_1_1_1_0()); 
	    }
		lv_arugments_27_0=ruleSqlExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		add(
       			$current, 
       			"arugments",
        		lv_arugments_27_0, 
        		"SqlExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*))	otherlv_28=')' 
    {
    	newLeafNode(otherlv_28, grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_5_4());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPrimaryExpressionAccess().getCastExpressionAction_6_0(),
            $current);
    }
)	otherlv_30='cast' 
    {
    	newLeafNode(otherlv_30, grammarAccess.getPrimaryExpressionAccess().getCastKeyword_6_1());
    }
	otherlv_31='(' 
    {
    	newLeafNode(otherlv_31, grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_6_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getExpressionSqlExpressionParserRuleCall_6_3_0()); 
	    }
		lv_expression_32_0=ruleSqlExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_32_0, 
        		"SqlExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_33='as' 
    {
    	newLeafNode(otherlv_33, grammarAccess.getPrimaryExpressionAccess().getAsKeyword_6_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getTypeSqliteDataTypeEnumRuleCall_6_5_0()); 
	    }
		lv_type_34_0=ruleSqliteDataType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_34_0, 
        		"SqliteDataType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_35=')' 
    {
    	newLeafNode(otherlv_35, grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_6_6());
    }
))
;





// Entry rule entryRuleCase
entryRuleCase returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCaseRule()); }
	 iv_ruleCase=ruleCase 
	 { $current=$iv_ruleCase.current; } 
	 EOF 
;

// Rule Case
ruleCase returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='when' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCaseAccess().getWhenKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCaseAccess().getWhenExpressionSqlExpressionParserRuleCall_1_0()); 
	    }
		lv_whenExpression_1_0=ruleSqlExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCaseRule());
	        }
       		set(
       			$current, 
       			"whenExpression",
        		lv_whenExpression_1_0, 
        		"SqlExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='then' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCaseAccess().getThenKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCaseAccess().getThenExpressionSqlExpressionParserRuleCall_3_0()); 
	    }
		lv_thenExpression_3_0=ruleSqlExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCaseRule());
	        }
       		set(
       			$current, 
       			"thenExpression",
        		lv_thenExpression_3_0, 
        		"SqlExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleDDLStatement
entryRuleDDLStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDDLStatementRule()); }
	 iv_ruleDDLStatement=ruleDDLStatement 
	 { $current=$iv_ruleDDLStatement.current; } 
	 EOF 
;

// Rule DDLStatement
ruleDDLStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDDLStatementAccess().getCreateTableStatementAction_0_0(),
            $current);
    }
)	otherlv_1='create' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDDLStatementAccess().getCreateKeyword_0_1());
    }
	otherlv_2='table' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDDLStatementAccess().getTableKeyword_0_2());
    }
(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getDDLStatementAccess().getNameIDTerminalRuleCall_0_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDDLStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
)	otherlv_4='(' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDDLStatementAccess().getLeftParenthesisKeyword_0_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDDLStatementAccess().getColumnDefsColumnDefParserRuleCall_0_5_0()); 
	    }
		lv_columnDefs_5_0=ruleColumnDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDDLStatementRule());
	        }
       		add(
       			$current, 
       			"columnDefs",
        		lv_columnDefs_5_0, 
        		"ColumnDef");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDDLStatementAccess().getCommaKeyword_0_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDDLStatementAccess().getColumnDefsColumnDefParserRuleCall_0_6_1_0()); 
	    }
		lv_columnDefs_7_0=ruleColumnDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDDLStatementRule());
	        }
       		add(
       			$current, 
       			"columnDefs",
        		lv_columnDefs_7_0, 
        		"ColumnDef");
	        afterParserOrEnumRuleCall();
	    }

)
))*(	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getDDLStatementAccess().getCommaKeyword_0_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDDLStatementAccess().getConstraintsTableConstraintParserRuleCall_0_7_1_0()); 
	    }
		lv_constraints_9_0=ruleTableConstraint		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDDLStatementRule());
	        }
       		add(
       			$current, 
       			"constraints",
        		lv_constraints_9_0, 
        		"TableConstraint");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_10=')' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getDDLStatementAccess().getRightParenthesisKeyword_0_8());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDDLStatementAccess().getCreateViewStatementAction_1_0(),
            $current);
    }
)	otherlv_12='create' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getDDLStatementAccess().getCreateKeyword_1_1());
    }
	otherlv_13='view' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getDDLStatementAccess().getViewKeyword_1_2());
    }
(
(
		lv_name_14_0=RULE_ID
		{
			newLeafNode(lv_name_14_0, grammarAccess.getDDLStatementAccess().getNameIDTerminalRuleCall_1_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDDLStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_14_0, 
        		"ID");
	    }

)
)	otherlv_15='as' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getDDLStatementAccess().getAsKeyword_1_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDDLStatementAccess().getSelectStatementSelectStatementParserRuleCall_1_5_0()); 
	    }
		lv_selectStatement_16_0=ruleSelectStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDDLStatementRule());
	        }
       		set(
       			$current, 
       			"selectStatement",
        		lv_selectStatement_16_0, 
        		"SelectStatement");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDDLStatementAccess().getCreateTriggerStatementAction_2_0(),
            $current);
    }
)	otherlv_18='create' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getDDLStatementAccess().getCreateKeyword_2_1());
    }
	otherlv_19='trigger' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getDDLStatementAccess().getTriggerKeyword_2_2());
    }
(
(
		lv_name_20_0=RULE_ID
		{
			newLeafNode(lv_name_20_0, grammarAccess.getDDLStatementAccess().getNameIDTerminalRuleCall_2_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDDLStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_20_0, 
        		"ID");
	    }

)
)(
(
(
		lv_when_21_1=	'before' 
    {
        newLeafNode(lv_when_21_1, grammarAccess.getDDLStatementAccess().getWhenBeforeKeyword_2_4_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDDLStatementRule());
	        }
       		setWithLastConsumed($current, "when", lv_when_21_1, null);
	    }

    |		lv_when_21_2=	'after' 
    {
        newLeafNode(lv_when_21_2, grammarAccess.getDDLStatementAccess().getWhenAfterKeyword_2_4_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDDLStatementRule());
	        }
       		setWithLastConsumed($current, "when", lv_when_21_2, null);
	    }

    |		lv_when_21_3=	'instead of' 
    {
        newLeafNode(lv_when_21_3, grammarAccess.getDDLStatementAccess().getWhenInsteadOfKeyword_2_4_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDDLStatementRule());
	        }
       		setWithLastConsumed($current, "when", lv_when_21_3, null);
	    }

)

)
)?((
(
		lv_eventType_22_0=	'delete' 
    {
        newLeafNode(lv_eventType_22_0, grammarAccess.getDDLStatementAccess().getEventTypeDeleteKeyword_2_5_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDDLStatementRule());
	        }
       		setWithLastConsumed($current, "eventType", lv_eventType_22_0, "delete");
	    }

)
)
    |(
(
		lv_eventType_23_0=	'insert' 
    {
        newLeafNode(lv_eventType_23_0, grammarAccess.getDDLStatementAccess().getEventTypeInsertKeyword_2_5_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDDLStatementRule());
	        }
       		setWithLastConsumed($current, "eventType", lv_eventType_23_0, "insert");
	    }

)
)
    |((
(
		lv_eventType_24_0=	'update' 
    {
        newLeafNode(lv_eventType_24_0, grammarAccess.getDDLStatementAccess().getEventTypeUpdateKeyword_2_5_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDDLStatementRule());
	        }
       		setWithLastConsumed($current, "eventType", lv_eventType_24_0, "update");
	    }

)
)(	otherlv_25='of' 
    {
    	newLeafNode(otherlv_25, grammarAccess.getDDLStatementAccess().getOfKeyword_2_5_2_1_0());
    }
(
(
		lv_updateColumnNames_26_0=RULE_ID
		{
			newLeafNode(lv_updateColumnNames_26_0, grammarAccess.getDDLStatementAccess().getUpdateColumnNamesIDTerminalRuleCall_2_5_2_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDDLStatementRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"updateColumnNames",
        		lv_updateColumnNames_26_0, 
        		"ID");
	    }

)
)(	otherlv_27=',' 
    {
    	newLeafNode(otherlv_27, grammarAccess.getDDLStatementAccess().getCommaKeyword_2_5_2_1_2_0());
    }
(
(
		lv_updateColumnNames_28_0=RULE_ID
		{
			newLeafNode(lv_updateColumnNames_28_0, grammarAccess.getDDLStatementAccess().getUpdateColumnNamesIDTerminalRuleCall_2_5_2_1_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDDLStatementRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"updateColumnNames",
        		lv_updateColumnNames_28_0, 
        		"ID");
	    }

)
))*)?))	otherlv_29='on' 
    {
    	newLeafNode(otherlv_29, grammarAccess.getDDLStatementAccess().getOnKeyword_2_6());
    }
(
(
		lv_tableName_30_0=RULE_ID
		{
			newLeafNode(lv_tableName_30_0, grammarAccess.getDDLStatementAccess().getTableNameIDTerminalRuleCall_2_7_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDDLStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"tableName",
        		lv_tableName_30_0, 
        		"ID");
	    }

)
)(
(
		lv_forEachRow_31_0=	'for each row' 
    {
        newLeafNode(lv_forEachRow_31_0, grammarAccess.getDDLStatementAccess().getForEachRowForEachRowKeyword_2_8_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDDLStatementRule());
	        }
       		setWithLastConsumed($current, "forEachRow", lv_forEachRow_31_0, "for each row");
	    }

)
)?(	otherlv_32='when' 
    {
    	newLeafNode(otherlv_32, grammarAccess.getDDLStatementAccess().getWhenKeyword_2_9_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDDLStatementAccess().getWhenExpressionSqlExpressionParserRuleCall_2_9_1_0()); 
	    }
		lv_whenExpression_33_0=ruleSqlExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDDLStatementRule());
	        }
       		set(
       			$current, 
       			"whenExpression",
        		lv_whenExpression_33_0, 
        		"SqlExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_34='begin' 
    {
    	newLeafNode(otherlv_34, grammarAccess.getDDLStatementAccess().getBeginKeyword_2_10());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getDDLStatementAccess().getStatementsDMLStatementParserRuleCall_2_11_0_0()); 
	    }
		lv_statements_35_0=ruleDMLStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDDLStatementRule());
	        }
       		add(
       			$current, 
       			"statements",
        		lv_statements_35_0, 
        		"DMLStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_36=';' 
    {
    	newLeafNode(otherlv_36, grammarAccess.getDDLStatementAccess().getSemicolonKeyword_2_11_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getDDLStatementAccess().getStatementsDMLStatementParserRuleCall_2_11_2_0_0()); 
	    }
		lv_statements_37_0=ruleDMLStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDDLStatementRule());
	        }
       		add(
       			$current, 
       			"statements",
        		lv_statements_37_0, 
        		"DMLStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_38=';' 
    {
    	newLeafNode(otherlv_38, grammarAccess.getDDLStatementAccess().getSemicolonKeyword_2_11_2_1());
    }
)*)?	otherlv_39='end' 
    {
    	newLeafNode(otherlv_39, grammarAccess.getDDLStatementAccess().getEndKeyword_2_12());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDDLStatementAccess().getAlterTableStatementAction_3_0(),
            $current);
    }
)	otherlv_41='alter' 
    {
    	newLeafNode(otherlv_41, grammarAccess.getDDLStatementAccess().getAlterKeyword_3_1());
    }
	otherlv_42='table' 
    {
    	newLeafNode(otherlv_42, grammarAccess.getDDLStatementAccess().getTableKeyword_3_2());
    }
(
(
		lv_name_43_0=RULE_ID
		{
			newLeafNode(lv_name_43_0, grammarAccess.getDDLStatementAccess().getNameIDTerminalRuleCall_3_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDDLStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_43_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDDLStatementAccess().getClauseAlterTableClauseParserRuleCall_3_4_0()); 
	    }
		lv_clause_44_0=ruleAlterTableClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDDLStatementRule());
	        }
       		set(
       			$current, 
       			"clause",
        		lv_clause_44_0, 
        		"AlterTableClause");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDDLStatementAccess().getDropTableStatementAction_4_0(),
            $current);
    }
)	otherlv_46='drop' 
    {
    	newLeafNode(otherlv_46, grammarAccess.getDDLStatementAccess().getDropKeyword_4_1());
    }
	otherlv_47='table' 
    {
    	newLeafNode(otherlv_47, grammarAccess.getDDLStatementAccess().getTableKeyword_4_2());
    }
(
(
		lv_ifExists_48_0=	'if exists' 
    {
        newLeafNode(lv_ifExists_48_0, grammarAccess.getDDLStatementAccess().getIfExistsIfExistsKeyword_4_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDDLStatementRule());
	        }
       		setWithLastConsumed($current, "ifExists", true, "if exists");
	    }

)
)?(
(
		lv_name_49_0=RULE_ID
		{
			newLeafNode(lv_name_49_0, grammarAccess.getDDLStatementAccess().getNameIDTerminalRuleCall_4_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDDLStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_49_0, 
        		"ID");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDDLStatementAccess().getDropTriggerStatementAction_5_0(),
            $current);
    }
)	otherlv_51='drop' 
    {
    	newLeafNode(otherlv_51, grammarAccess.getDDLStatementAccess().getDropKeyword_5_1());
    }
	otherlv_52='trigger' 
    {
    	newLeafNode(otherlv_52, grammarAccess.getDDLStatementAccess().getTriggerKeyword_5_2());
    }
(
(
		lv_ifExists_53_0=	'if exists' 
    {
        newLeafNode(lv_ifExists_53_0, grammarAccess.getDDLStatementAccess().getIfExistsIfExistsKeyword_5_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDDLStatementRule());
	        }
       		setWithLastConsumed($current, "ifExists", true, "if exists");
	    }

)
)?(
(
		lv_name_54_0=RULE_ID
		{
			newLeafNode(lv_name_54_0, grammarAccess.getDDLStatementAccess().getNameIDTerminalRuleCall_5_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDDLStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_54_0, 
        		"ID");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDDLStatementAccess().getDropViewStatementAction_6_0(),
            $current);
    }
)	otherlv_56='drop' 
    {
    	newLeafNode(otherlv_56, grammarAccess.getDDLStatementAccess().getDropKeyword_6_1());
    }
	otherlv_57='view' 
    {
    	newLeafNode(otherlv_57, grammarAccess.getDDLStatementAccess().getViewKeyword_6_2());
    }
(
(
		lv_ifExists_58_0=	'if exists' 
    {
        newLeafNode(lv_ifExists_58_0, grammarAccess.getDDLStatementAccess().getIfExistsIfExistsKeyword_6_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDDLStatementRule());
	        }
       		setWithLastConsumed($current, "ifExists", true, "if exists");
	    }

)
)?(
(
		lv_name_59_0=RULE_ID
		{
			newLeafNode(lv_name_59_0, grammarAccess.getDDLStatementAccess().getNameIDTerminalRuleCall_6_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDDLStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_59_0, 
        		"ID");
	    }

)
)))
;





// Entry rule entryRuleDMLStatement
entryRuleDMLStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDMLStatementRule()); }
	 iv_ruleDMLStatement=ruleDMLStatement 
	 { $current=$iv_ruleDMLStatement.current; } 
	 EOF 
;

// Rule DMLStatement
ruleDMLStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getDMLStatementAccess().getSelectStatementParserRuleCall_0()); 
    }
    this_SelectStatement_0=ruleSelectStatement
    { 
        $current = $this_SelectStatement_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDMLStatementAccess().getInsertStatementParserRuleCall_1()); 
    }
    this_InsertStatement_1=ruleInsertStatement
    { 
        $current = $this_InsertStatement_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDMLStatementAccess().getUpdateStatementParserRuleCall_2()); 
    }
    this_UpdateStatement_2=ruleUpdateStatement
    { 
        $current = $this_UpdateStatement_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDMLStatementAccess().getDeleteStatementParserRuleCall_3()); 
    }
    this_DeleteStatement_3=ruleDeleteStatement
    { 
        $current = $this_DeleteStatement_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleDeleteStatement
entryRuleDeleteStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeleteStatementRule()); }
	 iv_ruleDeleteStatement=ruleDeleteStatement 
	 { $current=$iv_ruleDeleteStatement.current; } 
	 EOF 
;

// Rule DeleteStatement
ruleDeleteStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='delete' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDeleteStatementAccess().getDeleteKeyword_0());
    }
	otherlv_1='from' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDeleteStatementAccess().getFromKeyword_1());
    }
(
(
		lv_tableName_2_0=RULE_ID
		{
			newLeafNode(lv_tableName_2_0, grammarAccess.getDeleteStatementAccess().getTableNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeleteStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"tableName",
        		lv_tableName_2_0, 
        		"ID");
	    }

)
)(	otherlv_3='where' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDeleteStatementAccess().getWhereKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeleteStatementAccess().getExpressionSqlExpressionParserRuleCall_3_1_0()); 
	    }
		lv_expression_4_0=ruleSqlExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeleteStatementRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_4_0, 
        		"SqlExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleInsertStatement
entryRuleInsertStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInsertStatementRule()); }
	 iv_ruleInsertStatement=ruleInsertStatement 
	 { $current=$iv_ruleInsertStatement.current; } 
	 EOF 
;

// Rule InsertStatement
ruleInsertStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((	otherlv_0='insert' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInsertStatementAccess().getInsertKeyword_0_0_0());
    }
(	otherlv_1='or' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInsertStatementAccess().getOrKeyword_0_0_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInsertStatementAccess().getConflictResolutionConflictResolutionEnumRuleCall_0_0_1_1_0()); 
	    }
		lv_conflictResolution_2_0=ruleConflictResolution		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInsertStatementRule());
	        }
       		set(
       			$current, 
       			"conflictResolution",
        		lv_conflictResolution_2_0, 
        		"ConflictResolution");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
    |	otherlv_3='replace' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInsertStatementAccess().getReplaceKeyword_0_1());
    }
)	otherlv_4='into' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInsertStatementAccess().getIntoKeyword_1());
    }
(
(
		lv_tableName_5_0=RULE_ID
		{
			newLeafNode(lv_tableName_5_0, grammarAccess.getInsertStatementAccess().getTableNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInsertStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"tableName",
        		lv_tableName_5_0, 
        		"ID");
	    }

)
)(	otherlv_6='(' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getInsertStatementAccess().getLeftParenthesisKeyword_3_0());
    }
(
(
		lv_columnNames_7_0=RULE_ID
		{
			newLeafNode(lv_columnNames_7_0, grammarAccess.getInsertStatementAccess().getColumnNamesIDTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInsertStatementRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"columnNames",
        		lv_columnNames_7_0, 
        		"ID");
	    }

)
)(	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getInsertStatementAccess().getCommaKeyword_3_2_0());
    }
(
(
		lv_columnNames_9_0=RULE_ID
		{
			newLeafNode(lv_columnNames_9_0, grammarAccess.getInsertStatementAccess().getColumnNamesIDTerminalRuleCall_3_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInsertStatementRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"columnNames",
        		lv_columnNames_9_0, 
        		"ID");
	    }

)
))*	otherlv_10=')' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getInsertStatementAccess().getRightParenthesisKeyword_3_3());
    }
)?(((	otherlv_11='values' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getInsertStatementAccess().getValuesKeyword_4_0_0_0());
    }
	otherlv_12='(' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getInsertStatementAccess().getLeftParenthesisKeyword_4_0_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInsertStatementAccess().getExpressionsSqlExpressionParserRuleCall_4_0_0_2_0()); 
	    }
		lv_expressions_13_0=ruleSqlExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInsertStatementRule());
	        }
       		add(
       			$current, 
       			"expressions",
        		lv_expressions_13_0, 
        		"SqlExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_14=',' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getInsertStatementAccess().getCommaKeyword_4_0_0_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInsertStatementAccess().getExpressionsSqlExpressionParserRuleCall_4_0_0_3_1_0()); 
	    }
		lv_expressions_15_0=ruleSqlExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInsertStatementRule());
	        }
       		add(
       			$current, 
       			"expressions",
        		lv_expressions_15_0, 
        		"SqlExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_16=')' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getInsertStatementAccess().getRightParenthesisKeyword_4_0_0_4());
    }
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getInsertStatementAccess().getSelectStatementSelectStatementParserRuleCall_4_0_1_0()); 
	    }
		lv_selectStatement_17_0=ruleSelectStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInsertStatementRule());
	        }
       		set(
       			$current, 
       			"selectStatement",
        		lv_selectStatement_17_0, 
        		"SelectStatement");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_18='default' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getInsertStatementAccess().getDefaultKeyword_4_1_0());
    }
	otherlv_19='values' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getInsertStatementAccess().getValuesKeyword_4_1_1());
    }
)))
;





// Entry rule entryRuleUpdateStatement
entryRuleUpdateStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUpdateStatementRule()); }
	 iv_ruleUpdateStatement=ruleUpdateStatement 
	 { $current=$iv_ruleUpdateStatement.current; } 
	 EOF 
;

// Rule UpdateStatement
ruleUpdateStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='update' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getUpdateStatementAccess().getUpdateKeyword_0());
    }
(	otherlv_1='or' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getUpdateStatementAccess().getOrKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUpdateStatementAccess().getConflictResolutionConflictResolutionEnumRuleCall_1_1_0()); 
	    }
		lv_conflictResolution_2_0=ruleConflictResolution		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUpdateStatementRule());
	        }
       		set(
       			$current, 
       			"conflictResolution",
        		lv_conflictResolution_2_0, 
        		"ConflictResolution");
	        afterParserOrEnumRuleCall();
	    }

)
))?(
(
		lv_tableName_3_0=RULE_ID
		{
			newLeafNode(lv_tableName_3_0, grammarAccess.getUpdateStatementAccess().getTableNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUpdateStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"tableName",
        		lv_tableName_3_0, 
        		"ID");
	    }

)
)	otherlv_4='set' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getUpdateStatementAccess().getSetKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUpdateStatementAccess().getUpdateColumnExpressionsUpdateColumnExpressionParserRuleCall_4_0()); 
	    }
		lv_updateColumnExpressions_5_0=ruleUpdateColumnExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUpdateStatementRule());
	        }
       		add(
       			$current, 
       			"updateColumnExpressions",
        		lv_updateColumnExpressions_5_0, 
        		"UpdateColumnExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getUpdateStatementAccess().getCommaKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUpdateStatementAccess().getUpdateColumnExpressionsUpdateColumnExpressionParserRuleCall_5_1_0()); 
	    }
		lv_updateColumnExpressions_7_0=ruleUpdateColumnExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUpdateStatementRule());
	        }
       		add(
       			$current, 
       			"updateColumnExpressions",
        		lv_updateColumnExpressions_7_0, 
        		"UpdateColumnExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*(	otherlv_8='where' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getUpdateStatementAccess().getWhereKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUpdateStatementAccess().getWhereExpressionSqlExpressionParserRuleCall_6_1_0()); 
	    }
		lv_whereExpression_9_0=ruleSqlExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUpdateStatementRule());
	        }
       		set(
       			$current, 
       			"whereExpression",
        		lv_whereExpression_9_0, 
        		"SqlExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleUpdateColumnExpression
entryRuleUpdateColumnExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUpdateColumnExpressionRule()); }
	 iv_ruleUpdateColumnExpression=ruleUpdateColumnExpression 
	 { $current=$iv_ruleUpdateColumnExpression.current; } 
	 EOF 
;

// Rule UpdateColumnExpression
ruleUpdateColumnExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_columnName_0_0=RULE_ID
		{
			newLeafNode(lv_columnName_0_0, grammarAccess.getUpdateColumnExpressionAccess().getColumnNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUpdateColumnExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"columnName",
        		lv_columnName_0_0, 
        		"ID");
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getUpdateColumnExpressionAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUpdateColumnExpressionAccess().getExpressionSqlExpressionParserRuleCall_2_0()); 
	    }
		lv_expression_2_0=ruleSqlExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUpdateColumnExpressionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"SqlExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSelectStatement
entryRuleSelectStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSelectStatementRule()); }
	 iv_ruleSelectStatement=ruleSelectStatement 
	 { $current=$iv_ruleSelectStatement.current; } 
	 EOF 
;

// Rule SelectStatement
ruleSelectStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getSelectStatementAccess().getCoreSelectCoreParserRuleCall_0_0()); 
	    }
		lv_core_0_0=ruleSelectCore		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectStatementRule());
	        }
       		set(
       			$current, 
       			"core",
        		lv_core_0_0, 
        		"SelectCore");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1='order by' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSelectStatementAccess().getOrderByKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSelectStatementAccess().getOrderingTermsOrderingTermParserRuleCall_1_1_0()); 
	    }
		lv_orderingTerms_2_0=ruleOrderingTerm		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectStatementRule());
	        }
       		add(
       			$current, 
       			"orderingTerms",
        		lv_orderingTerms_2_0, 
        		"OrderingTerm");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSelectStatementAccess().getCommaKeyword_1_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSelectStatementAccess().getOrderingTermsOrderingTermParserRuleCall_1_2_1_0()); 
	    }
		lv_orderingTerms_4_0=ruleOrderingTerm		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectStatementRule());
	        }
       		add(
       			$current, 
       			"orderingTerms",
        		lv_orderingTerms_4_0, 
        		"OrderingTerm");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?)
;





// Entry rule entryRuleSelectCore
entryRuleSelectCore returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSelectCoreRule()); }
	 iv_ruleSelectCore=ruleSelectCore 
	 { $current=$iv_ruleSelectCore.current; } 
	 EOF 
;

// Rule SelectCore
ruleSelectCore returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSelectCoreAccess().getSelectCoreOperandParserRuleCall_0()); 
    }
    this_SelectCoreOperand_0=ruleSelectCoreOperand
    { 
        $current = $this_SelectCoreOperand_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getSelectCoreAccess().getSelectCoreLeftAction_1_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSelectCoreAccess().getOpCompoundOperatorEnumRuleCall_1_1_0()); 
	    }
		lv_op_2_0=ruleCompoundOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectCoreRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_2_0, 
        		"CompoundOperator");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSelectCoreAccess().getRightSelectCoreOperandParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleSelectCoreOperand		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectCoreRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"SelectCoreOperand");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleSelectCoreOperand
entryRuleSelectCoreOperand returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSelectCoreOperandRule()); }
	 iv_ruleSelectCoreOperand=ruleSelectCoreOperand 
	 { $current=$iv_ruleSelectCoreOperand.current; } 
	 EOF 
;

// Rule SelectCoreOperand
ruleSelectCoreOperand returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='select' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSelectCoreOperandAccess().getSelectKeyword_0());
    }
((
(
		lv_distinct_1_0=	'distinct' 
    {
        newLeafNode(lv_distinct_1_0, grammarAccess.getSelectCoreOperandAccess().getDistinctDistinctKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSelectCoreOperandRule());
	        }
       		setWithLastConsumed($current, "distinct", true, "distinct");
	    }

)
)
    |(
(
		lv_all_2_0=	'all' 
    {
        newLeafNode(lv_all_2_0, grammarAccess.getSelectCoreOperandAccess().getAllAllKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSelectCoreOperandRule());
	        }
       		setWithLastConsumed($current, "all", true, "all");
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getSelectCoreOperandAccess().getResultColumnsResultColumnParserRuleCall_2_0()); 
	    }
		lv_resultColumns_3_0=ruleResultColumn		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectCoreOperandRule());
	        }
       		add(
       			$current, 
       			"resultColumns",
        		lv_resultColumns_3_0, 
        		"ResultColumn");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSelectCoreOperandAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSelectCoreOperandAccess().getResultColumnsResultColumnParserRuleCall_3_1_0()); 
	    }
		lv_resultColumns_5_0=ruleResultColumn		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectCoreOperandRule());
	        }
       		add(
       			$current, 
       			"resultColumns",
        		lv_resultColumns_5_0, 
        		"ResultColumn");
	        afterParserOrEnumRuleCall();
	    }

)
))*(	otherlv_6='from' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSelectCoreOperandAccess().getFromKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSelectCoreOperandAccess().getSourceJoinSourceParserRuleCall_4_1_0()); 
	    }
		lv_source_7_0=ruleJoinSource		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectCoreOperandRule());
	        }
       		set(
       			$current, 
       			"source",
        		lv_source_7_0, 
        		"JoinSource");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_8='where' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getSelectCoreOperandAccess().getWhereKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSelectCoreOperandAccess().getWhereExpressionSqlExpressionParserRuleCall_5_1_0()); 
	    }
		lv_whereExpression_9_0=ruleSqlExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectCoreOperandRule());
	        }
       		set(
       			$current, 
       			"whereExpression",
        		lv_whereExpression_9_0, 
        		"SqlExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_10='group by' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getSelectCoreOperandAccess().getGroupByKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSelectCoreOperandAccess().getGroupByExpressionsSqlExpressionParserRuleCall_6_1_0()); 
	    }
		lv_groupByExpressions_11_0=ruleSqlExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectCoreOperandRule());
	        }
       		add(
       			$current, 
       			"groupByExpressions",
        		lv_groupByExpressions_11_0, 
        		"SqlExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_12=',' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getSelectCoreOperandAccess().getCommaKeyword_6_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSelectCoreOperandAccess().getGroupByExpressionsSqlExpressionParserRuleCall_6_2_1_0()); 
	    }
		lv_groupByExpressions_13_0=ruleSqlExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectCoreOperandRule());
	        }
       		add(
       			$current, 
       			"groupByExpressions",
        		lv_groupByExpressions_13_0, 
        		"SqlExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?(	otherlv_14='having' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getSelectCoreOperandAccess().getHavingKeyword_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSelectCoreOperandAccess().getHavingExpressionSqlExpressionParserRuleCall_7_1_0()); 
	    }
		lv_havingExpression_15_0=ruleSqlExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectCoreOperandRule());
	        }
       		set(
       			$current, 
       			"havingExpression",
        		lv_havingExpression_15_0, 
        		"SqlExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleAlterTableClause
entryRuleAlterTableClause returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAlterTableClauseRule()); }
	 iv_ruleAlterTableClause=ruleAlterTableClause 
	 { $current=$iv_ruleAlterTableClause.current; } 
	 EOF 
;

// Rule AlterTableClause
ruleAlterTableClause returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getAlterTableClauseAccess().getAlterTableRenameClauseAction_0_0(),
            $current);
    }
)	otherlv_1='rename to' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAlterTableClauseAccess().getRenameToKeyword_0_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getAlterTableClauseAccess().getNameIDTerminalRuleCall_0_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAlterTableClauseRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getAlterTableClauseAccess().getAlterTableAddColumnClauseAction_1_0(),
            $current);
    }
)	otherlv_4='add column' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAlterTableClauseAccess().getAddColumnKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAlterTableClauseAccess().getColumnDefColumnDefParserRuleCall_1_2_0()); 
	    }
		lv_columnDef_5_0=ruleColumnDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAlterTableClauseRule());
	        }
       		set(
       			$current, 
       			"columnDef",
        		lv_columnDef_5_0, 
        		"ColumnDef");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleColumnDef
entryRuleColumnDef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getColumnDefRule()); }
	 iv_ruleColumnDef=ruleColumnDef 
	 { $current=$iv_ruleColumnDef.current; } 
	 EOF 
;

// Rule ColumnDef
ruleColumnDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getColumnDefAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getColumnDefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getColumnDefAccess().getTypeColumnTypeEnumRuleCall_1_0()); 
	    }
		lv_type_1_0=ruleColumnType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getColumnDefRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_1_0, 
        		"ColumnType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getColumnDefAccess().getConstraintsColumnConstraintParserRuleCall_2_0()); 
	    }
		lv_constraints_2_0=ruleColumnConstraint		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getColumnDefRule());
	        }
       		add(
       			$current, 
       			"constraints",
        		lv_constraints_2_0, 
        		"ColumnConstraint");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleColumnConstraint
entryRuleColumnConstraint returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getColumnConstraintRule()); }
	 iv_ruleColumnConstraint=ruleColumnConstraint 
	 { $current=$iv_ruleColumnConstraint.current; } 
	 EOF 
;

// Rule ColumnConstraint
ruleColumnConstraint returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getColumnConstraintAccess().getPrimaryKeyColumnConstraintAction_0_0(),
            $current);
    }
)	otherlv_1='primary key' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getColumnConstraintAccess().getPrimaryKeyKeyword_0_1());
    }
((
(
		lv_asc_2_0=	'asc' 
    {
        newLeafNode(lv_asc_2_0, grammarAccess.getColumnConstraintAccess().getAscAscKeyword_0_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getColumnConstraintRule());
	        }
       		setWithLastConsumed($current, "asc", true, "asc");
	    }

)
)
    |(
(
		lv_desc_3_0=	'desc' 
    {
        newLeafNode(lv_desc_3_0, grammarAccess.getColumnConstraintAccess().getDescDescKeyword_0_2_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getColumnConstraintRule());
	        }
       		setWithLastConsumed($current, "desc", true, "desc");
	    }

)
))?(
(
		lv_autoincrement_4_0=	'autoincrement' 
    {
        newLeafNode(lv_autoincrement_4_0, grammarAccess.getColumnConstraintAccess().getAutoincrementAutoincrementKeyword_0_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getColumnConstraintRule());
	        }
       		setWithLastConsumed($current, "autoincrement", true, "autoincrement");
	    }

)
)?)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getColumnConstraintAccess().getNotNullConstraintAction_1_0(),
            $current);
    }
)	otherlv_6='not null' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getColumnConstraintAccess().getNotNullKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getColumnConstraintAccess().getConflictClauseConflictClauseParserRuleCall_1_2_0()); 
	    }
		lv_conflictClause_7_0=ruleConflictClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getColumnConstraintRule());
	        }
       		set(
       			$current, 
       			"conflictClause",
        		lv_conflictClause_7_0, 
        		"ConflictClause");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getColumnConstraintAccess().getDefaultConstraintAction_2_0(),
            $current);
    }
)	otherlv_9='default' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getColumnConstraintAccess().getDefaultKeyword_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getColumnConstraintAccess().getDefaultValueDefaultValueParserRuleCall_2_2_0()); 
	    }
		lv_defaultValue_10_0=ruleDefaultValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getColumnConstraintRule());
	        }
       		set(
       			$current, 
       			"defaultValue",
        		lv_defaultValue_10_0, 
        		"DefaultValue");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleDefaultValue
entryRuleDefaultValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDefaultValueRule()); }
	 iv_ruleDefaultValue=ruleDefaultValue 
	 { $current=$iv_ruleDefaultValue.current; } 
	 EOF 
;

// Rule DefaultValue
ruleDefaultValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDefaultValueAccess().getLiteralDefaultValueAction_0_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDefaultValueAccess().getLiteralLiteralValueParserRuleCall_0_1_0()); 
	    }
		lv_literal_1_0=ruleLiteralValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDefaultValueRule());
	        }
       		set(
       			$current, 
       			"literal",
        		lv_literal_1_0, 
        		"LiteralValue");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDefaultValueAccess().getExpressionDefaultValueAction_1_0(),
            $current);
    }
)	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDefaultValueAccess().getLeftParenthesisKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDefaultValueAccess().getExpressionSqlExpressionParserRuleCall_1_2_0()); 
	    }
		lv_expression_4_0=ruleSqlExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDefaultValueRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_4_0, 
        		"SqlExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDefaultValueAccess().getRightParenthesisKeyword_1_3());
    }
))
;





// Entry rule entryRuleTableConstraint
entryRuleTableConstraint returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTableConstraintRule()); }
	 iv_ruleTableConstraint=ruleTableConstraint 
	 { $current=$iv_ruleTableConstraint.current; } 
	 EOF 
;

// Rule TableConstraint
ruleTableConstraint returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTableConstraintAccess().getUniqueTableContraintAction_0_0(),
            $current);
    }
)(	otherlv_1='constraint' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTableConstraintAccess().getConstraintKeyword_0_1_0());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getTableConstraintAccess().getNameIDTerminalRuleCall_0_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTableConstraintRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
))?	otherlv_3='unique' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTableConstraintAccess().getUniqueKeyword_0_2());
    }
	otherlv_4='(' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTableConstraintAccess().getLeftParenthesisKeyword_0_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTableConstraintAccess().getColumnsIndexedColumnParserRuleCall_0_4_0()); 
	    }
		lv_columns_5_0=ruleIndexedColumn		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTableConstraintRule());
	        }
       		add(
       			$current, 
       			"columns",
        		lv_columns_5_0, 
        		"IndexedColumn");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getTableConstraintAccess().getCommaKeyword_0_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTableConstraintAccess().getColumnsIndexedColumnParserRuleCall_0_5_1_0()); 
	    }
		lv_columns_7_0=ruleIndexedColumn		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTableConstraintRule());
	        }
       		add(
       			$current, 
       			"columns",
        		lv_columns_7_0, 
        		"IndexedColumn");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_8=')' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getTableConstraintAccess().getRightParenthesisKeyword_0_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTableConstraintAccess().getConflictClauseConflictClauseParserRuleCall_0_7_0()); 
	    }
		lv_conflictClause_9_0=ruleConflictClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTableConstraintRule());
	        }
       		set(
       			$current, 
       			"conflictClause",
        		lv_conflictClause_9_0, 
        		"ConflictClause");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTableConstraintAccess().getPrimaryContraintAction_1_0(),
            $current);
    }
)(	otherlv_11='constraint' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getTableConstraintAccess().getConstraintKeyword_1_1_0());
    }
(
(
		lv_name_12_0=RULE_ID
		{
			newLeafNode(lv_name_12_0, grammarAccess.getTableConstraintAccess().getNameIDTerminalRuleCall_1_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTableConstraintRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_12_0, 
        		"ID");
	    }

)
))?	otherlv_13='primary' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getTableConstraintAccess().getPrimaryKeyword_1_2());
    }
	otherlv_14='key' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getTableConstraintAccess().getKeyKeyword_1_3());
    }
	otherlv_15='(' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getTableConstraintAccess().getLeftParenthesisKeyword_1_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTableConstraintAccess().getColumnsIndexedColumnParserRuleCall_1_5_0()); 
	    }
		lv_columns_16_0=ruleIndexedColumn		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTableConstraintRule());
	        }
       		add(
       			$current, 
       			"columns",
        		lv_columns_16_0, 
        		"IndexedColumn");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_17=',' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getTableConstraintAccess().getCommaKeyword_1_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTableConstraintAccess().getColumnsIndexedColumnParserRuleCall_1_6_1_0()); 
	    }
		lv_columns_18_0=ruleIndexedColumn		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTableConstraintRule());
	        }
       		add(
       			$current, 
       			"columns",
        		lv_columns_18_0, 
        		"IndexedColumn");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_19=')' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getTableConstraintAccess().getRightParenthesisKeyword_1_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTableConstraintAccess().getConflictClauseConflictClauseParserRuleCall_1_8_0()); 
	    }
		lv_conflictClause_20_0=ruleConflictClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTableConstraintRule());
	        }
       		set(
       			$current, 
       			"conflictClause",
        		lv_conflictClause_20_0, 
        		"ConflictClause");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTableConstraintAccess().getCheckTableConstraintAction_2_0(),
            $current);
    }
)(	otherlv_22='constraint' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getTableConstraintAccess().getConstraintKeyword_2_1_0());
    }
(
(
		lv_name_23_0=RULE_ID
		{
			newLeafNode(lv_name_23_0, grammarAccess.getTableConstraintAccess().getNameIDTerminalRuleCall_2_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTableConstraintRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_23_0, 
        		"ID");
	    }

)
))?	otherlv_24='check' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getTableConstraintAccess().getCheckKeyword_2_2());
    }
	otherlv_25='(' 
    {
    	newLeafNode(otherlv_25, grammarAccess.getTableConstraintAccess().getLeftParenthesisKeyword_2_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTableConstraintAccess().getExpressionSqlExpressionParserRuleCall_2_4_0()); 
	    }
		lv_expression_26_0=ruleSqlExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTableConstraintRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_26_0, 
        		"SqlExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_27=')' 
    {
    	newLeafNode(otherlv_27, grammarAccess.getTableConstraintAccess().getRightParenthesisKeyword_2_5());
    }
))
;





// Entry rule entryRuleIndexedColumn
entryRuleIndexedColumn returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIndexedColumnRule()); }
	 iv_ruleIndexedColumn=ruleIndexedColumn 
	 { $current=$iv_ruleIndexedColumn.current; } 
	 EOF 
;

// Rule IndexedColumn
ruleIndexedColumn returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getIndexedColumnRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getIndexedColumnAccess().getNameColumnDefCrossReference_0_0()); 
	}

)
)((
(
		lv_asc_1_0=	'asc' 
    {
        newLeafNode(lv_asc_1_0, grammarAccess.getIndexedColumnAccess().getAscAscKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIndexedColumnRule());
	        }
       		setWithLastConsumed($current, "asc", true, "asc");
	    }

)
)
    |(
(
		lv_desc_2_0=	'desc' 
    {
        newLeafNode(lv_desc_2_0, grammarAccess.getIndexedColumnAccess().getDescDescKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIndexedColumnRule());
	        }
       		setWithLastConsumed($current, "desc", true, "desc");
	    }

)
))?)
;





// Entry rule entryRuleOrderingTerm
entryRuleOrderingTerm returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOrderingTermRule()); }
	 iv_ruleOrderingTerm=ruleOrderingTerm 
	 { $current=$iv_ruleOrderingTerm.current; } 
	 EOF 
;

// Rule OrderingTerm
ruleOrderingTerm returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getOrderingTermAccess().getExpressionSqlExpressionParserRuleCall_0_0()); 
	    }
		lv_expression_0_0=ruleSqlExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrderingTermRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_0_0, 
        		"SqlExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		lv_asc_1_0=	'asc' 
    {
        newLeafNode(lv_asc_1_0, grammarAccess.getOrderingTermAccess().getAscAscKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOrderingTermRule());
	        }
       		setWithLastConsumed($current, "asc", true, "asc");
	    }

)
)
    |(
(
		lv_desc_2_0=	'desc' 
    {
        newLeafNode(lv_desc_2_0, grammarAccess.getOrderingTermAccess().getDescDescKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOrderingTermRule());
	        }
       		setWithLastConsumed($current, "desc", true, "desc");
	    }

)
))?)
;





// Entry rule entryRuleJoinSource
entryRuleJoinSource returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJoinSourceRule()); }
	 iv_ruleJoinSource=ruleJoinSource 
	 { $current=$iv_ruleJoinSource.current; } 
	 EOF 
;

// Rule JoinSource
ruleJoinSource returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getJoinSourceAccess().getSourceSingleSourceParserRuleCall_0_0()); 
	    }
		lv_source_0_0=ruleSingleSource		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJoinSourceRule());
	        }
       		set(
       			$current, 
       			"source",
        		lv_source_0_0, 
        		"SingleSource");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getJoinSourceAccess().getJoinStatementsJoinStatementParserRuleCall_1_0()); 
	    }
		lv_joinStatements_1_0=ruleJoinStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJoinSourceRule());
	        }
       		add(
       			$current, 
       			"joinStatements",
        		lv_joinStatements_1_0, 
        		"JoinStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleSingleSource
entryRuleSingleSource returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSingleSourceRule()); }
	 iv_ruleSingleSource=ruleSingleSource 
	 { $current=$iv_ruleSingleSource.current; } 
	 EOF 
;

// Rule SingleSource
ruleSingleSource returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSingleSourceAccess().getSingleSourceTableAction_0_0(),
            $current);
    }
)(
(
		lv_table_1_0=RULE_ID
		{
			newLeafNode(lv_table_1_0, grammarAccess.getSingleSourceAccess().getTableIDTerminalRuleCall_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSingleSourceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"table",
        		lv_table_1_0, 
        		"ID");
	    }

)
)(	otherlv_2='as' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSingleSourceAccess().getAsKeyword_0_2_0());
    }
(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getSingleSourceAccess().getNameIDTerminalRuleCall_0_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSingleSourceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
))?)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSingleSourceAccess().getSingleSourceSelectStatementAction_1_0(),
            $current);
    }
)	otherlv_5='(' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSingleSourceAccess().getLeftParenthesisKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSingleSourceAccess().getSelectStatementSelectStatementParserRuleCall_1_2_0()); 
	    }
		lv_selectStatement_6_0=ruleSelectStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSingleSourceRule());
	        }
       		set(
       			$current, 
       			"selectStatement",
        		lv_selectStatement_6_0, 
        		"SelectStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSingleSourceAccess().getRightParenthesisKeyword_1_3());
    }
(	otherlv_8='as' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getSingleSourceAccess().getAsKeyword_1_4_0());
    }
(
(
		lv_name_9_0=RULE_ID
		{
			newLeafNode(lv_name_9_0, grammarAccess.getSingleSourceAccess().getNameIDTerminalRuleCall_1_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSingleSourceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_9_0, 
        		"ID");
	    }

)
))?)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSingleSourceAccess().getSingleSourceJoinAction_2_0(),
            $current);
    }
)	otherlv_11='(' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getSingleSourceAccess().getLeftParenthesisKeyword_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSingleSourceAccess().getJoinSourceJoinSourceParserRuleCall_2_2_0()); 
	    }
		lv_joinSource_12_0=ruleJoinSource		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSingleSourceRule());
	        }
       		set(
       			$current, 
       			"joinSource",
        		lv_joinSource_12_0, 
        		"JoinSource");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_13=')' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getSingleSourceAccess().getRightParenthesisKeyword_2_3());
    }
))
;





// Entry rule entryRuleJoinStatement
entryRuleJoinStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJoinStatementRule()); }
	 iv_ruleJoinStatement=ruleJoinStatement 
	 { $current=$iv_ruleJoinStatement.current; } 
	 EOF 
;

// Rule JoinStatement
ruleJoinStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getJoinStatementAccess().getJoinStatementAction_0(),
            $current);
    }
)(
(
		lv_natural_1_0=	'natural' 
    {
        newLeafNode(lv_natural_1_0, grammarAccess.getJoinStatementAccess().getNaturalNaturalKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getJoinStatementRule());
	        }
       		setWithLastConsumed($current, "natural", true, "natural");
	    }

)
)?(((
(
		lv_left_2_0=	'left' 
    {
        newLeafNode(lv_left_2_0, grammarAccess.getJoinStatementAccess().getLeftLeftKeyword_2_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getJoinStatementRule());
	        }
       		setWithLastConsumed($current, "left", true, "left");
	    }

)
)(
(
		lv_outer_3_0=	'outer' 
    {
        newLeafNode(lv_outer_3_0, grammarAccess.getJoinStatementAccess().getOuterOuterKeyword_2_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getJoinStatementRule());
	        }
       		setWithLastConsumed($current, "outer", true, "outer");
	    }

)
)?)
    |(
(
		lv_inner_4_0=	'inner' 
    {
        newLeafNode(lv_inner_4_0, grammarAccess.getJoinStatementAccess().getInnerInnerKeyword_2_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getJoinStatementRule());
	        }
       		setWithLastConsumed($current, "inner", true, "inner");
	    }

)
)
    |(
(
		lv_cross_5_0=	'cross' 
    {
        newLeafNode(lv_cross_5_0, grammarAccess.getJoinStatementAccess().getCrossCrossKeyword_2_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getJoinStatementRule());
	        }
       		setWithLastConsumed($current, "cross", true, "cross");
	    }

)
))?	otherlv_6='join' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getJoinStatementAccess().getJoinKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJoinStatementAccess().getSingleSourceSingleSourceParserRuleCall_4_0()); 
	    }
		lv_singleSource_7_0=ruleSingleSource		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJoinStatementRule());
	        }
       		set(
       			$current, 
       			"singleSource",
        		lv_singleSource_7_0, 
        		"SingleSource");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='on' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getJoinStatementAccess().getOnKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJoinStatementAccess().getExpressionSqlExpressionParserRuleCall_6_0()); 
	    }
		lv_expression_9_0=ruleSqlExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJoinStatementRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_9_0, 
        		"SqlExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleResultColumn
entryRuleResultColumn returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getResultColumnRule()); }
	 iv_ruleResultColumn=ruleResultColumn 
	 { $current=$iv_ruleResultColumn.current; } 
	 EOF 
;

// Rule ResultColumn
ruleResultColumn returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getResultColumnAccess().getResultColumnAllAction_0_0(),
            $current);
    }
)((
(
		lv_source_1_0=RULE_ID
		{
			newLeafNode(lv_source_1_0, grammarAccess.getResultColumnAccess().getSourceIDTerminalRuleCall_0_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getResultColumnRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"source",
        		lv_source_1_0, 
        		"ID");
	    }

)
)	otherlv_2='.' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getResultColumnAccess().getFullStopKeyword_0_1_1());
    }
)?	otherlv_3='*' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getResultColumnAccess().getAsteriskKeyword_0_2());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getResultColumnAccess().getResultColumnExpressionAction_1_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getResultColumnAccess().getExpressionSqlExpressionParserRuleCall_1_1_0()); 
	    }
		lv_expression_5_0=ruleSqlExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getResultColumnRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_5_0, 
        		"SqlExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6='as' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getResultColumnAccess().getAsKeyword_1_2_0());
    }
(
(
		lv_name_7_0=RULE_ID
		{
			newLeafNode(lv_name_7_0, grammarAccess.getResultColumnAccess().getNameIDTerminalRuleCall_1_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getResultColumnRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_7_0, 
        		"ID");
	    }

)
))?))
;





// Entry rule entryRuleConflictClause
entryRuleConflictClause returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConflictClauseRule()); }
	 iv_ruleConflictClause=ruleConflictClause 
	 { $current=$iv_ruleConflictClause.current; } 
	 EOF 
;

// Rule ConflictClause
ruleConflictClause returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='on' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getConflictClauseAccess().getOnKeyword_0());
    }
	otherlv_1='conflict' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getConflictClauseAccess().getConflictKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConflictClauseAccess().getResolutionConflictResolutionEnumRuleCall_2_0()); 
	    }
		lv_resolution_2_0=ruleConflictResolution		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConflictClauseRule());
	        }
       		set(
       			$current, 
       			"resolution",
        		lv_resolution_2_0, 
        		"ConflictResolution");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleLiteralValue
entryRuleLiteralValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLiteralValueRule()); }
	 iv_ruleLiteralValue=ruleLiteralValue 
	 { $current=$iv_ruleLiteralValue.current; } 
	 EOF 
;

// Rule LiteralValue
ruleLiteralValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getLiteralValueAccess().getNumericLiteralAction_0_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLiteralValueAccess().getNumberSignedNumberParserRuleCall_0_1_0()); 
	    }
		lv_number_1_0=ruleSignedNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLiteralValueRule());
	        }
       		set(
       			$current, 
       			"number",
        		lv_number_1_0, 
        		"SignedNumber");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getLiteralValueAccess().getStringLiteralAction_1_0(),
            $current);
    }
)(
(
		lv_literal_3_0=RULE_STRING
		{
			newLeafNode(lv_literal_3_0, grammarAccess.getLiteralValueAccess().getLiteralSTRINGTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteralValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"literal",
        		lv_literal_3_0, 
        		"STRING");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getLiteralValueAccess().getNullLiteralAction_2_0(),
            $current);
    }
)(
(
		lv_literal_5_0=	'null' 
    {
        newLeafNode(lv_literal_5_0, grammarAccess.getLiteralValueAccess().getLiteralNullKeyword_2_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteralValueRule());
	        }
       		setWithLastConsumed($current, "literal", lv_literal_5_0, "null");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getLiteralValueAccess().getCurrentTimeLiteralAction_3_0(),
            $current);
    }
)(
(
		lv_literal_7_0=	'current_time' 
    {
        newLeafNode(lv_literal_7_0, grammarAccess.getLiteralValueAccess().getLiteralCurrent_timeKeyword_3_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteralValueRule());
	        }
       		setWithLastConsumed($current, "literal", lv_literal_7_0, "current_time");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getLiteralValueAccess().getCurrentDateLiteralAction_4_0(),
            $current);
    }
)(
(
		lv_literal_9_0=	'current_date' 
    {
        newLeafNode(lv_literal_9_0, grammarAccess.getLiteralValueAccess().getLiteralCurrent_dateKeyword_4_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteralValueRule());
	        }
       		setWithLastConsumed($current, "literal", lv_literal_9_0, "current_date");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getLiteralValueAccess().getCurrentTimeStampLiteralAction_5_0(),
            $current);
    }
)(
(
		lv_literal_11_0=	'current_time_stamp' 
    {
        newLeafNode(lv_literal_11_0, grammarAccess.getLiteralValueAccess().getLiteralCurrent_time_stampKeyword_5_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteralValueRule());
	        }
       		setWithLastConsumed($current, "literal", lv_literal_11_0, "current_time_stamp");
	    }

)
)))
;





// Entry rule entryRuleSignedNumber
entryRuleSignedNumber returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getSignedNumberRule()); } 
	 iv_ruleSignedNumber=ruleSignedNumber 
	 { $current=$iv_ruleSignedNumber.current.getText(); }  
	 EOF 
;

// Rule SignedNumber
ruleSignedNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSignedNumberAccess().getHyphenMinusKeyword_0()); 
    }
)?    this_NUMBER_1=RULE_NUMBER    {
		$current.merge(this_NUMBER_1);
    }

    { 
    newLeafNode(this_NUMBER_1, grammarAccess.getSignedNumberAccess().getNUMBERTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); } 
	 iv_ruleQualifiedName=ruleQualifiedName 
	 { $current=$iv_ruleQualifiedName.current.getText(); }  
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); 
    }
)*)
    ;





// Rule ColumnType
ruleColumnType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='text' 
	{
        $current = grammarAccess.getColumnTypeAccess().getTextEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getColumnTypeAccess().getTextEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='integer' 
	{
        $current = grammarAccess.getColumnTypeAccess().getIntegerEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getColumnTypeAccess().getIntegerEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='real' 
	{
        $current = grammarAccess.getColumnTypeAccess().getRealEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getColumnTypeAccess().getRealEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='blob' 
	{
        $current = grammarAccess.getColumnTypeAccess().getBlobEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getColumnTypeAccess().getBlobEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='boolean' 
	{
        $current = grammarAccess.getColumnTypeAccess().getBooleanEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getColumnTypeAccess().getBooleanEnumLiteralDeclaration_4()); 
    }
));



// Rule SqliteDataType
ruleSqliteDataType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='text' 
	{
        $current = grammarAccess.getSqliteDataTypeAccess().getTextEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getSqliteDataTypeAccess().getTextEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='integer' 
	{
        $current = grammarAccess.getSqliteDataTypeAccess().getIntegerEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getSqliteDataTypeAccess().getIntegerEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='real' 
	{
        $current = grammarAccess.getSqliteDataTypeAccess().getRealEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getSqliteDataTypeAccess().getRealEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='blob' 
	{
        $current = grammarAccess.getSqliteDataTypeAccess().getBlobEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getSqliteDataTypeAccess().getBlobEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='none' 
	{
        $current = grammarAccess.getSqliteDataTypeAccess().getNoneEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getSqliteDataTypeAccess().getNoneEnumLiteralDeclaration_4()); 
    }
)
    |(	enumLiteral_5='numeric' 
	{
        $current = grammarAccess.getSqliteDataTypeAccess().getNumericEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getSqliteDataTypeAccess().getNumericEnumLiteralDeclaration_5()); 
    }
));



// Rule ConflictResolution
ruleConflictResolution returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='rollback' 
	{
        $current = grammarAccess.getConflictResolutionAccess().getRollbackEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getConflictResolutionAccess().getRollbackEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='abort' 
	{
        $current = grammarAccess.getConflictResolutionAccess().getAbortEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getConflictResolutionAccess().getAbortEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='fail' 
	{
        $current = grammarAccess.getConflictResolutionAccess().getFailEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getConflictResolutionAccess().getFailEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='ignore' 
	{
        $current = grammarAccess.getConflictResolutionAccess().getIgnoreEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getConflictResolutionAccess().getIgnoreEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='replace' 
	{
        $current = grammarAccess.getConflictResolutionAccess().getReplaceEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getConflictResolutionAccess().getReplaceEnumLiteralDeclaration_4()); 
    }
));



// Rule CompoundOperator
ruleCompoundOperator returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='union all' 
	{
        $current = grammarAccess.getCompoundOperatorAccess().getUnionallEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getCompoundOperatorAccess().getUnionallEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='union' 
	{
        $current = grammarAccess.getCompoundOperatorAccess().getUnionEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getCompoundOperatorAccess().getUnionEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='intersect' 
	{
        $current = grammarAccess.getCompoundOperatorAccess().getIntersectEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getCompoundOperatorAccess().getIntersectEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='except' 
	{
        $current = grammarAccess.getCompoundOperatorAccess().getExceptEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getCompoundOperatorAccess().getExceptEnumLiteralDeclaration_3()); 
    }
));



RULE_NUMBER : ('0'..'9')* ('.' ('0'..'9')+)?;

RULE_INT : '$$$don\'t use this anymore$$$';

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


