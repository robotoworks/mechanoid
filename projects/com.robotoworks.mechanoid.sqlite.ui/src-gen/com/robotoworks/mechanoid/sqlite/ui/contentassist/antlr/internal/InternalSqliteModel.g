/*
* generated by Xtext
*/
grammar InternalSqliteModel;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package com.robotoworks.mechanoid.sqlite.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package com.robotoworks.mechanoid.sqlite.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import com.robotoworks.mechanoid.sqlite.services.SqliteModelGrammarAccess;

}

@parser::members {
 
 	private SqliteModelGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(SqliteModelGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group__0)
{ after(grammarAccess.getModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDatabaseBlock
entryRuleDatabaseBlock 
:
{ before(grammarAccess.getDatabaseBlockRule()); }
	 ruleDatabaseBlock
{ after(grammarAccess.getDatabaseBlockRule()); } 
	 EOF 
;

// Rule DatabaseBlock
ruleDatabaseBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDatabaseBlockAccess().getGroup()); }
(rule__DatabaseBlock__Group__0)
{ after(grammarAccess.getDatabaseBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActionBlock
entryRuleActionBlock 
:
{ before(grammarAccess.getActionBlockRule()); }
	 ruleActionBlock
{ after(grammarAccess.getActionBlockRule()); } 
	 EOF 
;

// Rule ActionBlock
ruleActionBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActionBlockAccess().getGroup()); }
(rule__ActionBlock__Group__0)
{ after(grammarAccess.getActionBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActionStatement
entryRuleActionStatement 
:
{ before(grammarAccess.getActionStatementRule()); }
	 ruleActionStatement
{ after(grammarAccess.getActionStatementRule()); } 
	 EOF 
;

// Rule ActionStatement
ruleActionStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActionStatementAccess().getGroup()); }
(rule__ActionStatement__Group__0)
{ after(grammarAccess.getActionStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMigrationBlock
entryRuleMigrationBlock 
:
{ before(grammarAccess.getMigrationBlockRule()); }
	 ruleMigrationBlock
{ after(grammarAccess.getMigrationBlockRule()); } 
	 EOF 
;

// Rule MigrationBlock
ruleMigrationBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMigrationBlockAccess().getGroup()); }
(rule__MigrationBlock__Group__0)
{ after(grammarAccess.getMigrationBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSqlExpression
entryRuleSqlExpression 
:
{ before(grammarAccess.getSqlExpressionRule()); }
	 ruleSqlExpression
{ after(grammarAccess.getSqlExpressionRule()); } 
	 EOF 
;

// Rule SqlExpression
ruleSqlExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSqlExpressionAccess().getRootAssignment()); }
(rule__SqlExpression__RootAssignment)
{ after(grammarAccess.getSqlExpressionAccess().getRootAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOr
entryRuleOr 
:
{ before(grammarAccess.getOrRule()); }
	 ruleOr
{ after(grammarAccess.getOrRule()); } 
	 EOF 
;

// Rule Or
ruleOr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOrAccess().getGroup()); }
(rule__Or__Group__0)
{ after(grammarAccess.getOrAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnd
entryRuleAnd 
:
{ before(grammarAccess.getAndRule()); }
	 ruleAnd
{ after(grammarAccess.getAndRule()); } 
	 EOF 
;

// Rule And
ruleAnd
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAndAccess().getGroup()); }
(rule__And__Group__0)
{ after(grammarAccess.getAndAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimaryComparison
entryRulePrimaryComparison 
:
{ before(grammarAccess.getPrimaryComparisonRule()); }
	 rulePrimaryComparison
{ after(grammarAccess.getPrimaryComparisonRule()); } 
	 EOF 
;

// Rule PrimaryComparison
rulePrimaryComparison
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimaryComparisonAccess().getGroup()); }
(rule__PrimaryComparison__Group__0)
{ after(grammarAccess.getPrimaryComparisonAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSecondaryComparison
entryRuleSecondaryComparison 
:
{ before(grammarAccess.getSecondaryComparisonRule()); }
	 ruleSecondaryComparison
{ after(grammarAccess.getSecondaryComparisonRule()); } 
	 EOF 
;

// Rule SecondaryComparison
ruleSecondaryComparison
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSecondaryComparisonAccess().getGroup()); }
(rule__SecondaryComparison__Group__0)
{ after(grammarAccess.getSecondaryComparisonAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDivision
entryRuleDivision 
:
{ before(grammarAccess.getDivisionRule()); }
	 ruleDivision
{ after(grammarAccess.getDivisionRule()); } 
	 EOF 
;

// Rule Division
ruleDivision
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDivisionAccess().getGroup()); }
(rule__Division__Group__0)
{ after(grammarAccess.getDivisionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultiplication
entryRuleMultiplication 
:
{ before(grammarAccess.getMultiplicationRule()); }
	 ruleMultiplication
{ after(grammarAccess.getMultiplicationRule()); } 
	 EOF 
;

// Rule Multiplication
ruleMultiplication
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultiplicationAccess().getGroup()); }
(rule__Multiplication__Group__0)
{ after(grammarAccess.getMultiplicationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAddition
entryRuleAddition 
:
{ before(grammarAccess.getAdditionRule()); }
	 ruleAddition
{ after(grammarAccess.getAdditionRule()); } 
	 EOF 
;

// Rule Addition
ruleAddition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAdditionAccess().getGroup()); }
(rule__Addition__Group__0)
{ after(grammarAccess.getAdditionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSubtraction
entryRuleSubtraction 
:
{ before(grammarAccess.getSubtractionRule()); }
	 ruleSubtraction
{ after(grammarAccess.getSubtractionRule()); } 
	 EOF 
;

// Rule Subtraction
ruleSubtraction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSubtractionAccess().getGroup()); }
(rule__Subtraction__Group__0)
{ after(grammarAccess.getSubtractionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression 
:
{ before(grammarAccess.getPrimaryExpressionRule()); }
	 rulePrimaryExpression
{ after(grammarAccess.getPrimaryExpressionRule()); } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup()); }
(rule__PrimaryExpression__Group__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCase
entryRuleCase 
:
{ before(grammarAccess.getCaseRule()); }
	 ruleCase
{ after(grammarAccess.getCaseRule()); } 
	 EOF 
;

// Rule Case
ruleCase
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCaseAccess().getGroup()); }
(rule__Case__Group__0)
{ after(grammarAccess.getCaseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimaryComparisonOp
entryRulePrimaryComparisonOp 
:
{ before(grammarAccess.getPrimaryComparisonOpRule()); }
	 rulePrimaryComparisonOp
{ after(grammarAccess.getPrimaryComparisonOpRule()); } 
	 EOF 
;

// Rule PrimaryComparisonOp
rulePrimaryComparisonOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimaryComparisonOpAccess().getAlternatives()); }
(rule__PrimaryComparisonOp__Alternatives)
{ after(grammarAccess.getPrimaryComparisonOpAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSecondaryComparisonOp
entryRuleSecondaryComparisonOp 
:
{ before(grammarAccess.getSecondaryComparisonOpRule()); }
	 ruleSecondaryComparisonOp
{ after(grammarAccess.getSecondaryComparisonOpRule()); } 
	 EOF 
;

// Rule SecondaryComparisonOp
ruleSecondaryComparisonOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSecondaryComparisonOpAccess().getAlternatives()); }
(rule__SecondaryComparisonOp__Alternatives)
{ after(grammarAccess.getSecondaryComparisonOpAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatment
entryRuleStatment 
:
{ before(grammarAccess.getStatmentRule()); }
	 ruleStatment
{ after(grammarAccess.getStatmentRule()); } 
	 EOF 
;

// Rule Statment
ruleStatment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatmentAccess().getAlternatives()); }
(rule__Statment__Alternatives)
{ after(grammarAccess.getStatmentAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAlterTableClause
entryRuleAlterTableClause 
:
{ before(grammarAccess.getAlterTableClauseRule()); }
	 ruleAlterTableClause
{ after(grammarAccess.getAlterTableClauseRule()); } 
	 EOF 
;

// Rule AlterTableClause
ruleAlterTableClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAlterTableClauseAccess().getAlternatives()); }
(rule__AlterTableClause__Alternatives)
{ after(grammarAccess.getAlterTableClauseAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleColumnDef
entryRuleColumnDef 
:
{ before(grammarAccess.getColumnDefRule()); }
	 ruleColumnDef
{ after(grammarAccess.getColumnDefRule()); } 
	 EOF 
;

// Rule ColumnDef
ruleColumnDef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getColumnDefAccess().getGroup()); }
(rule__ColumnDef__Group__0)
{ after(grammarAccess.getColumnDefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleColumnConstraint
entryRuleColumnConstraint 
:
{ before(grammarAccess.getColumnConstraintRule()); }
	 ruleColumnConstraint
{ after(grammarAccess.getColumnConstraintRule()); } 
	 EOF 
;

// Rule ColumnConstraint
ruleColumnConstraint
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getColumnConstraintAccess().getAlternatives()); }
(rule__ColumnConstraint__Alternatives)
{ after(grammarAccess.getColumnConstraintAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDefaultValue
entryRuleDefaultValue 
:
{ before(grammarAccess.getDefaultValueRule()); }
	 ruleDefaultValue
{ after(grammarAccess.getDefaultValueRule()); } 
	 EOF 
;

// Rule DefaultValue
ruleDefaultValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefaultValueAccess().getAlternatives()); }
(rule__DefaultValue__Alternatives)
{ after(grammarAccess.getDefaultValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTableConstraint
entryRuleTableConstraint 
:
{ before(grammarAccess.getTableConstraintRule()); }
	 ruleTableConstraint
{ after(grammarAccess.getTableConstraintRule()); } 
	 EOF 
;

// Rule TableConstraint
ruleTableConstraint
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTableConstraintAccess().getAlternatives()); }
(rule__TableConstraint__Alternatives)
{ after(grammarAccess.getTableConstraintAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIndexedColumn
entryRuleIndexedColumn 
:
{ before(grammarAccess.getIndexedColumnRule()); }
	 ruleIndexedColumn
{ after(grammarAccess.getIndexedColumnRule()); } 
	 EOF 
;

// Rule IndexedColumn
ruleIndexedColumn
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIndexedColumnAccess().getGroup()); }
(rule__IndexedColumn__Group__0)
{ after(grammarAccess.getIndexedColumnAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSelectStatement
entryRuleSelectStatement 
:
{ before(grammarAccess.getSelectStatementRule()); }
	 ruleSelectStatement
{ after(grammarAccess.getSelectStatementRule()); } 
	 EOF 
;

// Rule SelectStatement
ruleSelectStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSelectStatementAccess().getGroup()); }
(rule__SelectStatement__Group__0)
{ after(grammarAccess.getSelectStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCompoundOperator
entryRuleCompoundOperator 
:
{ before(grammarAccess.getCompoundOperatorRule()); }
	 ruleCompoundOperator
{ after(grammarAccess.getCompoundOperatorRule()); } 
	 EOF 
;

// Rule CompoundOperator
ruleCompoundOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCompoundOperatorAccess().getAlternatives()); }
(rule__CompoundOperator__Alternatives)
{ after(grammarAccess.getCompoundOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOrderingTerm
entryRuleOrderingTerm 
:
{ before(grammarAccess.getOrderingTermRule()); }
	 ruleOrderingTerm
{ after(grammarAccess.getOrderingTermRule()); } 
	 EOF 
;

// Rule OrderingTerm
ruleOrderingTerm
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOrderingTermAccess().getGroup()); }
(rule__OrderingTerm__Group__0)
{ after(grammarAccess.getOrderingTermAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSelectCore
entryRuleSelectCore 
:
{ before(grammarAccess.getSelectCoreRule()); }
	 ruleSelectCore
{ after(grammarAccess.getSelectCoreRule()); } 
	 EOF 
;

// Rule SelectCore
ruleSelectCore
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSelectCoreAccess().getGroup()); }
(rule__SelectCore__Group__0)
{ after(grammarAccess.getSelectCoreAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJoinSource
entryRuleJoinSource 
:
{ before(grammarAccess.getJoinSourceRule()); }
	 ruleJoinSource
{ after(grammarAccess.getJoinSourceRule()); } 
	 EOF 
;

// Rule JoinSource
ruleJoinSource
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJoinSourceAccess().getGroup()); }
(rule__JoinSource__Group__0)
{ after(grammarAccess.getJoinSourceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSingleSource
entryRuleSingleSource 
:
{ before(grammarAccess.getSingleSourceRule()); }
	 ruleSingleSource
{ after(grammarAccess.getSingleSourceRule()); } 
	 EOF 
;

// Rule SingleSource
ruleSingleSource
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSingleSourceAccess().getAlternatives()); }
(rule__SingleSource__Alternatives)
{ after(grammarAccess.getSingleSourceAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJoinStatement
entryRuleJoinStatement 
:
{ before(grammarAccess.getJoinStatementRule()); }
	 ruleJoinStatement
{ after(grammarAccess.getJoinStatementRule()); } 
	 EOF 
;

// Rule JoinStatement
ruleJoinStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJoinStatementAccess().getGroup()); }
(rule__JoinStatement__Group__0)
{ after(grammarAccess.getJoinStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleResultColumn
entryRuleResultColumn 
:
{ before(grammarAccess.getResultColumnRule()); }
	 ruleResultColumn
{ after(grammarAccess.getResultColumnRule()); } 
	 EOF 
;

// Rule ResultColumn
ruleResultColumn
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getResultColumnAccess().getAlternatives()); }
(rule__ResultColumn__Alternatives)
{ after(grammarAccess.getResultColumnAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConflictClause
entryRuleConflictClause 
:
{ before(grammarAccess.getConflictClauseRule()); }
	 ruleConflictClause
{ after(grammarAccess.getConflictClauseRule()); } 
	 EOF 
;

// Rule ConflictClause
ruleConflictClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConflictClauseAccess().getGroup()); }
(rule__ConflictClause__Group__0)
{ after(grammarAccess.getConflictClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteralValue
entryRuleLiteralValue 
:
{ before(grammarAccess.getLiteralValueRule()); }
	 ruleLiteralValue
{ after(grammarAccess.getLiteralValueRule()); } 
	 EOF 
;

// Rule LiteralValue
ruleLiteralValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralValueAccess().getAlternatives()); }
(rule__LiteralValue__Alternatives)
{ after(grammarAccess.getLiteralValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignedNumber
entryRuleSignedNumber 
:
{ before(grammarAccess.getSignedNumberRule()); }
	 ruleSignedNumber
{ after(grammarAccess.getSignedNumberRule()); } 
	 EOF 
;

// Rule SignedNumber
ruleSignedNumber
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSignedNumberAccess().getGroup()); }
(rule__SignedNumber__Group__0)
{ after(grammarAccess.getSignedNumberAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFQN
entryRuleFQN 
:
{ before(grammarAccess.getFQNRule()); }
	 ruleFQN
{ after(grammarAccess.getFQNRule()); } 
	 EOF 
;

// Rule FQN
ruleFQN
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFQNAccess().getGroup()); }
(rule__FQN__Group__0)
{ after(grammarAccess.getFQNAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule ColumnType
ruleColumnType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColumnTypeAccess().getAlternatives()); }
(rule__ColumnType__Alternatives)
{ after(grammarAccess.getColumnTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule ConflictResolution
ruleConflictResolution
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConflictResolutionAccess().getAlternatives()); }
(rule__ConflictResolution__Alternatives)
{ after(grammarAccess.getConflictResolutionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__PrimaryExpression__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_0_0()); }
(rule__PrimaryExpression__Group_0_0__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_0_0()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_0_1()); }
(rule__PrimaryExpression__Group_0_1__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_0_1()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_0_2()); }
(rule__PrimaryExpression__Group_0_2__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_0_2()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_0_3()); }
(rule__PrimaryExpression__Group_0_3__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_0_3()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_0_4()); }
(rule__PrimaryExpression__Group_0_4__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_0_4()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_0_5()); }
(rule__PrimaryExpression__Group_0_5__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Alternatives_0_5_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getAllAssignment_0_5_3_0()); }
(rule__PrimaryExpression__AllAssignment_0_5_3_0)
{ after(grammarAccess.getPrimaryExpressionAccess().getAllAssignment_0_5_3_0()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_0_5_3_1()); }
(rule__PrimaryExpression__Group_0_5_3_1__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_0_5_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__IsnullAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getIsnullIsNullKeyword_1_0_0()); }

	'is null' 

{ after(grammarAccess.getPrimaryExpressionAccess().getIsnullIsNullKeyword_1_0_0()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getIsnullNotNullKeyword_1_0_1()); }

	'not null' 

{ after(grammarAccess.getPrimaryExpressionAccess().getIsnullNotNullKeyword_1_0_1()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getIsnullNotnullKeyword_1_0_2()); }

	'notnull' 

{ after(grammarAccess.getPrimaryExpressionAccess().getIsnullNotnullKeyword_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryComparisonOp__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryComparisonOpAccess().getEqualsSignKeyword_0()); }

	'=' 

{ after(grammarAccess.getPrimaryComparisonOpAccess().getEqualsSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getPrimaryComparisonOpAccess().getEqualsSignEqualsSignKeyword_1()); }

	'==' 

{ after(grammarAccess.getPrimaryComparisonOpAccess().getEqualsSignEqualsSignKeyword_1()); }
)

    |(
{ before(grammarAccess.getPrimaryComparisonOpAccess().getExclamationMarkEqualsSignKeyword_2()); }

	'!=' 

{ after(grammarAccess.getPrimaryComparisonOpAccess().getExclamationMarkEqualsSignKeyword_2()); }
)

    |(
{ before(grammarAccess.getPrimaryComparisonOpAccess().getLessThanSignGreaterThanSignKeyword_3()); }

	'<>' 

{ after(grammarAccess.getPrimaryComparisonOpAccess().getLessThanSignGreaterThanSignKeyword_3()); }
)

    |(
{ before(grammarAccess.getPrimaryComparisonOpAccess().getIsKeyword_4()); }

	'is' 

{ after(grammarAccess.getPrimaryComparisonOpAccess().getIsKeyword_4()); }
)

    |(
{ before(grammarAccess.getPrimaryComparisonOpAccess().getIsNotKeyword_5()); }

	'is not' 

{ after(grammarAccess.getPrimaryComparisonOpAccess().getIsNotKeyword_5()); }
)

    |(
{ before(grammarAccess.getPrimaryComparisonOpAccess().getInKeyword_6()); }

	'in' 

{ after(grammarAccess.getPrimaryComparisonOpAccess().getInKeyword_6()); }
)

    |(
{ before(grammarAccess.getPrimaryComparisonOpAccess().getLikeKeyword_7()); }

	'like' 

{ after(grammarAccess.getPrimaryComparisonOpAccess().getLikeKeyword_7()); }
)

    |(
{ before(grammarAccess.getPrimaryComparisonOpAccess().getGlobKeyword_8()); }

	'glob' 

{ after(grammarAccess.getPrimaryComparisonOpAccess().getGlobKeyword_8()); }
)

    |(
{ before(grammarAccess.getPrimaryComparisonOpAccess().getMatchKeyword_9()); }

	'match' 

{ after(grammarAccess.getPrimaryComparisonOpAccess().getMatchKeyword_9()); }
)

    |(
{ before(grammarAccess.getPrimaryComparisonOpAccess().getRegexpKeyword_10()); }

	'regexp' 

{ after(grammarAccess.getPrimaryComparisonOpAccess().getRegexpKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SecondaryComparisonOp__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSecondaryComparisonOpAccess().getLessThanSignKeyword_0()); }

	'<' 

{ after(grammarAccess.getSecondaryComparisonOpAccess().getLessThanSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getSecondaryComparisonOpAccess().getLessThanSignEqualsSignKeyword_1()); }

	'<=' 

{ after(grammarAccess.getSecondaryComparisonOpAccess().getLessThanSignEqualsSignKeyword_1()); }
)

    |(
{ before(grammarAccess.getSecondaryComparisonOpAccess().getGreaterThanSignKeyword_2()); }

	'>' 

{ after(grammarAccess.getSecondaryComparisonOpAccess().getGreaterThanSignKeyword_2()); }
)

    |(
{ before(grammarAccess.getSecondaryComparisonOpAccess().getGreaterThanSignEqualsSignKeyword_3()); }

	'>=' 

{ after(grammarAccess.getSecondaryComparisonOpAccess().getGreaterThanSignEqualsSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statment__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatmentAccess().getGroup_0()); }
(rule__Statment__Group_0__0)
{ after(grammarAccess.getStatmentAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getStatmentAccess().getGroup_1()); }
(rule__Statment__Group_1__0)
{ after(grammarAccess.getStatmentAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getStatmentAccess().getGroup_2()); }
(rule__Statment__Group_2__0)
{ after(grammarAccess.getStatmentAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getStatmentAccess().getGroup_3()); }
(rule__Statment__Group_3__0)
{ after(grammarAccess.getStatmentAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getStatmentAccess().getGroup_4()); }
(rule__Statment__Group_4__0)
{ after(grammarAccess.getStatmentAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AlterTableClause__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlterTableClauseAccess().getGroup_0()); }
(rule__AlterTableClause__Group_0__0)
{ after(grammarAccess.getAlterTableClauseAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getAlterTableClauseAccess().getGroup_1()); }
(rule__AlterTableClause__Group_1__0)
{ after(grammarAccess.getAlterTableClauseAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnConstraint__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColumnConstraintAccess().getGroup_0()); }
(rule__ColumnConstraint__Group_0__0)
{ after(grammarAccess.getColumnConstraintAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getColumnConstraintAccess().getGroup_1()); }
(rule__ColumnConstraint__Group_1__0)
{ after(grammarAccess.getColumnConstraintAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getColumnConstraintAccess().getGroup_2()); }
(rule__ColumnConstraint__Group_2__0)
{ after(grammarAccess.getColumnConstraintAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnConstraint__Alternatives_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColumnConstraintAccess().getAscAssignment_0_3_0()); }
(rule__ColumnConstraint__AscAssignment_0_3_0)
{ after(grammarAccess.getColumnConstraintAccess().getAscAssignment_0_3_0()); }
)

    |(
{ before(grammarAccess.getColumnConstraintAccess().getDescAssignment_0_3_1()); }
(rule__ColumnConstraint__DescAssignment_0_3_1)
{ after(grammarAccess.getColumnConstraintAccess().getDescAssignment_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultValue__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultValueAccess().getGroup_0()); }
(rule__DefaultValue__Group_0__0)
{ after(grammarAccess.getDefaultValueAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getDefaultValueAccess().getGroup_1()); }
(rule__DefaultValue__Group_1__0)
{ after(grammarAccess.getDefaultValueAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getGroup_0()); }
(rule__TableConstraint__Group_0__0)
{ after(grammarAccess.getTableConstraintAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getTableConstraintAccess().getGroup_1()); }
(rule__TableConstraint__Group_1__0)
{ after(grammarAccess.getTableConstraintAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getTableConstraintAccess().getGroup_2()); }
(rule__TableConstraint__Group_2__0)
{ after(grammarAccess.getTableConstraintAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IndexedColumn__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexedColumnAccess().getAscAssignment_1_0()); }
(rule__IndexedColumn__AscAssignment_1_0)
{ after(grammarAccess.getIndexedColumnAccess().getAscAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getIndexedColumnAccess().getDescAssignment_1_1()); }
(rule__IndexedColumn__DescAssignment_1_1)
{ after(grammarAccess.getIndexedColumnAccess().getDescAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompoundOperatorAccess().getUnionAllKeyword_0()); }

	'union all' 

{ after(grammarAccess.getCompoundOperatorAccess().getUnionAllKeyword_0()); }
)

    |(
{ before(grammarAccess.getCompoundOperatorAccess().getUnionKeyword_1()); }

	'union' 

{ after(grammarAccess.getCompoundOperatorAccess().getUnionKeyword_1()); }
)

    |(
{ before(grammarAccess.getCompoundOperatorAccess().getIntersectKeyword_2()); }

	'intersect' 

{ after(grammarAccess.getCompoundOperatorAccess().getIntersectKeyword_2()); }
)

    |(
{ before(grammarAccess.getCompoundOperatorAccess().getExceptKeyword_3()); }

	'except' 

{ after(grammarAccess.getCompoundOperatorAccess().getExceptKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrderingTerm__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrderingTermAccess().getAscAssignment_1_0()); }
(rule__OrderingTerm__AscAssignment_1_0)
{ after(grammarAccess.getOrderingTermAccess().getAscAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getOrderingTermAccess().getDescAssignment_1_1()); }
(rule__OrderingTerm__DescAssignment_1_1)
{ after(grammarAccess.getOrderingTermAccess().getDescAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCore__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreAccess().getDistinctAssignment_1_0()); }
(rule__SelectCore__DistinctAssignment_1_0)
{ after(grammarAccess.getSelectCoreAccess().getDistinctAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getSelectCoreAccess().getAllAssignment_1_1()); }
(rule__SelectCore__AllAssignment_1_1)
{ after(grammarAccess.getSelectCoreAccess().getAllAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SingleSource__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleSourceAccess().getGroup_0()); }
(rule__SingleSource__Group_0__0)
{ after(grammarAccess.getSingleSourceAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getSingleSourceAccess().getGroup_1()); }
(rule__SingleSource__Group_1__0)
{ after(grammarAccess.getSingleSourceAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getSingleSourceAccess().getGroup_2()); }
(rule__SingleSource__Group_2__0)
{ after(grammarAccess.getSingleSourceAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinStatementAccess().getGroup_2_0()); }
(rule__JoinStatement__Group_2_0__0)
{ after(grammarAccess.getJoinStatementAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getJoinStatementAccess().getInnerAssignment_2_1()); }
(rule__JoinStatement__InnerAssignment_2_1)
{ after(grammarAccess.getJoinStatementAccess().getInnerAssignment_2_1()); }
)

    |(
{ before(grammarAccess.getJoinStatementAccess().getCrossAssignment_2_2()); }
(rule__JoinStatement__CrossAssignment_2_2)
{ after(grammarAccess.getJoinStatementAccess().getCrossAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ResultColumn__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResultColumnAccess().getGroup_0()); }
(rule__ResultColumn__Group_0__0)
{ after(grammarAccess.getResultColumnAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getResultColumnAccess().getGroup_1()); }
(rule__ResultColumn__Group_1__0)
{ after(grammarAccess.getResultColumnAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getResultColumnAccess().getGroup_2()); }
(rule__ResultColumn__Group_2__0)
{ after(grammarAccess.getResultColumnAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralValueAccess().getGroup_0()); }
(rule__LiteralValue__Group_0__0)
{ after(grammarAccess.getLiteralValueAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getLiteralValueAccess().getGroup_1()); }
(rule__LiteralValue__Group_1__0)
{ after(grammarAccess.getLiteralValueAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getLiteralValueAccess().getGroup_2()); }
(rule__LiteralValue__Group_2__0)
{ after(grammarAccess.getLiteralValueAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getLiteralValueAccess().getGroup_3()); }
(rule__LiteralValue__Group_3__0)
{ after(grammarAccess.getLiteralValueAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getLiteralValueAccess().getGroup_4()); }
(rule__LiteralValue__Group_4__0)
{ after(grammarAccess.getLiteralValueAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getLiteralValueAccess().getGroup_5()); }
(rule__LiteralValue__Group_5__0)
{ after(grammarAccess.getLiteralValueAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColumnTypeAccess().getTextEnumLiteralDeclaration_0()); }
(	'text' 
)
{ after(grammarAccess.getColumnTypeAccess().getTextEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getColumnTypeAccess().getIntegerEnumLiteralDeclaration_1()); }
(	'integer' 
)
{ after(grammarAccess.getColumnTypeAccess().getIntegerEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getColumnTypeAccess().getRealEnumLiteralDeclaration_2()); }
(	'real' 
)
{ after(grammarAccess.getColumnTypeAccess().getRealEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getColumnTypeAccess().getBlobEnumLiteralDeclaration_3()); }
(	'blob' 
)
{ after(grammarAccess.getColumnTypeAccess().getBlobEnumLiteralDeclaration_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictResolution__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConflictResolutionAccess().getRollbackEnumLiteralDeclaration_0()); }
(	'rollback' 
)
{ after(grammarAccess.getConflictResolutionAccess().getRollbackEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getConflictResolutionAccess().getAbortEnumLiteralDeclaration_1()); }
(	'abort' 
)
{ after(grammarAccess.getConflictResolutionAccess().getAbortEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getConflictResolutionAccess().getFailEnumLiteralDeclaration_2()); }
(	'fail' 
)
{ after(grammarAccess.getConflictResolutionAccess().getFailEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getConflictResolutionAccess().getIgnoreEnumLiteralDeclaration_3()); }
(	'ignore' 
)
{ after(grammarAccess.getConflictResolutionAccess().getIgnoreEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getConflictResolutionAccess().getReplaceEnumLiteralDeclaration_4()); }
(	'replace' 
)
{ after(grammarAccess.getConflictResolutionAccess().getReplaceEnumLiteralDeclaration_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getPackageKeyword_0()); }

	'package' 

{ after(grammarAccess.getModelAccess().getPackageKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getPackageNameAssignment_1()); }
(rule__Model__PackageNameAssignment_1)
{ after(grammarAccess.getModelAccess().getPackageNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getDatabaseAssignment_2()); }
(rule__Model__DatabaseAssignment_2)
{ after(grammarAccess.getModelAccess().getDatabaseAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DatabaseBlock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DatabaseBlock__Group__0__Impl
	rule__DatabaseBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DatabaseBlock__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatabaseBlockAccess().getDatabaseKeyword_0()); }

	'database' 

{ after(grammarAccess.getDatabaseBlockAccess().getDatabaseKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DatabaseBlock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DatabaseBlock__Group__1__Impl
	rule__DatabaseBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DatabaseBlock__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatabaseBlockAccess().getNameAssignment_1()); }
(rule__DatabaseBlock__NameAssignment_1)
{ after(grammarAccess.getDatabaseBlockAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DatabaseBlock__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DatabaseBlock__Group__2__Impl
	rule__DatabaseBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DatabaseBlock__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatabaseBlockAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getDatabaseBlockAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DatabaseBlock__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DatabaseBlock__Group__3__Impl
	rule__DatabaseBlock__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DatabaseBlock__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatabaseBlockAccess().getActionsAssignment_3()); }
(rule__DatabaseBlock__ActionsAssignment_3)?
{ after(grammarAccess.getDatabaseBlockAccess().getActionsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DatabaseBlock__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DatabaseBlock__Group__4__Impl
	rule__DatabaseBlock__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DatabaseBlock__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatabaseBlockAccess().getMigrationsAssignment_4()); }
(rule__DatabaseBlock__MigrationsAssignment_4)*
{ after(grammarAccess.getDatabaseBlockAccess().getMigrationsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DatabaseBlock__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DatabaseBlock__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DatabaseBlock__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatabaseBlockAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getDatabaseBlockAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ActionBlock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActionBlock__Group__0__Impl
	rule__ActionBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionBlock__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionBlockAccess().getActionBlockAction_0()); }
(

)
{ after(grammarAccess.getActionBlockAccess().getActionBlockAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActionBlock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActionBlock__Group__1__Impl
	rule__ActionBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionBlock__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionBlockAccess().getActionsKeyword_1()); }

	'actions' 

{ after(grammarAccess.getActionBlockAccess().getActionsKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActionBlock__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActionBlock__Group__2__Impl
	rule__ActionBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionBlock__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionBlockAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getActionBlockAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActionBlock__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActionBlock__Group__3__Impl
	rule__ActionBlock__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionBlock__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionBlockAccess().getActionsAssignment_3()); }
(rule__ActionBlock__ActionsAssignment_3)*
{ after(grammarAccess.getActionBlockAccess().getActionsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActionBlock__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActionBlock__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionBlock__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionBlockAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getActionBlockAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ActionStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActionStatement__Group__0__Impl
	rule__ActionStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionStatementAccess().getNameAssignment_0()); }
(rule__ActionStatement__NameAssignment_0)
{ after(grammarAccess.getActionStatementAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActionStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActionStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionStatementAccess().getPathAssignment_1()); }
(rule__ActionStatement__PathAssignment_1)
{ after(grammarAccess.getActionStatementAccess().getPathAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MigrationBlock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MigrationBlock__Group__0__Impl
	rule__MigrationBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MigrationBlock__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMigrationBlockAccess().getMigrationBlockAction_0()); }
(

)
{ after(grammarAccess.getMigrationBlockAccess().getMigrationBlockAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MigrationBlock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MigrationBlock__Group__1__Impl
	rule__MigrationBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MigrationBlock__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMigrationBlockAccess().getMigrationKeyword_1()); }

	'migration' 

{ after(grammarAccess.getMigrationBlockAccess().getMigrationKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MigrationBlock__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MigrationBlock__Group__2__Impl
	rule__MigrationBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MigrationBlock__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMigrationBlockAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getMigrationBlockAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MigrationBlock__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MigrationBlock__Group__3__Impl
	rule__MigrationBlock__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MigrationBlock__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMigrationBlockAccess().getGroup_3()); }
(rule__MigrationBlock__Group_3__0)?
{ after(grammarAccess.getMigrationBlockAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MigrationBlock__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MigrationBlock__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MigrationBlock__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMigrationBlockAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getMigrationBlockAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__MigrationBlock__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MigrationBlock__Group_3__0__Impl
	rule__MigrationBlock__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MigrationBlock__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMigrationBlockAccess().getStatementsAssignment_3_0()); }
(rule__MigrationBlock__StatementsAssignment_3_0)
{ after(grammarAccess.getMigrationBlockAccess().getStatementsAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MigrationBlock__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MigrationBlock__Group_3__1__Impl
	rule__MigrationBlock__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MigrationBlock__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMigrationBlockAccess().getSemicolonKeyword_3_1()); }

	';' 

{ after(grammarAccess.getMigrationBlockAccess().getSemicolonKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MigrationBlock__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MigrationBlock__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MigrationBlock__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMigrationBlockAccess().getGroup_3_2()); }
(rule__MigrationBlock__Group_3_2__0)*
{ after(grammarAccess.getMigrationBlockAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MigrationBlock__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MigrationBlock__Group_3_2__0__Impl
	rule__MigrationBlock__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MigrationBlock__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMigrationBlockAccess().getStatementsAssignment_3_2_0()); }
(rule__MigrationBlock__StatementsAssignment_3_2_0)
{ after(grammarAccess.getMigrationBlockAccess().getStatementsAssignment_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MigrationBlock__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MigrationBlock__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MigrationBlock__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMigrationBlockAccess().getSemicolonKeyword_3_2_1()); }

	';' 

{ after(grammarAccess.getMigrationBlockAccess().getSemicolonKeyword_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Or__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Or__Group__0__Impl
	rule__Or__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAccess().getAndParserRuleCall_0()); }
	ruleAnd
{ after(grammarAccess.getOrAccess().getAndParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Or__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAccess().getGroup_1()); }
(rule__Or__Group_1__0)*
{ after(grammarAccess.getOrAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Or__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Or__Group_1__0__Impl
	rule__Or__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAccess().getOrLeftAction_1_0()); }
(

)
{ after(grammarAccess.getOrAccess().getOrLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Or__Group_1__1__Impl
	rule__Or__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAccess().getOrKeyword_1_1()); }

	'or' 

{ after(grammarAccess.getOrAccess().getOrKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Or__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAccess().getRightAssignment_1_2()); }
(rule__Or__RightAssignment_1_2)
{ after(grammarAccess.getOrAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__And__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__And__Group__0__Impl
	rule__And__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAccess().getPrimaryComparisonParserRuleCall_0()); }
	rulePrimaryComparison
{ after(grammarAccess.getAndAccess().getPrimaryComparisonParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__And__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAccess().getGroup_1()); }
(rule__And__Group_1__0)*
{ after(grammarAccess.getAndAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__And__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__And__Group_1__0__Impl
	rule__And__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAccess().getAndLeftAction_1_0()); }
(

)
{ after(grammarAccess.getAndAccess().getAndLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__And__Group_1__1__Impl
	rule__And__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAccess().getAndKeyword_1_1()); }

	'and' 

{ after(grammarAccess.getAndAccess().getAndKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__And__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAccess().getRightAssignment_1_2()); }
(rule__And__RightAssignment_1_2)
{ after(grammarAccess.getAndAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PrimaryComparison__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryComparison__Group__0__Impl
	rule__PrimaryComparison__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryComparison__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryComparisonAccess().getSecondaryComparisonParserRuleCall_0()); }
	ruleSecondaryComparison
{ after(grammarAccess.getPrimaryComparisonAccess().getSecondaryComparisonParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryComparison__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryComparison__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryComparison__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryComparisonAccess().getGroup_1()); }
(rule__PrimaryComparison__Group_1__0)*
{ after(grammarAccess.getPrimaryComparisonAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryComparison__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryComparison__Group_1__0__Impl
	rule__PrimaryComparison__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryComparison__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryComparisonAccess().getPrimaryComparisonLeftAction_1_0()); }
(

)
{ after(grammarAccess.getPrimaryComparisonAccess().getPrimaryComparisonLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryComparison__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryComparison__Group_1__1__Impl
	rule__PrimaryComparison__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryComparison__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryComparisonAccess().getOpAssignment_1_1()); }
(rule__PrimaryComparison__OpAssignment_1_1)
{ after(grammarAccess.getPrimaryComparisonAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryComparison__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryComparison__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryComparison__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryComparisonAccess().getRightAssignment_1_2()); }
(rule__PrimaryComparison__RightAssignment_1_2)
{ after(grammarAccess.getPrimaryComparisonAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SecondaryComparison__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SecondaryComparison__Group__0__Impl
	rule__SecondaryComparison__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SecondaryComparison__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSecondaryComparisonAccess().getDivisionParserRuleCall_0()); }
	ruleDivision
{ after(grammarAccess.getSecondaryComparisonAccess().getDivisionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SecondaryComparison__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SecondaryComparison__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SecondaryComparison__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSecondaryComparisonAccess().getGroup_1()); }
(rule__SecondaryComparison__Group_1__0)*
{ after(grammarAccess.getSecondaryComparisonAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SecondaryComparison__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SecondaryComparison__Group_1__0__Impl
	rule__SecondaryComparison__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SecondaryComparison__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSecondaryComparisonAccess().getSecondaryComparisonLeftAction_1_0()); }
(

)
{ after(grammarAccess.getSecondaryComparisonAccess().getSecondaryComparisonLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SecondaryComparison__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SecondaryComparison__Group_1__1__Impl
	rule__SecondaryComparison__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SecondaryComparison__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSecondaryComparisonAccess().getOpAssignment_1_1()); }
(rule__SecondaryComparison__OpAssignment_1_1)
{ after(grammarAccess.getSecondaryComparisonAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SecondaryComparison__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SecondaryComparison__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SecondaryComparison__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSecondaryComparisonAccess().getRightAssignment_1_2()); }
(rule__SecondaryComparison__RightAssignment_1_2)
{ after(grammarAccess.getSecondaryComparisonAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Division__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Division__Group__0__Impl
	rule__Division__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Division__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivisionAccess().getMultiplicationParserRuleCall_0()); }
	ruleMultiplication
{ after(grammarAccess.getDivisionAccess().getMultiplicationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Division__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Division__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Division__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivisionAccess().getGroup_1()); }
(rule__Division__Group_1__0)*
{ after(grammarAccess.getDivisionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Division__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Division__Group_1__0__Impl
	rule__Division__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Division__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivisionAccess().getDivisionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getDivisionAccess().getDivisionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Division__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Division__Group_1__1__Impl
	rule__Division__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Division__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivisionAccess().getSolidusKeyword_1_1()); }

	'/' 

{ after(grammarAccess.getDivisionAccess().getSolidusKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Division__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Division__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Division__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivisionAccess().getRightAssignment_1_2()); }
(rule__Division__RightAssignment_1_2)
{ after(grammarAccess.getDivisionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Multiplication__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group__0__Impl
	rule__Multiplication__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getAdditionParserRuleCall_0()); }
	ruleAddition
{ after(grammarAccess.getMultiplicationAccess().getAdditionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getGroup_1()); }
(rule__Multiplication__Group_1__0)*
{ after(grammarAccess.getMultiplicationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Multiplication__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group_1__0__Impl
	rule__Multiplication__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getMultiplicationLeftAction_1_0()); }
(

)
{ after(grammarAccess.getMultiplicationAccess().getMultiplicationLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group_1__1__Impl
	rule__Multiplication__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getAsteriskKeyword_1_1()); }

	'*' 

{ after(grammarAccess.getMultiplicationAccess().getAsteriskKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getRightAssignment_1_2()); }
(rule__Multiplication__RightAssignment_1_2)
{ after(grammarAccess.getMultiplicationAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Addition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group__0__Impl
	rule__Addition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getSubtractionParserRuleCall_0()); }
	ruleSubtraction
{ after(grammarAccess.getAdditionAccess().getSubtractionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getGroup_1()); }
(rule__Addition__Group_1__0)*
{ after(grammarAccess.getAdditionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Addition__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group_1__0__Impl
	rule__Addition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getAdditionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getAdditionAccess().getAdditionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group_1__1__Impl
	rule__Addition__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getPlusSignKeyword_1_1()); }

	'+' 

{ after(grammarAccess.getAdditionAccess().getPlusSignKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getRightAssignment_1_2()); }
(rule__Addition__RightAssignment_1_2)
{ after(grammarAccess.getAdditionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Subtraction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Subtraction__Group__0__Impl
	rule__Subtraction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Subtraction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubtractionAccess().getPrimaryExpressionParserRuleCall_0()); }
	rulePrimaryExpression
{ after(grammarAccess.getSubtractionAccess().getPrimaryExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Subtraction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Subtraction__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Subtraction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubtractionAccess().getGroup_1()); }
(rule__Subtraction__Group_1__0)*
{ after(grammarAccess.getSubtractionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Subtraction__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Subtraction__Group_1__0__Impl
	rule__Subtraction__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Subtraction__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubtractionAccess().getSubtractionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getSubtractionAccess().getSubtractionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Subtraction__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Subtraction__Group_1__1__Impl
	rule__Subtraction__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Subtraction__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubtractionAccess().getHyphenMinusKeyword_1_1()); }

	'-' 

{ after(grammarAccess.getSubtractionAccess().getHyphenMinusKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Subtraction__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Subtraction__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Subtraction__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubtractionAccess().getRightAssignment_1_2()); }
(rule__Subtraction__RightAssignment_1_2)
{ after(grammarAccess.getSubtractionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PrimaryExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group__0__Impl
	rule__PrimaryExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getAlternatives_0()); }
(rule__PrimaryExpression__Alternatives_0)
{ after(grammarAccess.getPrimaryExpressionAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getIsnullAssignment_1()); }
(rule__PrimaryExpression__IsnullAssignment_1)?
{ after(grammarAccess.getPrimaryExpressionAccess().getIsnullAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryExpression__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0_0__0__Impl
	rule__PrimaryExpression__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getColumnLiteralAction_0_0_0()); }
(

)
{ after(grammarAccess.getPrimaryExpressionAccess().getColumnLiteralAction_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getNameAssignment_0_0_1()); }
(rule__PrimaryExpression__NameAssignment_0_0_1)
{ after(grammarAccess.getPrimaryExpressionAccess().getNameAssignment_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryExpression__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0_1__0__Impl
	rule__PrimaryExpression__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLiteralAction_0_1_0()); }
(

)
{ after(grammarAccess.getPrimaryExpressionAccess().getLiteralAction_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLiteralValueAssignment_0_1_1()); }
(rule__PrimaryExpression__LiteralValueAssignment_0_1_1)
{ after(grammarAccess.getPrimaryExpressionAccess().getLiteralValueAssignment_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryExpression__Group_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0_2__0__Impl
	rule__PrimaryExpression__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_0_2_0()); }

	'(' 

{ after(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0_2__1__Impl
	rule__PrimaryExpression__Group_0_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getSqlExpressionParserRuleCall_0_2_1()); }
	ruleSqlExpression
{ after(grammarAccess.getPrimaryExpressionAccess().getSqlExpressionParserRuleCall_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_0_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_0_2_2()); }

	')' 

{ after(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_0_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PrimaryExpression__Group_0_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0_3__0__Impl
	rule__PrimaryExpression__Group_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getSelectStatementExpressionAction_0_3_0()); }
(

)
{ after(grammarAccess.getPrimaryExpressionAccess().getSelectStatementExpressionAction_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_0_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0_3__1__Impl
	rule__PrimaryExpression__Group_0_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getNotAssignment_0_3_1()); }
(rule__PrimaryExpression__NotAssignment_0_3_1)?
{ after(grammarAccess.getPrimaryExpressionAccess().getNotAssignment_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_0_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0_3__2__Impl
	rule__PrimaryExpression__Group_0_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getExistsAssignment_0_3_2()); }
(rule__PrimaryExpression__ExistsAssignment_0_3_2)?
{ after(grammarAccess.getPrimaryExpressionAccess().getExistsAssignment_0_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_0_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0_3__3__Impl
	rule__PrimaryExpression__Group_0_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_0_3_3()); }

	'(' 

{ after(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_0_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_0_3__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0_3__4__Impl
	rule__PrimaryExpression__Group_0_3__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0_3__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getSelectAssignment_0_3_4()); }
(rule__PrimaryExpression__SelectAssignment_0_3_4)
{ after(grammarAccess.getPrimaryExpressionAccess().getSelectAssignment_0_3_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_0_3__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0_3__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0_3__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_0_3_5()); }

	')' 

{ after(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_0_3_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__PrimaryExpression__Group_0_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0_4__0__Impl
	rule__PrimaryExpression__Group_0_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getCaseExpressionAction_0_4_0()); }
(

)
{ after(grammarAccess.getPrimaryExpressionAccess().getCaseExpressionAction_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_0_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0_4__1__Impl
	rule__PrimaryExpression__Group_0_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getCaseKeyword_0_4_1()); }

	'case' 

{ after(grammarAccess.getPrimaryExpressionAccess().getCaseKeyword_0_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_0_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0_4__2__Impl
	rule__PrimaryExpression__Group_0_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getCaseExpressionAssignment_0_4_2()); }
(rule__PrimaryExpression__CaseExpressionAssignment_0_4_2)?
{ after(grammarAccess.getPrimaryExpressionAccess().getCaseExpressionAssignment_0_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_0_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0_4__3__Impl
	rule__PrimaryExpression__Group_0_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getCasesAssignment_0_4_3()); }
(rule__PrimaryExpression__CasesAssignment_0_4_3)
{ after(grammarAccess.getPrimaryExpressionAccess().getCasesAssignment_0_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_0_4__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0_4__4__Impl
	rule__PrimaryExpression__Group_0_4__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0_4__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getCasesAssignment_0_4_4()); }
(rule__PrimaryExpression__CasesAssignment_0_4_4)*
{ after(grammarAccess.getPrimaryExpressionAccess().getCasesAssignment_0_4_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_0_4__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0_4__5__Impl
	rule__PrimaryExpression__Group_0_4__6
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0_4__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_0_4_5()); }
(rule__PrimaryExpression__Group_0_4_5__0)?
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_0_4_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_0_4__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0_4__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0_4__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getEndKeyword_0_4_6()); }

	'end' 

{ after(grammarAccess.getPrimaryExpressionAccess().getEndKeyword_0_4_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__PrimaryExpression__Group_0_4_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0_4_5__0__Impl
	rule__PrimaryExpression__Group_0_4_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0_4_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getElseKeyword_0_4_5_0()); }

	'else' 

{ after(grammarAccess.getPrimaryExpressionAccess().getElseKeyword_0_4_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_0_4_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0_4_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0_4_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getElseExpressionAssignment_0_4_5_1()); }
(rule__PrimaryExpression__ElseExpressionAssignment_0_4_5_1)
{ after(grammarAccess.getPrimaryExpressionAccess().getElseExpressionAssignment_0_4_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryExpression__Group_0_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0_5__0__Impl
	rule__PrimaryExpression__Group_0_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getFunctionAction_0_5_0()); }
(

)
{ after(grammarAccess.getPrimaryExpressionAccess().getFunctionAction_0_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_0_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0_5__1__Impl
	rule__PrimaryExpression__Group_0_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getNameAssignment_0_5_1()); }
(rule__PrimaryExpression__NameAssignment_0_5_1)
{ after(grammarAccess.getPrimaryExpressionAccess().getNameAssignment_0_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_0_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0_5__2__Impl
	rule__PrimaryExpression__Group_0_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_0_5_2()); }

	'(' 

{ after(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_0_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_0_5__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0_5__3__Impl
	rule__PrimaryExpression__Group_0_5__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0_5__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getAlternatives_0_5_3()); }
(rule__PrimaryExpression__Alternatives_0_5_3)
{ after(grammarAccess.getPrimaryExpressionAccess().getAlternatives_0_5_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_0_5__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0_5__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0_5__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_0_5_4()); }

	')' 

{ after(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_0_5_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__PrimaryExpression__Group_0_5_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0_5_3_1__0__Impl
	rule__PrimaryExpression__Group_0_5_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0_5_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getArgumentsAssignment_0_5_3_1_0()); }
(rule__PrimaryExpression__ArgumentsAssignment_0_5_3_1_0)
{ after(grammarAccess.getPrimaryExpressionAccess().getArgumentsAssignment_0_5_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_0_5_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0_5_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0_5_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_0_5_3_1_1()); }
(rule__PrimaryExpression__Group_0_5_3_1_1__0)*
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_0_5_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryExpression__Group_0_5_3_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0_5_3_1_1__0__Impl
	rule__PrimaryExpression__Group_0_5_3_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0_5_3_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getCommaKeyword_0_5_3_1_1_0()); }

	',' 

{ after(grammarAccess.getPrimaryExpressionAccess().getCommaKeyword_0_5_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_0_5_3_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0_5_3_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0_5_3_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getArugmentsAssignment_0_5_3_1_1_1()); }
(rule__PrimaryExpression__ArugmentsAssignment_0_5_3_1_1_1)
{ after(grammarAccess.getPrimaryExpressionAccess().getArugmentsAssignment_0_5_3_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Case__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case__Group__0__Impl
	rule__Case__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getWhenKeyword_0()); }

	'when' 

{ after(grammarAccess.getCaseAccess().getWhenKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Case__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case__Group__1__Impl
	rule__Case__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getWhenExpressionAssignment_1()); }
(rule__Case__WhenExpressionAssignment_1)
{ after(grammarAccess.getCaseAccess().getWhenExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Case__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case__Group__2__Impl
	rule__Case__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getThenKeyword_2()); }

	'then' 

{ after(grammarAccess.getCaseAccess().getThenKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Case__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getThenExpressionAssignment_3()); }
(rule__Case__ThenExpressionAssignment_3)
{ after(grammarAccess.getCaseAccess().getThenExpressionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Statment__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statment__Group_0__0__Impl
	rule__Statment__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statment__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatmentAccess().getCreateTableStatementAction_0_0()); }
(

)
{ after(grammarAccess.getStatmentAccess().getCreateTableStatementAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statment__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statment__Group_0__1__Impl
	rule__Statment__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statment__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatmentAccess().getCreateKeyword_0_1()); }

	'create' 

{ after(grammarAccess.getStatmentAccess().getCreateKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statment__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statment__Group_0__2__Impl
	rule__Statment__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statment__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatmentAccess().getTableKeyword_0_2()); }

	'table' 

{ after(grammarAccess.getStatmentAccess().getTableKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statment__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statment__Group_0__3__Impl
	rule__Statment__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Statment__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatmentAccess().getNameAssignment_0_3()); }
(rule__Statment__NameAssignment_0_3)
{ after(grammarAccess.getStatmentAccess().getNameAssignment_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statment__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statment__Group_0__4__Impl
	rule__Statment__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Statment__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatmentAccess().getLeftParenthesisKeyword_0_4()); }

	'(' 

{ after(grammarAccess.getStatmentAccess().getLeftParenthesisKeyword_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statment__Group_0__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statment__Group_0__5__Impl
	rule__Statment__Group_0__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Statment__Group_0__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatmentAccess().getColumnDefsAssignment_0_5()); }
(rule__Statment__ColumnDefsAssignment_0_5)
{ after(grammarAccess.getStatmentAccess().getColumnDefsAssignment_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statment__Group_0__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statment__Group_0__6__Impl
	rule__Statment__Group_0__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Statment__Group_0__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatmentAccess().getGroup_0_6()); }
(rule__Statment__Group_0_6__0)*
{ after(grammarAccess.getStatmentAccess().getGroup_0_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statment__Group_0__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statment__Group_0__7__Impl
	rule__Statment__Group_0__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Statment__Group_0__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatmentAccess().getGroup_0_7()); }
(rule__Statment__Group_0_7__0)*
{ after(grammarAccess.getStatmentAccess().getGroup_0_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statment__Group_0__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statment__Group_0__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statment__Group_0__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatmentAccess().getRightParenthesisKeyword_0_8()); }

	')' 

{ after(grammarAccess.getStatmentAccess().getRightParenthesisKeyword_0_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__Statment__Group_0_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statment__Group_0_6__0__Impl
	rule__Statment__Group_0_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statment__Group_0_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatmentAccess().getCommaKeyword_0_6_0()); }

	',' 

{ after(grammarAccess.getStatmentAccess().getCommaKeyword_0_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statment__Group_0_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statment__Group_0_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statment__Group_0_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatmentAccess().getColumnDefsAssignment_0_6_1()); }
(rule__Statment__ColumnDefsAssignment_0_6_1)
{ after(grammarAccess.getStatmentAccess().getColumnDefsAssignment_0_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statment__Group_0_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statment__Group_0_7__0__Impl
	rule__Statment__Group_0_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statment__Group_0_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatmentAccess().getCommaKeyword_0_7_0()); }

	',' 

{ after(grammarAccess.getStatmentAccess().getCommaKeyword_0_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statment__Group_0_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statment__Group_0_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statment__Group_0_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatmentAccess().getConstraintsAssignment_0_7_1()); }
(rule__Statment__ConstraintsAssignment_0_7_1)
{ after(grammarAccess.getStatmentAccess().getConstraintsAssignment_0_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statment__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statment__Group_1__0__Impl
	rule__Statment__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statment__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatmentAccess().getAlterTableStatementAction_1_0()); }
(

)
{ after(grammarAccess.getStatmentAccess().getAlterTableStatementAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statment__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statment__Group_1__1__Impl
	rule__Statment__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statment__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatmentAccess().getAlterKeyword_1_1()); }

	'alter' 

{ after(grammarAccess.getStatmentAccess().getAlterKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statment__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statment__Group_1__2__Impl
	rule__Statment__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statment__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatmentAccess().getTableKeyword_1_2()); }

	'table' 

{ after(grammarAccess.getStatmentAccess().getTableKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statment__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statment__Group_1__3__Impl
	rule__Statment__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Statment__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatmentAccess().getNameAssignment_1_3()); }
(rule__Statment__NameAssignment_1_3)
{ after(grammarAccess.getStatmentAccess().getNameAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statment__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statment__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statment__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatmentAccess().getClauseAssignment_1_4()); }
(rule__Statment__ClauseAssignment_1_4)
{ after(grammarAccess.getStatmentAccess().getClauseAssignment_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Statment__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statment__Group_2__0__Impl
	rule__Statment__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statment__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatmentAccess().getCreateViewStatementAction_2_0()); }
(

)
{ after(grammarAccess.getStatmentAccess().getCreateViewStatementAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statment__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statment__Group_2__1__Impl
	rule__Statment__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statment__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatmentAccess().getCreateKeyword_2_1()); }

	'create' 

{ after(grammarAccess.getStatmentAccess().getCreateKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statment__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statment__Group_2__2__Impl
	rule__Statment__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statment__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatmentAccess().getViewKeyword_2_2()); }

	'view' 

{ after(grammarAccess.getStatmentAccess().getViewKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statment__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statment__Group_2__3__Impl
	rule__Statment__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Statment__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatmentAccess().getNameAssignment_2_3()); }
(rule__Statment__NameAssignment_2_3)
{ after(grammarAccess.getStatmentAccess().getNameAssignment_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statment__Group_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statment__Group_2__4__Impl
	rule__Statment__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Statment__Group_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatmentAccess().getAsKeyword_2_4()); }

	'as' 

{ after(grammarAccess.getStatmentAccess().getAsKeyword_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statment__Group_2__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statment__Group_2__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statment__Group_2__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatmentAccess().getSelectStatementAssignment_2_5()); }
(rule__Statment__SelectStatementAssignment_2_5)
{ after(grammarAccess.getStatmentAccess().getSelectStatementAssignment_2_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Statment__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statment__Group_3__0__Impl
	rule__Statment__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statment__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatmentAccess().getDropTableStatementAction_3_0()); }
(

)
{ after(grammarAccess.getStatmentAccess().getDropTableStatementAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statment__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statment__Group_3__1__Impl
	rule__Statment__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statment__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatmentAccess().getDropKeyword_3_1()); }

	'drop' 

{ after(grammarAccess.getStatmentAccess().getDropKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statment__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statment__Group_3__2__Impl
	rule__Statment__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statment__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatmentAccess().getTableKeyword_3_2()); }

	'table' 

{ after(grammarAccess.getStatmentAccess().getTableKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statment__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statment__Group_3__3__Impl
	rule__Statment__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Statment__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatmentAccess().getGroup_3_3()); }
(rule__Statment__Group_3_3__0)?
{ after(grammarAccess.getStatmentAccess().getGroup_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statment__Group_3__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statment__Group_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statment__Group_3__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatmentAccess().getNameAssignment_3_4()); }
(rule__Statment__NameAssignment_3_4)
{ after(grammarAccess.getStatmentAccess().getNameAssignment_3_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Statment__Group_3_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statment__Group_3_3__0__Impl
	rule__Statment__Group_3_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statment__Group_3_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatmentAccess().getIfKeyword_3_3_0()); }

	'if' 

{ after(grammarAccess.getStatmentAccess().getIfKeyword_3_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statment__Group_3_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statment__Group_3_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statment__Group_3_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatmentAccess().getExistsKeyword_3_3_1()); }

	'exists' 

{ after(grammarAccess.getStatmentAccess().getExistsKeyword_3_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statment__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statment__Group_4__0__Impl
	rule__Statment__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statment__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatmentAccess().getDropViewStatementAction_4_0()); }
(

)
{ after(grammarAccess.getStatmentAccess().getDropViewStatementAction_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statment__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statment__Group_4__1__Impl
	rule__Statment__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statment__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatmentAccess().getDropKeyword_4_1()); }

	'drop' 

{ after(grammarAccess.getStatmentAccess().getDropKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statment__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statment__Group_4__2__Impl
	rule__Statment__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statment__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatmentAccess().getViewKeyword_4_2()); }

	'view' 

{ after(grammarAccess.getStatmentAccess().getViewKeyword_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statment__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statment__Group_4__3__Impl
	rule__Statment__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Statment__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatmentAccess().getGroup_4_3()); }
(rule__Statment__Group_4_3__0)?
{ after(grammarAccess.getStatmentAccess().getGroup_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statment__Group_4__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statment__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statment__Group_4__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatmentAccess().getNameAssignment_4_4()); }
(rule__Statment__NameAssignment_4_4)
{ after(grammarAccess.getStatmentAccess().getNameAssignment_4_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Statment__Group_4_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statment__Group_4_3__0__Impl
	rule__Statment__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statment__Group_4_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatmentAccess().getIfKeyword_4_3_0()); }

	'if' 

{ after(grammarAccess.getStatmentAccess().getIfKeyword_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statment__Group_4_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statment__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statment__Group_4_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatmentAccess().getExistsKeyword_4_3_1()); }

	'exists' 

{ after(grammarAccess.getStatmentAccess().getExistsKeyword_4_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AlterTableClause__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AlterTableClause__Group_0__0__Impl
	rule__AlterTableClause__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AlterTableClause__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlterTableClauseAccess().getAlterTableRenameClauseAction_0_0()); }
(

)
{ after(grammarAccess.getAlterTableClauseAccess().getAlterTableRenameClauseAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AlterTableClause__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AlterTableClause__Group_0__1__Impl
	rule__AlterTableClause__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AlterTableClause__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlterTableClauseAccess().getRenameToKeyword_0_1()); }

	'rename to' 

{ after(grammarAccess.getAlterTableClauseAccess().getRenameToKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AlterTableClause__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AlterTableClause__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AlterTableClause__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlterTableClauseAccess().getNameAssignment_0_2()); }
(rule__AlterTableClause__NameAssignment_0_2)
{ after(grammarAccess.getAlterTableClauseAccess().getNameAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AlterTableClause__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AlterTableClause__Group_1__0__Impl
	rule__AlterTableClause__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AlterTableClause__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlterTableClauseAccess().getAlterTableAddColumnClauseAction_1_0()); }
(

)
{ after(grammarAccess.getAlterTableClauseAccess().getAlterTableAddColumnClauseAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AlterTableClause__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AlterTableClause__Group_1__1__Impl
	rule__AlterTableClause__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AlterTableClause__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlterTableClauseAccess().getAddColumnKeyword_1_1()); }

	'add column' 

{ after(grammarAccess.getAlterTableClauseAccess().getAddColumnKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AlterTableClause__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AlterTableClause__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AlterTableClause__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlterTableClauseAccess().getColumnDefAssignment_1_2()); }
(rule__AlterTableClause__ColumnDefAssignment_1_2)
{ after(grammarAccess.getAlterTableClauseAccess().getColumnDefAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ColumnDef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ColumnDef__Group__0__Impl
	rule__ColumnDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnDef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColumnDefAccess().getNameAssignment_0()); }
(rule__ColumnDef__NameAssignment_0)
{ after(grammarAccess.getColumnDefAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ColumnDef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ColumnDef__Group__1__Impl
	rule__ColumnDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnDef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColumnDefAccess().getTypeAssignment_1()); }
(rule__ColumnDef__TypeAssignment_1)
{ after(grammarAccess.getColumnDefAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ColumnDef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ColumnDef__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnDef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColumnDefAccess().getConstraintsAssignment_2()); }
(rule__ColumnDef__ConstraintsAssignment_2)*
{ after(grammarAccess.getColumnDefAccess().getConstraintsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ColumnConstraint__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ColumnConstraint__Group_0__0__Impl
	rule__ColumnConstraint__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnConstraint__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColumnConstraintAccess().getPrimaryKeyColumnConstraintAction_0_0()); }
(

)
{ after(grammarAccess.getColumnConstraintAccess().getPrimaryKeyColumnConstraintAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ColumnConstraint__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ColumnConstraint__Group_0__1__Impl
	rule__ColumnConstraint__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnConstraint__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColumnConstraintAccess().getPrimaryKeyword_0_1()); }

	'primary' 

{ after(grammarAccess.getColumnConstraintAccess().getPrimaryKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ColumnConstraint__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ColumnConstraint__Group_0__2__Impl
	rule__ColumnConstraint__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnConstraint__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColumnConstraintAccess().getKeyKeyword_0_2()); }

	'key' 

{ after(grammarAccess.getColumnConstraintAccess().getKeyKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ColumnConstraint__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ColumnConstraint__Group_0__3__Impl
	rule__ColumnConstraint__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnConstraint__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColumnConstraintAccess().getAlternatives_0_3()); }
(rule__ColumnConstraint__Alternatives_0_3)?
{ after(grammarAccess.getColumnConstraintAccess().getAlternatives_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ColumnConstraint__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ColumnConstraint__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnConstraint__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColumnConstraintAccess().getAutoincrementAssignment_0_4()); }
(rule__ColumnConstraint__AutoincrementAssignment_0_4)?
{ after(grammarAccess.getColumnConstraintAccess().getAutoincrementAssignment_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ColumnConstraint__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ColumnConstraint__Group_1__0__Impl
	rule__ColumnConstraint__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnConstraint__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColumnConstraintAccess().getNotNullConstraintAction_1_0()); }
(

)
{ after(grammarAccess.getColumnConstraintAccess().getNotNullConstraintAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ColumnConstraint__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ColumnConstraint__Group_1__1__Impl
	rule__ColumnConstraint__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnConstraint__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColumnConstraintAccess().getNotKeyword_1_1()); }

	'not' 

{ after(grammarAccess.getColumnConstraintAccess().getNotKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ColumnConstraint__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ColumnConstraint__Group_1__2__Impl
	rule__ColumnConstraint__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnConstraint__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColumnConstraintAccess().getNullKeyword_1_2()); }

	'null' 

{ after(grammarAccess.getColumnConstraintAccess().getNullKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ColumnConstraint__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ColumnConstraint__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnConstraint__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColumnConstraintAccess().getConflictClauseAssignment_1_3()); }
(rule__ColumnConstraint__ConflictClauseAssignment_1_3)?
{ after(grammarAccess.getColumnConstraintAccess().getConflictClauseAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ColumnConstraint__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ColumnConstraint__Group_2__0__Impl
	rule__ColumnConstraint__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnConstraint__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColumnConstraintAccess().getDefaultConstraintAction_2_0()); }
(

)
{ after(grammarAccess.getColumnConstraintAccess().getDefaultConstraintAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ColumnConstraint__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ColumnConstraint__Group_2__1__Impl
	rule__ColumnConstraint__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnConstraint__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColumnConstraintAccess().getDefaultKeyword_2_1()); }

	'default' 

{ after(grammarAccess.getColumnConstraintAccess().getDefaultKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ColumnConstraint__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ColumnConstraint__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnConstraint__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColumnConstraintAccess().getDefaultValueAssignment_2_2()); }
(rule__ColumnConstraint__DefaultValueAssignment_2_2)
{ after(grammarAccess.getColumnConstraintAccess().getDefaultValueAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DefaultValue__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefaultValue__Group_0__0__Impl
	rule__DefaultValue__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultValue__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultValueAccess().getLiteralDefaultValueAction_0_0()); }
(

)
{ after(grammarAccess.getDefaultValueAccess().getLiteralDefaultValueAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefaultValue__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefaultValue__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultValue__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultValueAccess().getLiteralAssignment_0_1()); }
(rule__DefaultValue__LiteralAssignment_0_1)
{ after(grammarAccess.getDefaultValueAccess().getLiteralAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DefaultValue__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefaultValue__Group_1__0__Impl
	rule__DefaultValue__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultValue__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultValueAccess().getExpressionDefaultValueAction_1_0()); }
(

)
{ after(grammarAccess.getDefaultValueAccess().getExpressionDefaultValueAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefaultValue__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefaultValue__Group_1__1__Impl
	rule__DefaultValue__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultValue__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultValueAccess().getLeftParenthesisKeyword_1_1()); }

	'(' 

{ after(grammarAccess.getDefaultValueAccess().getLeftParenthesisKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefaultValue__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefaultValue__Group_1__2__Impl
	rule__DefaultValue__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultValue__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultValueAccess().getExpressionAssignment_1_2()); }
(rule__DefaultValue__ExpressionAssignment_1_2)
{ after(grammarAccess.getDefaultValueAccess().getExpressionAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefaultValue__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefaultValue__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultValue__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultValueAccess().getRightParenthesisKeyword_1_3()); }

	')' 

{ after(grammarAccess.getDefaultValueAccess().getRightParenthesisKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TableConstraint__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_0__0__Impl
	rule__TableConstraint__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getUniqueTableContraintAction_0_0()); }
(

)
{ after(grammarAccess.getTableConstraintAccess().getUniqueTableContraintAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableConstraint__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_0__1__Impl
	rule__TableConstraint__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getGroup_0_1()); }
(rule__TableConstraint__Group_0_1__0)?
{ after(grammarAccess.getTableConstraintAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableConstraint__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_0__2__Impl
	rule__TableConstraint__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getUniqueKeyword_0_2()); }

	'unique' 

{ after(grammarAccess.getTableConstraintAccess().getUniqueKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableConstraint__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_0__3__Impl
	rule__TableConstraint__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getLeftParenthesisKeyword_0_3()); }

	'(' 

{ after(grammarAccess.getTableConstraintAccess().getLeftParenthesisKeyword_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableConstraint__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_0__4__Impl
	rule__TableConstraint__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getColumnsAssignment_0_4()); }
(rule__TableConstraint__ColumnsAssignment_0_4)
{ after(grammarAccess.getTableConstraintAccess().getColumnsAssignment_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableConstraint__Group_0__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_0__5__Impl
	rule__TableConstraint__Group_0__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_0__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getGroup_0_5()); }
(rule__TableConstraint__Group_0_5__0)*
{ after(grammarAccess.getTableConstraintAccess().getGroup_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableConstraint__Group_0__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_0__6__Impl
	rule__TableConstraint__Group_0__7
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_0__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getRightParenthesisKeyword_0_6()); }

	')' 

{ after(grammarAccess.getTableConstraintAccess().getRightParenthesisKeyword_0_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableConstraint__Group_0__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_0__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_0__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getConflictClauseAssignment_0_7()); }
(rule__TableConstraint__ConflictClauseAssignment_0_7)
{ after(grammarAccess.getTableConstraintAccess().getConflictClauseAssignment_0_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__TableConstraint__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_0_1__0__Impl
	rule__TableConstraint__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getConstraintKeyword_0_1_0()); }

	'constraint' 

{ after(grammarAccess.getTableConstraintAccess().getConstraintKeyword_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableConstraint__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getNameAssignment_0_1_1()); }
(rule__TableConstraint__NameAssignment_0_1_1)
{ after(grammarAccess.getTableConstraintAccess().getNameAssignment_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TableConstraint__Group_0_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_0_5__0__Impl
	rule__TableConstraint__Group_0_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_0_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getCommaKeyword_0_5_0()); }

	',' 

{ after(grammarAccess.getTableConstraintAccess().getCommaKeyword_0_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableConstraint__Group_0_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_0_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_0_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getColumnsAssignment_0_5_1()); }
(rule__TableConstraint__ColumnsAssignment_0_5_1)
{ after(grammarAccess.getTableConstraintAccess().getColumnsAssignment_0_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TableConstraint__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_1__0__Impl
	rule__TableConstraint__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getPrimaryContraintAction_1_0()); }
(

)
{ after(grammarAccess.getTableConstraintAccess().getPrimaryContraintAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableConstraint__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_1__1__Impl
	rule__TableConstraint__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getGroup_1_1()); }
(rule__TableConstraint__Group_1_1__0)?
{ after(grammarAccess.getTableConstraintAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableConstraint__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_1__2__Impl
	rule__TableConstraint__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getPrimaryKeyword_1_2()); }

	'primary' 

{ after(grammarAccess.getTableConstraintAccess().getPrimaryKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableConstraint__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_1__3__Impl
	rule__TableConstraint__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getKeyKeyword_1_3()); }

	'key' 

{ after(grammarAccess.getTableConstraintAccess().getKeyKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableConstraint__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_1__4__Impl
	rule__TableConstraint__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getLeftParenthesisKeyword_1_4()); }

	'(' 

{ after(grammarAccess.getTableConstraintAccess().getLeftParenthesisKeyword_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableConstraint__Group_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_1__5__Impl
	rule__TableConstraint__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getColumnsAssignment_1_5()); }
(rule__TableConstraint__ColumnsAssignment_1_5)
{ after(grammarAccess.getTableConstraintAccess().getColumnsAssignment_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableConstraint__Group_1__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_1__6__Impl
	rule__TableConstraint__Group_1__7
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_1__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getGroup_1_6()); }
(rule__TableConstraint__Group_1_6__0)*
{ after(grammarAccess.getTableConstraintAccess().getGroup_1_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableConstraint__Group_1__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_1__7__Impl
	rule__TableConstraint__Group_1__8
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_1__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getRightParenthesisKeyword_1_7()); }

	')' 

{ after(grammarAccess.getTableConstraintAccess().getRightParenthesisKeyword_1_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableConstraint__Group_1__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_1__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_1__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getConflictClauseAssignment_1_8()); }
(rule__TableConstraint__ConflictClauseAssignment_1_8)
{ after(grammarAccess.getTableConstraintAccess().getConflictClauseAssignment_1_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__TableConstraint__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_1_1__0__Impl
	rule__TableConstraint__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getConstraintKeyword_1_1_0()); }

	'constraint' 

{ after(grammarAccess.getTableConstraintAccess().getConstraintKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableConstraint__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getNameAssignment_1_1_1()); }
(rule__TableConstraint__NameAssignment_1_1_1)
{ after(grammarAccess.getTableConstraintAccess().getNameAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TableConstraint__Group_1_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_1_6__0__Impl
	rule__TableConstraint__Group_1_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_1_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getCommaKeyword_1_6_0()); }

	',' 

{ after(grammarAccess.getTableConstraintAccess().getCommaKeyword_1_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableConstraint__Group_1_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_1_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_1_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getColumnsAssignment_1_6_1()); }
(rule__TableConstraint__ColumnsAssignment_1_6_1)
{ after(grammarAccess.getTableConstraintAccess().getColumnsAssignment_1_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TableConstraint__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_2__0__Impl
	rule__TableConstraint__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getCheckTableConstraintAction_2_0()); }
(

)
{ after(grammarAccess.getTableConstraintAccess().getCheckTableConstraintAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableConstraint__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_2__1__Impl
	rule__TableConstraint__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getGroup_2_1()); }
(rule__TableConstraint__Group_2_1__0)?
{ after(grammarAccess.getTableConstraintAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableConstraint__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_2__2__Impl
	rule__TableConstraint__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getCheckKeyword_2_2()); }

	'check' 

{ after(grammarAccess.getTableConstraintAccess().getCheckKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableConstraint__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_2__3__Impl
	rule__TableConstraint__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getLeftParenthesisKeyword_2_3()); }

	'(' 

{ after(grammarAccess.getTableConstraintAccess().getLeftParenthesisKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableConstraint__Group_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_2__4__Impl
	rule__TableConstraint__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getExpressionAssignment_2_4()); }
(rule__TableConstraint__ExpressionAssignment_2_4)
{ after(grammarAccess.getTableConstraintAccess().getExpressionAssignment_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableConstraint__Group_2__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_2__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_2__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getRightParenthesisKeyword_2_5()); }

	')' 

{ after(grammarAccess.getTableConstraintAccess().getRightParenthesisKeyword_2_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__TableConstraint__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_2_1__0__Impl
	rule__TableConstraint__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getConstraintKeyword_2_1_0()); }

	'constraint' 

{ after(grammarAccess.getTableConstraintAccess().getConstraintKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableConstraint__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableConstraint__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getNameAssignment_2_1_1()); }
(rule__TableConstraint__NameAssignment_2_1_1)
{ after(grammarAccess.getTableConstraintAccess().getNameAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IndexedColumn__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IndexedColumn__Group__0__Impl
	rule__IndexedColumn__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexedColumn__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexedColumnAccess().getNameAssignment_0()); }
(rule__IndexedColumn__NameAssignment_0)
{ after(grammarAccess.getIndexedColumnAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IndexedColumn__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IndexedColumn__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexedColumn__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexedColumnAccess().getAlternatives_1()); }
(rule__IndexedColumn__Alternatives_1)?
{ after(grammarAccess.getIndexedColumnAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SelectStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectStatement__Group__0__Impl
	rule__SelectStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectStatementAccess().getCoreStatementsAssignment_0()); }
(rule__SelectStatement__CoreStatementsAssignment_0)
{ after(grammarAccess.getSelectStatementAccess().getCoreStatementsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectStatement__Group__1__Impl
	rule__SelectStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectStatementAccess().getGroup_1()); }
(rule__SelectStatement__Group_1__0)*
{ after(grammarAccess.getSelectStatementAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectStatementAccess().getGroup_2()); }
(rule__SelectStatement__Group_2__0)?
{ after(grammarAccess.getSelectStatementAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SelectStatement__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectStatement__Group_1__0__Impl
	rule__SelectStatement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectStatementAccess().getCompoundOperatorParserRuleCall_1_0()); }
	ruleCompoundOperator
{ after(grammarAccess.getSelectStatementAccess().getCompoundOperatorParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectStatement__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectStatement__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectStatementAccess().getCoreStatementsAssignment_1_1()); }
(rule__SelectStatement__CoreStatementsAssignment_1_1)
{ after(grammarAccess.getSelectStatementAccess().getCoreStatementsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SelectStatement__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectStatement__Group_2__0__Impl
	rule__SelectStatement__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectStatementAccess().getOrderKeyword_2_0()); }

	'order' 

{ after(grammarAccess.getSelectStatementAccess().getOrderKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectStatement__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectStatement__Group_2__1__Impl
	rule__SelectStatement__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectStatementAccess().getByKeyword_2_1()); }

	'by' 

{ after(grammarAccess.getSelectStatementAccess().getByKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectStatement__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectStatement__Group_2__2__Impl
	rule__SelectStatement__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectStatementAccess().getOrderingTermsAssignment_2_2()); }
(rule__SelectStatement__OrderingTermsAssignment_2_2)
{ after(grammarAccess.getSelectStatementAccess().getOrderingTermsAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectStatement__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectStatement__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectStatementAccess().getGroup_2_3()); }
(rule__SelectStatement__Group_2_3__0)*
{ after(grammarAccess.getSelectStatementAccess().getGroup_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SelectStatement__Group_2_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectStatement__Group_2_3__0__Impl
	rule__SelectStatement__Group_2_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group_2_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectStatementAccess().getCommaKeyword_2_3_0()); }

	',' 

{ after(grammarAccess.getSelectStatementAccess().getCommaKeyword_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectStatement__Group_2_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectStatement__Group_2_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group_2_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectStatementAccess().getOrderingTermsAssignment_2_3_1()); }
(rule__SelectStatement__OrderingTermsAssignment_2_3_1)
{ after(grammarAccess.getSelectStatementAccess().getOrderingTermsAssignment_2_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrderingTerm__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrderingTerm__Group__0__Impl
	rule__OrderingTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderingTerm__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrderingTermAccess().getExpressionAssignment_0()); }
(rule__OrderingTerm__ExpressionAssignment_0)
{ after(grammarAccess.getOrderingTermAccess().getExpressionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrderingTerm__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrderingTerm__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrderingTerm__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrderingTermAccess().getAlternatives_1()); }
(rule__OrderingTerm__Alternatives_1)?
{ after(grammarAccess.getOrderingTermAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SelectCore__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectCore__Group__0__Impl
	rule__SelectCore__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCore__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreAccess().getSelectKeyword_0()); }

	'select' 

{ after(grammarAccess.getSelectCoreAccess().getSelectKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectCore__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectCore__Group__1__Impl
	rule__SelectCore__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCore__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreAccess().getAlternatives_1()); }
(rule__SelectCore__Alternatives_1)?
{ after(grammarAccess.getSelectCoreAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectCore__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectCore__Group__2__Impl
	rule__SelectCore__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCore__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreAccess().getResultColumnsAssignment_2()); }
(rule__SelectCore__ResultColumnsAssignment_2)
{ after(grammarAccess.getSelectCoreAccess().getResultColumnsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectCore__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectCore__Group__3__Impl
	rule__SelectCore__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCore__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreAccess().getGroup_3()); }
(rule__SelectCore__Group_3__0)*
{ after(grammarAccess.getSelectCoreAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectCore__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectCore__Group__4__Impl
	rule__SelectCore__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCore__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreAccess().getGroup_4()); }
(rule__SelectCore__Group_4__0)?
{ after(grammarAccess.getSelectCoreAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectCore__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectCore__Group__5__Impl
	rule__SelectCore__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCore__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreAccess().getGroup_5()); }
(rule__SelectCore__Group_5__0)?
{ after(grammarAccess.getSelectCoreAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectCore__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectCore__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCore__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreAccess().getGroup_6()); }
(rule__SelectCore__Group_6__0)?
{ after(grammarAccess.getSelectCoreAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__SelectCore__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectCore__Group_3__0__Impl
	rule__SelectCore__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCore__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getSelectCoreAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectCore__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectCore__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCore__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreAccess().getResultColumnsAssignment_3_1()); }
(rule__SelectCore__ResultColumnsAssignment_3_1)
{ after(grammarAccess.getSelectCoreAccess().getResultColumnsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SelectCore__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectCore__Group_4__0__Impl
	rule__SelectCore__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCore__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreAccess().getFromKeyword_4_0()); }

	'from' 

{ after(grammarAccess.getSelectCoreAccess().getFromKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectCore__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectCore__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCore__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreAccess().getSourceAssignment_4_1()); }
(rule__SelectCore__SourceAssignment_4_1)
{ after(grammarAccess.getSelectCoreAccess().getSourceAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SelectCore__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectCore__Group_5__0__Impl
	rule__SelectCore__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCore__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreAccess().getWhereKeyword_5_0()); }

	'where' 

{ after(grammarAccess.getSelectCoreAccess().getWhereKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectCore__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectCore__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCore__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreAccess().getWhereExpressionAssignment_5_1()); }
(rule__SelectCore__WhereExpressionAssignment_5_1)
{ after(grammarAccess.getSelectCoreAccess().getWhereExpressionAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SelectCore__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectCore__Group_6__0__Impl
	rule__SelectCore__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCore__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreAccess().getGroupKeyword_6_0()); }

	'group' 

{ after(grammarAccess.getSelectCoreAccess().getGroupKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectCore__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectCore__Group_6__1__Impl
	rule__SelectCore__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCore__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreAccess().getByKeyword_6_1()); }

	'by' 

{ after(grammarAccess.getSelectCoreAccess().getByKeyword_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectCore__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectCore__Group_6__2__Impl
	rule__SelectCore__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCore__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreAccess().getGroupByExpressionsAssignment_6_2()); }
(rule__SelectCore__GroupByExpressionsAssignment_6_2)
{ after(grammarAccess.getSelectCoreAccess().getGroupByExpressionsAssignment_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectCore__Group_6__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectCore__Group_6__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCore__Group_6__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreAccess().getGroup_6_3()); }
(rule__SelectCore__Group_6_3__0)*
{ after(grammarAccess.getSelectCoreAccess().getGroup_6_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SelectCore__Group_6_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectCore__Group_6_3__0__Impl
	rule__SelectCore__Group_6_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCore__Group_6_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreAccess().getCommaKeyword_6_3_0()); }

	',' 

{ after(grammarAccess.getSelectCoreAccess().getCommaKeyword_6_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectCore__Group_6_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectCore__Group_6_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCore__Group_6_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreAccess().getGroupByExpressionsAssignment_6_3_1()); }
(rule__SelectCore__GroupByExpressionsAssignment_6_3_1)
{ after(grammarAccess.getSelectCoreAccess().getGroupByExpressionsAssignment_6_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JoinSource__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JoinSource__Group__0__Impl
	rule__JoinSource__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinSource__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinSourceAccess().getSourceAssignment_0()); }
(rule__JoinSource__SourceAssignment_0)
{ after(grammarAccess.getJoinSourceAccess().getSourceAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JoinSource__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JoinSource__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinSource__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinSourceAccess().getJoinStatementsAssignment_1()); }
(rule__JoinSource__JoinStatementsAssignment_1)*
{ after(grammarAccess.getJoinSourceAccess().getJoinStatementsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SingleSource__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleSource__Group_0__0__Impl
	rule__SingleSource__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleSource__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleSourceAccess().getSingleSourceTableAction_0_0()); }
(

)
{ after(grammarAccess.getSingleSourceAccess().getSingleSourceTableAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleSource__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleSource__Group_0__1__Impl
	rule__SingleSource__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleSource__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleSourceAccess().getTableNameAssignment_0_1()); }
(rule__SingleSource__TableNameAssignment_0_1)
{ after(grammarAccess.getSingleSourceAccess().getTableNameAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleSource__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleSource__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleSource__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleSourceAccess().getGroup_0_2()); }
(rule__SingleSource__Group_0_2__0)?
{ after(grammarAccess.getSingleSourceAccess().getGroup_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SingleSource__Group_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleSource__Group_0_2__0__Impl
	rule__SingleSource__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleSource__Group_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleSourceAccess().getAsKeyword_0_2_0()); }

	'as' 

{ after(grammarAccess.getSingleSourceAccess().getAsKeyword_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleSource__Group_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleSource__Group_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleSource__Group_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleSourceAccess().getNameAssignment_0_2_1()); }
(rule__SingleSource__NameAssignment_0_2_1)
{ after(grammarAccess.getSingleSourceAccess().getNameAssignment_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SingleSource__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleSource__Group_1__0__Impl
	rule__SingleSource__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleSource__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleSourceAccess().getSingleSourceSelectStatementAction_1_0()); }
(

)
{ after(grammarAccess.getSingleSourceAccess().getSingleSourceSelectStatementAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleSource__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleSource__Group_1__1__Impl
	rule__SingleSource__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleSource__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleSourceAccess().getLeftParenthesisKeyword_1_1()); }

	'(' 

{ after(grammarAccess.getSingleSourceAccess().getLeftParenthesisKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleSource__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleSource__Group_1__2__Impl
	rule__SingleSource__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleSource__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleSourceAccess().getSelectStatementAssignment_1_2()); }
(rule__SingleSource__SelectStatementAssignment_1_2)
{ after(grammarAccess.getSingleSourceAccess().getSelectStatementAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleSource__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleSource__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleSource__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleSourceAccess().getRightParenthesisKeyword_1_3()); }

	')' 

{ after(grammarAccess.getSingleSourceAccess().getRightParenthesisKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SingleSource__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleSource__Group_2__0__Impl
	rule__SingleSource__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleSource__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleSourceAccess().getSingleSourceJoinAction_2_0()); }
(

)
{ after(grammarAccess.getSingleSourceAccess().getSingleSourceJoinAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleSource__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleSource__Group_2__1__Impl
	rule__SingleSource__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleSource__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleSourceAccess().getLeftParenthesisKeyword_2_1()); }

	'(' 

{ after(grammarAccess.getSingleSourceAccess().getLeftParenthesisKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleSource__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleSource__Group_2__2__Impl
	rule__SingleSource__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleSource__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleSourceAccess().getJoinSourceAssignment_2_2()); }
(rule__SingleSource__JoinSourceAssignment_2_2)
{ after(grammarAccess.getSingleSourceAccess().getJoinSourceAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleSource__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleSource__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleSource__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleSourceAccess().getRightParenthesisKeyword_2_3()); }

	')' 

{ after(grammarAccess.getSingleSourceAccess().getRightParenthesisKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__JoinStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JoinStatement__Group__0__Impl
	rule__JoinStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinStatementAccess().getJoinStatementAction_0()); }
(

)
{ after(grammarAccess.getJoinStatementAccess().getJoinStatementAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JoinStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JoinStatement__Group__1__Impl
	rule__JoinStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinStatementAccess().getNaturalAssignment_1()); }
(rule__JoinStatement__NaturalAssignment_1)?
{ after(grammarAccess.getJoinStatementAccess().getNaturalAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JoinStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JoinStatement__Group__2__Impl
	rule__JoinStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinStatementAccess().getAlternatives_2()); }
(rule__JoinStatement__Alternatives_2)?
{ after(grammarAccess.getJoinStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JoinStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JoinStatement__Group__3__Impl
	rule__JoinStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinStatementAccess().getJoinKeyword_3()); }

	'join' 

{ after(grammarAccess.getJoinStatementAccess().getJoinKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JoinStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JoinStatement__Group__4__Impl
	rule__JoinStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinStatementAccess().getSingleSourceAssignment_4()); }
(rule__JoinStatement__SingleSourceAssignment_4)
{ after(grammarAccess.getJoinStatementAccess().getSingleSourceAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JoinStatement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JoinStatement__Group__5__Impl
	rule__JoinStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStatement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinStatementAccess().getOnKeyword_5()); }

	'on' 

{ after(grammarAccess.getJoinStatementAccess().getOnKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JoinStatement__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JoinStatement__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStatement__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinStatementAccess().getExpressionAssignment_6()); }
(rule__JoinStatement__ExpressionAssignment_6)
{ after(grammarAccess.getJoinStatementAccess().getExpressionAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__JoinStatement__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JoinStatement__Group_2_0__0__Impl
	rule__JoinStatement__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStatement__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinStatementAccess().getLeftAssignment_2_0_0()); }
(rule__JoinStatement__LeftAssignment_2_0_0)
{ after(grammarAccess.getJoinStatementAccess().getLeftAssignment_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JoinStatement__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JoinStatement__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStatement__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinStatementAccess().getOuterAssignment_2_0_1()); }
(rule__JoinStatement__OuterAssignment_2_0_1)?
{ after(grammarAccess.getJoinStatementAccess().getOuterAssignment_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ResultColumn__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResultColumn__Group_0__0__Impl
	rule__ResultColumn__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultColumn__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResultColumnAccess().getResultColumnAllAction_0_0()); }
(

)
{ after(grammarAccess.getResultColumnAccess().getResultColumnAllAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResultColumn__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResultColumn__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultColumn__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResultColumnAccess().getAsteriskKeyword_0_1()); }

	'*' 

{ after(grammarAccess.getResultColumnAccess().getAsteriskKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ResultColumn__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResultColumn__Group_1__0__Impl
	rule__ResultColumn__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultColumn__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResultColumnAccess().getResultColumnAllWithTableRefAction_1_0()); }
(

)
{ after(grammarAccess.getResultColumnAccess().getResultColumnAllWithTableRefAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResultColumn__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResultColumn__Group_1__1__Impl
	rule__ResultColumn__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultColumn__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResultColumnAccess().getTableRefAssignment_1_1()); }
(rule__ResultColumn__TableRefAssignment_1_1)
{ after(grammarAccess.getResultColumnAccess().getTableRefAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResultColumn__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResultColumn__Group_1__2__Impl
	rule__ResultColumn__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultColumn__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResultColumnAccess().getFullStopKeyword_1_2()); }

	'.' 

{ after(grammarAccess.getResultColumnAccess().getFullStopKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResultColumn__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResultColumn__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultColumn__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResultColumnAccess().getAsteriskKeyword_1_3()); }

	'*' 

{ after(grammarAccess.getResultColumnAccess().getAsteriskKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ResultColumn__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResultColumn__Group_2__0__Impl
	rule__ResultColumn__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultColumn__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResultColumnAccess().getResultColumnExpressionAction_2_0()); }
(

)
{ after(grammarAccess.getResultColumnAccess().getResultColumnExpressionAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResultColumn__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResultColumn__Group_2__1__Impl
	rule__ResultColumn__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultColumn__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResultColumnAccess().getExpressionAssignment_2_1()); }
(rule__ResultColumn__ExpressionAssignment_2_1)
{ after(grammarAccess.getResultColumnAccess().getExpressionAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResultColumn__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResultColumn__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultColumn__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResultColumnAccess().getGroup_2_2()); }
(rule__ResultColumn__Group_2_2__0)?
{ after(grammarAccess.getResultColumnAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ResultColumn__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResultColumn__Group_2_2__0__Impl
	rule__ResultColumn__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultColumn__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResultColumnAccess().getAsKeyword_2_2_0()); }

	'as' 

{ after(grammarAccess.getResultColumnAccess().getAsKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResultColumn__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResultColumn__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultColumn__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResultColumnAccess().getNameAssignment_2_2_1()); }
(rule__ResultColumn__NameAssignment_2_2_1)
{ after(grammarAccess.getResultColumnAccess().getNameAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConflictClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConflictClause__Group__0__Impl
	rule__ConflictClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConflictClauseAccess().getOnKeyword_0()); }

	'on' 

{ after(grammarAccess.getConflictClauseAccess().getOnKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConflictClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConflictClause__Group__1__Impl
	rule__ConflictClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConflictClauseAccess().getConflictKeyword_1()); }

	'conflict' 

{ after(grammarAccess.getConflictClauseAccess().getConflictKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConflictClause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConflictClause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictClause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConflictClauseAccess().getResolutionAssignment_2()); }
(rule__ConflictClause__ResolutionAssignment_2)
{ after(grammarAccess.getConflictClauseAccess().getResolutionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LiteralValue__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralValue__Group_0__0__Impl
	rule__LiteralValue__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralValueAccess().getNumericLiteralAction_0_0()); }
(

)
{ after(grammarAccess.getLiteralValueAccess().getNumericLiteralAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralValue__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralValue__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralValueAccess().getNumberAssignment_0_1()); }
(rule__LiteralValue__NumberAssignment_0_1)
{ after(grammarAccess.getLiteralValueAccess().getNumberAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LiteralValue__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralValue__Group_1__0__Impl
	rule__LiteralValue__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralValueAccess().getStringLiteralAction_1_0()); }
(

)
{ after(grammarAccess.getLiteralValueAccess().getStringLiteralAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralValue__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralValue__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralValueAccess().getLiteralAssignment_1_1()); }
(rule__LiteralValue__LiteralAssignment_1_1)
{ after(grammarAccess.getLiteralValueAccess().getLiteralAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LiteralValue__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralValue__Group_2__0__Impl
	rule__LiteralValue__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralValueAccess().getNullLiteralAction_2_0()); }
(

)
{ after(grammarAccess.getLiteralValueAccess().getNullLiteralAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralValue__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralValue__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralValueAccess().getLiteralAssignment_2_1()); }
(rule__LiteralValue__LiteralAssignment_2_1)
{ after(grammarAccess.getLiteralValueAccess().getLiteralAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LiteralValue__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralValue__Group_3__0__Impl
	rule__LiteralValue__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralValueAccess().getCurrentTimeLiteralAction_3_0()); }
(

)
{ after(grammarAccess.getLiteralValueAccess().getCurrentTimeLiteralAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralValue__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralValue__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralValueAccess().getLiteralAssignment_3_1()); }
(rule__LiteralValue__LiteralAssignment_3_1)
{ after(grammarAccess.getLiteralValueAccess().getLiteralAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LiteralValue__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralValue__Group_4__0__Impl
	rule__LiteralValue__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralValueAccess().getCurrentDateLiteralAction_4_0()); }
(

)
{ after(grammarAccess.getLiteralValueAccess().getCurrentDateLiteralAction_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralValue__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralValue__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralValueAccess().getLiteralAssignment_4_1()); }
(rule__LiteralValue__LiteralAssignment_4_1)
{ after(grammarAccess.getLiteralValueAccess().getLiteralAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LiteralValue__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralValue__Group_5__0__Impl
	rule__LiteralValue__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralValueAccess().getCurrentTimeStampLiteralAction_5_0()); }
(

)
{ after(grammarAccess.getLiteralValueAccess().getCurrentTimeStampLiteralAction_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralValue__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralValue__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralValueAccess().getLiteralAssignment_5_1()); }
(rule__LiteralValue__LiteralAssignment_5_1)
{ after(grammarAccess.getLiteralValueAccess().getLiteralAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SignedNumber__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignedNumber__Group__0__Impl
	rule__SignedNumber__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedNumber__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignedNumberAccess().getHyphenMinusKeyword_0()); }
(
	'-' 
)?
{ after(grammarAccess.getSignedNumberAccess().getHyphenMinusKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignedNumber__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignedNumber__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedNumber__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignedNumberAccess().getNUMBERTerminalRuleCall_1()); }
	RULE_NUMBER
{ after(grammarAccess.getSignedNumberAccess().getNUMBERTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FQN__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQN__Group__0__Impl
	rule__FQN__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getFQNAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FQN__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQN__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNAccess().getGroup_1()); }
(rule__FQN__Group_1__0)*
{ after(grammarAccess.getFQNAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FQN__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQN__Group_1__0__Impl
	rule__FQN__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getFQNAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FQN__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQN__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Model__PackageNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getPackageNameFQNParserRuleCall_1_0()); }
	ruleFQN{ after(grammarAccess.getModelAccess().getPackageNameFQNParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__DatabaseAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getDatabaseDatabaseBlockParserRuleCall_2_0()); }
	ruleDatabaseBlock{ after(grammarAccess.getModelAccess().getDatabaseDatabaseBlockParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DatabaseBlock__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatabaseBlockAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getDatabaseBlockAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DatabaseBlock__ActionsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatabaseBlockAccess().getActionsActionBlockParserRuleCall_3_0()); }
	ruleActionBlock{ after(grammarAccess.getDatabaseBlockAccess().getActionsActionBlockParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DatabaseBlock__MigrationsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatabaseBlockAccess().getMigrationsMigrationBlockParserRuleCall_4_0()); }
	ruleMigrationBlock{ after(grammarAccess.getDatabaseBlockAccess().getMigrationsMigrationBlockParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActionBlock__ActionsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionBlockAccess().getActionsActionStatementParserRuleCall_3_0()); }
	ruleActionStatement{ after(grammarAccess.getActionBlockAccess().getActionsActionStatementParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActionStatement__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionStatementAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getActionStatementAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActionStatement__PathAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionStatementAccess().getPathSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getActionStatementAccess().getPathSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MigrationBlock__StatementsAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMigrationBlockAccess().getStatementsStatmentParserRuleCall_3_0_0()); }
	ruleStatment{ after(grammarAccess.getMigrationBlockAccess().getStatementsStatmentParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MigrationBlock__StatementsAssignment_3_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMigrationBlockAccess().getStatementsStatmentParserRuleCall_3_2_0_0()); }
	ruleStatment{ after(grammarAccess.getMigrationBlockAccess().getStatementsStatmentParserRuleCall_3_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SqlExpression__RootAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSqlExpressionAccess().getRootOrParserRuleCall_0()); }
	ruleOr{ after(grammarAccess.getSqlExpressionAccess().getRootOrParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Or__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAccess().getRightAndParserRuleCall_1_2_0()); }
	ruleAnd{ after(grammarAccess.getOrAccess().getRightAndParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__And__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAccess().getRightPrimaryComparisonParserRuleCall_1_2_0()); }
	rulePrimaryComparison{ after(grammarAccess.getAndAccess().getRightPrimaryComparisonParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryComparison__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryComparisonAccess().getOpSecondaryComparisonOpParserRuleCall_1_1_0()); }
	ruleSecondaryComparisonOp{ after(grammarAccess.getPrimaryComparisonAccess().getOpSecondaryComparisonOpParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryComparison__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryComparisonAccess().getRightSecondaryComparisonParserRuleCall_1_2_0()); }
	ruleSecondaryComparison{ after(grammarAccess.getPrimaryComparisonAccess().getRightSecondaryComparisonParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SecondaryComparison__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSecondaryComparisonAccess().getOpPrimaryComparisonOpParserRuleCall_1_1_0()); }
	rulePrimaryComparisonOp{ after(grammarAccess.getSecondaryComparisonAccess().getOpPrimaryComparisonOpParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SecondaryComparison__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSecondaryComparisonAccess().getRightDivisionParserRuleCall_1_2_0()); }
	ruleDivision{ after(grammarAccess.getSecondaryComparisonAccess().getRightDivisionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Division__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivisionAccess().getRightMultiplicationParserRuleCall_1_2_0()); }
	ruleMultiplication{ after(grammarAccess.getDivisionAccess().getRightMultiplicationParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getRightAdditionParserRuleCall_1_2_0()); }
	ruleAddition{ after(grammarAccess.getMultiplicationAccess().getRightAdditionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getRightSubtractionParserRuleCall_1_2_0()); }
	ruleSubtraction{ after(grammarAccess.getAdditionAccess().getRightSubtractionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Subtraction__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubtractionAccess().getRightPrimaryExpressionParserRuleCall_1_2_0()); }
	rulePrimaryExpression{ after(grammarAccess.getSubtractionAccess().getRightPrimaryExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__NameAssignment_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getNameFQNParserRuleCall_0_0_1_0()); }
	ruleFQN{ after(grammarAccess.getPrimaryExpressionAccess().getNameFQNParserRuleCall_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__LiteralValueAssignment_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLiteralValueLiteralValueParserRuleCall_0_1_1_0()); }
	ruleLiteralValue{ after(grammarAccess.getPrimaryExpressionAccess().getLiteralValueLiteralValueParserRuleCall_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__NotAssignment_0_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getNotNotKeyword_0_3_1_0()); }
(
{ before(grammarAccess.getPrimaryExpressionAccess().getNotNotKeyword_0_3_1_0()); }

	'not' 

{ after(grammarAccess.getPrimaryExpressionAccess().getNotNotKeyword_0_3_1_0()); }
)

{ after(grammarAccess.getPrimaryExpressionAccess().getNotNotKeyword_0_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ExistsAssignment_0_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getExistsExistsKeyword_0_3_2_0()); }
(
{ before(grammarAccess.getPrimaryExpressionAccess().getExistsExistsKeyword_0_3_2_0()); }

	'exists' 

{ after(grammarAccess.getPrimaryExpressionAccess().getExistsExistsKeyword_0_3_2_0()); }
)

{ after(grammarAccess.getPrimaryExpressionAccess().getExistsExistsKeyword_0_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__SelectAssignment_0_3_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getSelectSelectStatementParserRuleCall_0_3_4_0()); }
	ruleSelectStatement{ after(grammarAccess.getPrimaryExpressionAccess().getSelectSelectStatementParserRuleCall_0_3_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__CaseExpressionAssignment_0_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getCaseExpressionSqlExpressionParserRuleCall_0_4_2_0()); }
	ruleSqlExpression{ after(grammarAccess.getPrimaryExpressionAccess().getCaseExpressionSqlExpressionParserRuleCall_0_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__CasesAssignment_0_4_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getCasesCaseParserRuleCall_0_4_3_0()); }
	ruleCase{ after(grammarAccess.getPrimaryExpressionAccess().getCasesCaseParserRuleCall_0_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__CasesAssignment_0_4_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getCasesCaseParserRuleCall_0_4_4_0()); }
	ruleCase{ after(grammarAccess.getPrimaryExpressionAccess().getCasesCaseParserRuleCall_0_4_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ElseExpressionAssignment_0_4_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getElseExpressionSqlExpressionParserRuleCall_0_4_5_1_0()); }
	ruleSqlExpression{ after(grammarAccess.getPrimaryExpressionAccess().getElseExpressionSqlExpressionParserRuleCall_0_4_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__NameAssignment_0_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getNameIDTerminalRuleCall_0_5_1_0()); }
	RULE_ID{ after(grammarAccess.getPrimaryExpressionAccess().getNameIDTerminalRuleCall_0_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__AllAssignment_0_5_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getAllAsteriskKeyword_0_5_3_0_0()); }
(
{ before(grammarAccess.getPrimaryExpressionAccess().getAllAsteriskKeyword_0_5_3_0_0()); }

	'*' 

{ after(grammarAccess.getPrimaryExpressionAccess().getAllAsteriskKeyword_0_5_3_0_0()); }
)

{ after(grammarAccess.getPrimaryExpressionAccess().getAllAsteriskKeyword_0_5_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ArgumentsAssignment_0_5_3_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getArgumentsSqlExpressionParserRuleCall_0_5_3_1_0_0()); }
	ruleSqlExpression{ after(grammarAccess.getPrimaryExpressionAccess().getArgumentsSqlExpressionParserRuleCall_0_5_3_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ArugmentsAssignment_0_5_3_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getArugmentsSqlExpressionParserRuleCall_0_5_3_1_1_1_0()); }
	ruleSqlExpression{ after(grammarAccess.getPrimaryExpressionAccess().getArugmentsSqlExpressionParserRuleCall_0_5_3_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__IsnullAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getIsnullAlternatives_1_0()); }
(rule__PrimaryExpression__IsnullAlternatives_1_0)
{ after(grammarAccess.getPrimaryExpressionAccess().getIsnullAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Case__WhenExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getWhenExpressionSqlExpressionParserRuleCall_1_0()); }
	ruleSqlExpression{ after(grammarAccess.getCaseAccess().getWhenExpressionSqlExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Case__ThenExpressionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getThenExpressionSqlExpressionParserRuleCall_3_0()); }
	ruleSqlExpression{ after(grammarAccess.getCaseAccess().getThenExpressionSqlExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statment__NameAssignment_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatmentAccess().getNameIDTerminalRuleCall_0_3_0()); }
	RULE_ID{ after(grammarAccess.getStatmentAccess().getNameIDTerminalRuleCall_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statment__ColumnDefsAssignment_0_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatmentAccess().getColumnDefsColumnDefParserRuleCall_0_5_0()); }
	ruleColumnDef{ after(grammarAccess.getStatmentAccess().getColumnDefsColumnDefParserRuleCall_0_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statment__ColumnDefsAssignment_0_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatmentAccess().getColumnDefsColumnDefParserRuleCall_0_6_1_0()); }
	ruleColumnDef{ after(grammarAccess.getStatmentAccess().getColumnDefsColumnDefParserRuleCall_0_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statment__ConstraintsAssignment_0_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatmentAccess().getConstraintsTableConstraintParserRuleCall_0_7_1_0()); }
	ruleTableConstraint{ after(grammarAccess.getStatmentAccess().getConstraintsTableConstraintParserRuleCall_0_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statment__NameAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatmentAccess().getNameIDTerminalRuleCall_1_3_0()); }
	RULE_ID{ after(grammarAccess.getStatmentAccess().getNameIDTerminalRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statment__ClauseAssignment_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatmentAccess().getClauseAlterTableClauseParserRuleCall_1_4_0()); }
	ruleAlterTableClause{ after(grammarAccess.getStatmentAccess().getClauseAlterTableClauseParserRuleCall_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statment__NameAssignment_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatmentAccess().getNameIDTerminalRuleCall_2_3_0()); }
	RULE_ID{ after(grammarAccess.getStatmentAccess().getNameIDTerminalRuleCall_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statment__SelectStatementAssignment_2_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatmentAccess().getSelectStatementSelectStatementParserRuleCall_2_5_0()); }
	ruleSelectStatement{ after(grammarAccess.getStatmentAccess().getSelectStatementSelectStatementParserRuleCall_2_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statment__NameAssignment_3_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatmentAccess().getNameIDTerminalRuleCall_3_4_0()); }
	RULE_ID{ after(grammarAccess.getStatmentAccess().getNameIDTerminalRuleCall_3_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statment__NameAssignment_4_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatmentAccess().getNameIDTerminalRuleCall_4_4_0()); }
	RULE_ID{ after(grammarAccess.getStatmentAccess().getNameIDTerminalRuleCall_4_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AlterTableClause__NameAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlterTableClauseAccess().getNameIDTerminalRuleCall_0_2_0()); }
	RULE_ID{ after(grammarAccess.getAlterTableClauseAccess().getNameIDTerminalRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AlterTableClause__ColumnDefAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlterTableClauseAccess().getColumnDefColumnDefParserRuleCall_1_2_0()); }
	ruleColumnDef{ after(grammarAccess.getAlterTableClauseAccess().getColumnDefColumnDefParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnDef__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColumnDefAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getColumnDefAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnDef__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColumnDefAccess().getTypeColumnTypeEnumRuleCall_1_0()); }
	ruleColumnType{ after(grammarAccess.getColumnDefAccess().getTypeColumnTypeEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnDef__ConstraintsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColumnDefAccess().getConstraintsColumnConstraintParserRuleCall_2_0()); }
	ruleColumnConstraint{ after(grammarAccess.getColumnDefAccess().getConstraintsColumnConstraintParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnConstraint__AscAssignment_0_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColumnConstraintAccess().getAscAscKeyword_0_3_0_0()); }
(
{ before(grammarAccess.getColumnConstraintAccess().getAscAscKeyword_0_3_0_0()); }

	'asc' 

{ after(grammarAccess.getColumnConstraintAccess().getAscAscKeyword_0_3_0_0()); }
)

{ after(grammarAccess.getColumnConstraintAccess().getAscAscKeyword_0_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnConstraint__DescAssignment_0_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColumnConstraintAccess().getDescDescKeyword_0_3_1_0()); }
(
{ before(grammarAccess.getColumnConstraintAccess().getDescDescKeyword_0_3_1_0()); }

	'desc' 

{ after(grammarAccess.getColumnConstraintAccess().getDescDescKeyword_0_3_1_0()); }
)

{ after(grammarAccess.getColumnConstraintAccess().getDescDescKeyword_0_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnConstraint__AutoincrementAssignment_0_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColumnConstraintAccess().getAutoincrementAutoincrementKeyword_0_4_0()); }
(
{ before(grammarAccess.getColumnConstraintAccess().getAutoincrementAutoincrementKeyword_0_4_0()); }

	'autoincrement' 

{ after(grammarAccess.getColumnConstraintAccess().getAutoincrementAutoincrementKeyword_0_4_0()); }
)

{ after(grammarAccess.getColumnConstraintAccess().getAutoincrementAutoincrementKeyword_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnConstraint__ConflictClauseAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColumnConstraintAccess().getConflictClauseConflictClauseParserRuleCall_1_3_0()); }
	ruleConflictClause{ after(grammarAccess.getColumnConstraintAccess().getConflictClauseConflictClauseParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnConstraint__DefaultValueAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColumnConstraintAccess().getDefaultValueDefaultValueParserRuleCall_2_2_0()); }
	ruleDefaultValue{ after(grammarAccess.getColumnConstraintAccess().getDefaultValueDefaultValueParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultValue__LiteralAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultValueAccess().getLiteralLiteralValueParserRuleCall_0_1_0()); }
	ruleLiteralValue{ after(grammarAccess.getDefaultValueAccess().getLiteralLiteralValueParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultValue__ExpressionAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultValueAccess().getExpressionSqlExpressionParserRuleCall_1_2_0()); }
	ruleSqlExpression{ after(grammarAccess.getDefaultValueAccess().getExpressionSqlExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__NameAssignment_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getNameIDTerminalRuleCall_0_1_1_0()); }
	RULE_ID{ after(grammarAccess.getTableConstraintAccess().getNameIDTerminalRuleCall_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__ColumnsAssignment_0_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getColumnsIndexedColumnParserRuleCall_0_4_0()); }
	ruleIndexedColumn{ after(grammarAccess.getTableConstraintAccess().getColumnsIndexedColumnParserRuleCall_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__ColumnsAssignment_0_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getColumnsIndexedColumnParserRuleCall_0_5_1_0()); }
	ruleIndexedColumn{ after(grammarAccess.getTableConstraintAccess().getColumnsIndexedColumnParserRuleCall_0_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__ConflictClauseAssignment_0_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getConflictClauseConflictClauseParserRuleCall_0_7_0()); }
	ruleConflictClause{ after(grammarAccess.getTableConstraintAccess().getConflictClauseConflictClauseParserRuleCall_0_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__NameAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getNameIDTerminalRuleCall_1_1_1_0()); }
	RULE_ID{ after(grammarAccess.getTableConstraintAccess().getNameIDTerminalRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__ColumnsAssignment_1_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getColumnsIndexedColumnParserRuleCall_1_5_0()); }
	ruleIndexedColumn{ after(grammarAccess.getTableConstraintAccess().getColumnsIndexedColumnParserRuleCall_1_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__ColumnsAssignment_1_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getColumnsIndexedColumnParserRuleCall_1_6_1_0()); }
	ruleIndexedColumn{ after(grammarAccess.getTableConstraintAccess().getColumnsIndexedColumnParserRuleCall_1_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__ConflictClauseAssignment_1_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getConflictClauseConflictClauseParserRuleCall_1_8_0()); }
	ruleConflictClause{ after(grammarAccess.getTableConstraintAccess().getConflictClauseConflictClauseParserRuleCall_1_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__NameAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getNameIDTerminalRuleCall_2_1_1_0()); }
	RULE_ID{ after(grammarAccess.getTableConstraintAccess().getNameIDTerminalRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TableConstraint__ExpressionAssignment_2_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableConstraintAccess().getExpressionSqlExpressionParserRuleCall_2_4_0()); }
	ruleSqlExpression{ after(grammarAccess.getTableConstraintAccess().getExpressionSqlExpressionParserRuleCall_2_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IndexedColumn__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexedColumnAccess().getNameColumnDefCrossReference_0_0()); }
(
{ before(grammarAccess.getIndexedColumnAccess().getNameColumnDefIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getIndexedColumnAccess().getNameColumnDefIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getIndexedColumnAccess().getNameColumnDefCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IndexedColumn__AscAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexedColumnAccess().getAscAscKeyword_1_0_0()); }
(
{ before(grammarAccess.getIndexedColumnAccess().getAscAscKeyword_1_0_0()); }

	'asc' 

{ after(grammarAccess.getIndexedColumnAccess().getAscAscKeyword_1_0_0()); }
)

{ after(grammarAccess.getIndexedColumnAccess().getAscAscKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IndexedColumn__DescAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexedColumnAccess().getDescDescKeyword_1_1_0()); }
(
{ before(grammarAccess.getIndexedColumnAccess().getDescDescKeyword_1_1_0()); }

	'desc' 

{ after(grammarAccess.getIndexedColumnAccess().getDescDescKeyword_1_1_0()); }
)

{ after(grammarAccess.getIndexedColumnAccess().getDescDescKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__CoreStatementsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectStatementAccess().getCoreStatementsSelectCoreParserRuleCall_0_0()); }
	ruleSelectCore{ after(grammarAccess.getSelectStatementAccess().getCoreStatementsSelectCoreParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__CoreStatementsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectStatementAccess().getCoreStatementsSelectCoreParserRuleCall_1_1_0()); }
	ruleSelectCore{ after(grammarAccess.getSelectStatementAccess().getCoreStatementsSelectCoreParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__OrderingTermsAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectStatementAccess().getOrderingTermsOrderingTermParserRuleCall_2_2_0()); }
	ruleOrderingTerm{ after(grammarAccess.getSelectStatementAccess().getOrderingTermsOrderingTermParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__OrderingTermsAssignment_2_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectStatementAccess().getOrderingTermsOrderingTermParserRuleCall_2_3_1_0()); }
	ruleOrderingTerm{ after(grammarAccess.getSelectStatementAccess().getOrderingTermsOrderingTermParserRuleCall_2_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrderingTerm__ExpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrderingTermAccess().getExpressionSqlExpressionParserRuleCall_0_0()); }
	ruleSqlExpression{ after(grammarAccess.getOrderingTermAccess().getExpressionSqlExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrderingTerm__AscAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrderingTermAccess().getAscAscKeyword_1_0_0()); }
(
{ before(grammarAccess.getOrderingTermAccess().getAscAscKeyword_1_0_0()); }

	'asc' 

{ after(grammarAccess.getOrderingTermAccess().getAscAscKeyword_1_0_0()); }
)

{ after(grammarAccess.getOrderingTermAccess().getAscAscKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrderingTerm__DescAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrderingTermAccess().getDescDescKeyword_1_1_0()); }
(
{ before(grammarAccess.getOrderingTermAccess().getDescDescKeyword_1_1_0()); }

	'desc' 

{ after(grammarAccess.getOrderingTermAccess().getDescDescKeyword_1_1_0()); }
)

{ after(grammarAccess.getOrderingTermAccess().getDescDescKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCore__DistinctAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreAccess().getDistinctDistinctKeyword_1_0_0()); }
(
{ before(grammarAccess.getSelectCoreAccess().getDistinctDistinctKeyword_1_0_0()); }

	'distinct' 

{ after(grammarAccess.getSelectCoreAccess().getDistinctDistinctKeyword_1_0_0()); }
)

{ after(grammarAccess.getSelectCoreAccess().getDistinctDistinctKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCore__AllAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreAccess().getAllAllKeyword_1_1_0()); }
(
{ before(grammarAccess.getSelectCoreAccess().getAllAllKeyword_1_1_0()); }

	'all' 

{ after(grammarAccess.getSelectCoreAccess().getAllAllKeyword_1_1_0()); }
)

{ after(grammarAccess.getSelectCoreAccess().getAllAllKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCore__ResultColumnsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreAccess().getResultColumnsResultColumnParserRuleCall_2_0()); }
	ruleResultColumn{ after(grammarAccess.getSelectCoreAccess().getResultColumnsResultColumnParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCore__ResultColumnsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreAccess().getResultColumnsResultColumnParserRuleCall_3_1_0()); }
	ruleResultColumn{ after(grammarAccess.getSelectCoreAccess().getResultColumnsResultColumnParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCore__SourceAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreAccess().getSourceJoinSourceParserRuleCall_4_1_0()); }
	ruleJoinSource{ after(grammarAccess.getSelectCoreAccess().getSourceJoinSourceParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCore__WhereExpressionAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreAccess().getWhereExpressionSqlExpressionParserRuleCall_5_1_0()); }
	ruleSqlExpression{ after(grammarAccess.getSelectCoreAccess().getWhereExpressionSqlExpressionParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCore__GroupByExpressionsAssignment_6_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreAccess().getGroupByExpressionsSqlExpressionParserRuleCall_6_2_0()); }
	ruleSqlExpression{ after(grammarAccess.getSelectCoreAccess().getGroupByExpressionsSqlExpressionParserRuleCall_6_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCore__GroupByExpressionsAssignment_6_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectCoreAccess().getGroupByExpressionsSqlExpressionParserRuleCall_6_3_1_0()); }
	ruleSqlExpression{ after(grammarAccess.getSelectCoreAccess().getGroupByExpressionsSqlExpressionParserRuleCall_6_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JoinSource__SourceAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinSourceAccess().getSourceSingleSourceParserRuleCall_0_0()); }
	ruleSingleSource{ after(grammarAccess.getJoinSourceAccess().getSourceSingleSourceParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JoinSource__JoinStatementsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinSourceAccess().getJoinStatementsJoinStatementParserRuleCall_1_0()); }
	ruleJoinStatement{ after(grammarAccess.getJoinSourceAccess().getJoinStatementsJoinStatementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SingleSource__TableNameAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleSourceAccess().getTableNameIDTerminalRuleCall_0_1_0()); }
	RULE_ID{ after(grammarAccess.getSingleSourceAccess().getTableNameIDTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SingleSource__NameAssignment_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleSourceAccess().getNameIDTerminalRuleCall_0_2_1_0()); }
	RULE_ID{ after(grammarAccess.getSingleSourceAccess().getNameIDTerminalRuleCall_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SingleSource__SelectStatementAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleSourceAccess().getSelectStatementSelectStatementParserRuleCall_1_2_0()); }
	ruleSelectStatement{ after(grammarAccess.getSingleSourceAccess().getSelectStatementSelectStatementParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SingleSource__JoinSourceAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleSourceAccess().getJoinSourceJoinSourceParserRuleCall_2_2_0()); }
	ruleJoinSource{ after(grammarAccess.getSingleSourceAccess().getJoinSourceJoinSourceParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStatement__NaturalAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinStatementAccess().getNaturalNaturalKeyword_1_0()); }
(
{ before(grammarAccess.getJoinStatementAccess().getNaturalNaturalKeyword_1_0()); }

	'natural' 

{ after(grammarAccess.getJoinStatementAccess().getNaturalNaturalKeyword_1_0()); }
)

{ after(grammarAccess.getJoinStatementAccess().getNaturalNaturalKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStatement__LeftAssignment_2_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinStatementAccess().getLeftLeftKeyword_2_0_0_0()); }
(
{ before(grammarAccess.getJoinStatementAccess().getLeftLeftKeyword_2_0_0_0()); }

	'left' 

{ after(grammarAccess.getJoinStatementAccess().getLeftLeftKeyword_2_0_0_0()); }
)

{ after(grammarAccess.getJoinStatementAccess().getLeftLeftKeyword_2_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStatement__OuterAssignment_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinStatementAccess().getOuterOuterKeyword_2_0_1_0()); }
(
{ before(grammarAccess.getJoinStatementAccess().getOuterOuterKeyword_2_0_1_0()); }

	'outer' 

{ after(grammarAccess.getJoinStatementAccess().getOuterOuterKeyword_2_0_1_0()); }
)

{ after(grammarAccess.getJoinStatementAccess().getOuterOuterKeyword_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStatement__InnerAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinStatementAccess().getInnerInnerKeyword_2_1_0()); }
(
{ before(grammarAccess.getJoinStatementAccess().getInnerInnerKeyword_2_1_0()); }

	'inner' 

{ after(grammarAccess.getJoinStatementAccess().getInnerInnerKeyword_2_1_0()); }
)

{ after(grammarAccess.getJoinStatementAccess().getInnerInnerKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStatement__CrossAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinStatementAccess().getCrossCrossKeyword_2_2_0()); }
(
{ before(grammarAccess.getJoinStatementAccess().getCrossCrossKeyword_2_2_0()); }

	'cross' 

{ after(grammarAccess.getJoinStatementAccess().getCrossCrossKeyword_2_2_0()); }
)

{ after(grammarAccess.getJoinStatementAccess().getCrossCrossKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStatement__SingleSourceAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinStatementAccess().getSingleSourceSingleSourceParserRuleCall_4_0()); }
	ruleSingleSource{ after(grammarAccess.getJoinStatementAccess().getSingleSourceSingleSourceParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JoinStatement__ExpressionAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinStatementAccess().getExpressionSqlExpressionParserRuleCall_6_0()); }
	ruleSqlExpression{ after(grammarAccess.getJoinStatementAccess().getExpressionSqlExpressionParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ResultColumn__TableRefAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResultColumnAccess().getTableRefIDTerminalRuleCall_1_1_0()); }
	RULE_ID{ after(grammarAccess.getResultColumnAccess().getTableRefIDTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ResultColumn__ExpressionAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResultColumnAccess().getExpressionSqlExpressionParserRuleCall_2_1_0()); }
	ruleSqlExpression{ after(grammarAccess.getResultColumnAccess().getExpressionSqlExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ResultColumn__NameAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResultColumnAccess().getNameIDTerminalRuleCall_2_2_1_0()); }
	RULE_ID{ after(grammarAccess.getResultColumnAccess().getNameIDTerminalRuleCall_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictClause__ResolutionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConflictClauseAccess().getResolutionConflictResolutionEnumRuleCall_2_0()); }
	ruleConflictResolution{ after(grammarAccess.getConflictClauseAccess().getResolutionConflictResolutionEnumRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__NumberAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralValueAccess().getNumberSignedNumberParserRuleCall_0_1_0()); }
	ruleSignedNumber{ after(grammarAccess.getLiteralValueAccess().getNumberSignedNumberParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__LiteralAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralValueAccess().getLiteralSTRINGTerminalRuleCall_1_1_0()); }
	RULE_STRING{ after(grammarAccess.getLiteralValueAccess().getLiteralSTRINGTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__LiteralAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralValueAccess().getLiteralNullKeyword_2_1_0()); }
(
{ before(grammarAccess.getLiteralValueAccess().getLiteralNullKeyword_2_1_0()); }

	'null' 

{ after(grammarAccess.getLiteralValueAccess().getLiteralNullKeyword_2_1_0()); }
)

{ after(grammarAccess.getLiteralValueAccess().getLiteralNullKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__LiteralAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralValueAccess().getLiteralCurrent_timeKeyword_3_1_0()); }
(
{ before(grammarAccess.getLiteralValueAccess().getLiteralCurrent_timeKeyword_3_1_0()); }

	'current_time' 

{ after(grammarAccess.getLiteralValueAccess().getLiteralCurrent_timeKeyword_3_1_0()); }
)

{ after(grammarAccess.getLiteralValueAccess().getLiteralCurrent_timeKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__LiteralAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralValueAccess().getLiteralCurrent_dateKeyword_4_1_0()); }
(
{ before(grammarAccess.getLiteralValueAccess().getLiteralCurrent_dateKeyword_4_1_0()); }

	'current_date' 

{ after(grammarAccess.getLiteralValueAccess().getLiteralCurrent_dateKeyword_4_1_0()); }
)

{ after(grammarAccess.getLiteralValueAccess().getLiteralCurrent_dateKeyword_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__LiteralAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralValueAccess().getLiteralCurrent_time_stampKeyword_5_1_0()); }
(
{ before(grammarAccess.getLiteralValueAccess().getLiteralCurrent_time_stampKeyword_5_1_0()); }

	'current_time_stamp' 

{ after(grammarAccess.getLiteralValueAccess().getLiteralCurrent_time_stampKeyword_5_1_0()); }
)

{ after(grammarAccess.getLiteralValueAccess().getLiteralCurrent_time_stampKeyword_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_NUMBER : ('0'..'9')* ('.' ('0'..'9')+)?;

RULE_INT : '$$$don\'t use this anymore$$$';

RULE_STRING : '\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


